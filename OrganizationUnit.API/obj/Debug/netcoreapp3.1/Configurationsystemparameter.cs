// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/configurationsystemparameter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OrganizationUnit.API.Protos.Configurations {

  /// <summary>Holder for reflection information generated from Protos/configurationsystemparameter.proto</summary>
  public static partial class ConfigurationsystemparameterReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/configurationsystemparameter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConfigurationsystemparameterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilQcm90b3MvY29uZmlndXJhdGlvbnN5c3RlbXBhcmFtZXRlci5wcm90bxIi",
            "T3JnYW5pemF0aW9uVW5pdEFQSS5Db25maWd1cmF0aW9ucxoeZ29vZ2xlL3By",
            "b3RvYnVmL3dyYXBwZXJzLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHku",
            "cHJvdG8ihAgKIFN5c3RlbUNvbmZpZ3VyYXRpb25QYXJhbXNHcnBjRFRPEjwK",
            "F2NoYW5nZVJlY29yZEV4cG9ydEV4Y2VsGAEgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDMyVmFsdWUSOgoVY2hhbmdlUmVjb3JkRXhwb3J0UGRmGAIgASgL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSNgoQb3JnYW5pemF0aW9u",
            "VW5pdBgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRItCgdh",
            "ZGRyZXNzGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi0K",
            "B3RheENvZGUYBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "MQoLYmFua0FjY291bnQYBiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUSOgoUdGVsZXBob25lU3dpdGNoYm9hcmQYByABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSPgoYcmVwcmVzZW50YXRpdmVQZXJzb25O",
            "YW1lGAggASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjAKCnJw",
            "UG9zaXRpb24YCSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "PwoZYXV0aG9yaXphdGlvbkxldHRlck51bWJlchgKIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZRI0Cg50cmFkaW5nQWRkcmVzcxgLIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRItCgd3ZWJzaXRlGAwgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjYKEW51bWJlckRheXNC",
            "YWREZWJ0GA0gASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSNgoR",
            "bnVtYmVyRGF5c092ZXJkdWUYDiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50",
            "MzJWYWx1ZRJAChtub3RpZnlDaGFubmVsRXhwaXJhdGlvbkRheXMYDyABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIuCghiYW5rTmFtZRgQIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIwCgpiYW5rQnJhbmNo",
            "GBEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjUKEGNPRENv",
            "bGxlY3Rpb25GZWUYEiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1",
            "ZTLrAQogQ29uZmlndXJhdGlvblN5c3RlbVBhcmFtZXRlckdycGMSTQoUR2V0",
            "TnVtYmVyRGF5c0JhZERlYnQSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaGy5n",
            "b29nbGUucHJvdG9idWYuSW50MzJWYWx1ZSIAEngKFkdldFN5c3RlbUNvbmZp",
            "Z3VyYXRpb24SFi5nb29nbGUucHJvdG9idWYuRW1wdHkaRC5Pcmdhbml6YXRp",
            "b25Vbml0QVBJLkNvbmZpZ3VyYXRpb25zLlN5c3RlbUNvbmZpZ3VyYXRpb25Q",
            "YXJhbXNHcnBjRFRPIgBCLaoCKk9yZ2FuaXphdGlvblVuaXQuQVBJLlByb3Rv",
            "cy5Db25maWd1cmF0aW9uc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OrganizationUnit.API.Protos.Configurations.SystemConfigurationParamsGrpcDTO), global::OrganizationUnit.API.Protos.Configurations.SystemConfigurationParamsGrpcDTO.Parser, new[]{ "ChangeRecordExportExcel", "ChangeRecordExportPdf", "OrganizationUnit", "Address", "TaxCode", "BankAccount", "TelephoneSwitchboard", "RepresentativePersonName", "RpPosition", "AuthorizationLetterNumber", "TradingAddress", "Website", "NumberDaysBadDebt", "NumberDaysOverdue", "NotifyChannelExpirationDays", "BankName", "BankBranch", "CODCollectionFee" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SystemConfigurationParamsGrpcDTO : pb::IMessage<SystemConfigurationParamsGrpcDTO> {
    private static readonly pb::MessageParser<SystemConfigurationParamsGrpcDTO> _parser = new pb::MessageParser<SystemConfigurationParamsGrpcDTO>(() => new SystemConfigurationParamsGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SystemConfigurationParamsGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OrganizationUnit.API.Protos.Configurations.ConfigurationsystemparameterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemConfigurationParamsGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemConfigurationParamsGrpcDTO(SystemConfigurationParamsGrpcDTO other) : this() {
      ChangeRecordExportExcel = other.ChangeRecordExportExcel;
      ChangeRecordExportPdf = other.ChangeRecordExportPdf;
      OrganizationUnit = other.OrganizationUnit;
      Address = other.Address;
      TaxCode = other.TaxCode;
      BankAccount = other.BankAccount;
      TelephoneSwitchboard = other.TelephoneSwitchboard;
      RepresentativePersonName = other.RepresentativePersonName;
      RpPosition = other.RpPosition;
      AuthorizationLetterNumber = other.AuthorizationLetterNumber;
      TradingAddress = other.TradingAddress;
      Website = other.Website;
      NumberDaysBadDebt = other.NumberDaysBadDebt;
      NumberDaysOverdue = other.NumberDaysOverdue;
      NotifyChannelExpirationDays = other.NotifyChannelExpirationDays;
      BankName = other.BankName;
      BankBranch = other.BankBranch;
      CODCollectionFee = other.CODCollectionFee;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SystemConfigurationParamsGrpcDTO Clone() {
      return new SystemConfigurationParamsGrpcDTO(this);
    }

    /// <summary>Field number for the "changeRecordExportExcel" field.</summary>
    public const int ChangeRecordExportExcelFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_changeRecordExportExcel_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? changeRecordExportExcel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ChangeRecordExportExcel {
      get { return changeRecordExportExcel_; }
      set {
        changeRecordExportExcel_ = value;
      }
    }


    /// <summary>Field number for the "changeRecordExportPdf" field.</summary>
    public const int ChangeRecordExportPdfFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_changeRecordExportPdf_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? changeRecordExportPdf_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ChangeRecordExportPdf {
      get { return changeRecordExportPdf_; }
      set {
        changeRecordExportPdf_ = value;
      }
    }


    /// <summary>Field number for the "organizationUnit" field.</summary>
    public const int OrganizationUnitFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_organizationUnit_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string organizationUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganizationUnit {
      get { return organizationUnit_; }
      set {
        organizationUnit_ = value;
      }
    }


    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_address_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }


    /// <summary>Field number for the "taxCode" field.</summary>
    public const int TaxCodeFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_taxCode_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string taxCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaxCode {
      get { return taxCode_; }
      set {
        taxCode_ = value;
      }
    }


    /// <summary>Field number for the "bankAccount" field.</summary>
    public const int BankAccountFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_bankAccount_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string bankAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankAccount {
      get { return bankAccount_; }
      set {
        bankAccount_ = value;
      }
    }


    /// <summary>Field number for the "telephoneSwitchboard" field.</summary>
    public const int TelephoneSwitchboardFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_telephoneSwitchboard_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string telephoneSwitchboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TelephoneSwitchboard {
      get { return telephoneSwitchboard_; }
      set {
        telephoneSwitchboard_ = value;
      }
    }


    /// <summary>Field number for the "representativePersonName" field.</summary>
    public const int RepresentativePersonNameFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_representativePersonName_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string representativePersonName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepresentativePersonName {
      get { return representativePersonName_; }
      set {
        representativePersonName_ = value;
      }
    }


    /// <summary>Field number for the "rpPosition" field.</summary>
    public const int RpPositionFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_rpPosition_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string rpPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RpPosition {
      get { return rpPosition_; }
      set {
        rpPosition_ = value;
      }
    }


    /// <summary>Field number for the "authorizationLetterNumber" field.</summary>
    public const int AuthorizationLetterNumberFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_authorizationLetterNumber_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string authorizationLetterNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorizationLetterNumber {
      get { return authorizationLetterNumber_; }
      set {
        authorizationLetterNumber_ = value;
      }
    }


    /// <summary>Field number for the "tradingAddress" field.</summary>
    public const int TradingAddressFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_tradingAddress_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string tradingAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TradingAddress {
      get { return tradingAddress_; }
      set {
        tradingAddress_ = value;
      }
    }


    /// <summary>Field number for the "website" field.</summary>
    public const int WebsiteFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_website_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string website_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Website {
      get { return website_; }
      set {
        website_ = value;
      }
    }


    /// <summary>Field number for the "numberDaysBadDebt" field.</summary>
    public const int NumberDaysBadDebtFieldNumber = 13;
    private static readonly pb::FieldCodec<int?> _single_numberDaysBadDebt_codec = pb::FieldCodec.ForStructWrapper<int>(106);
    private int? numberDaysBadDebt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? NumberDaysBadDebt {
      get { return numberDaysBadDebt_; }
      set {
        numberDaysBadDebt_ = value;
      }
    }


    /// <summary>Field number for the "numberDaysOverdue" field.</summary>
    public const int NumberDaysOverdueFieldNumber = 14;
    private static readonly pb::FieldCodec<int?> _single_numberDaysOverdue_codec = pb::FieldCodec.ForStructWrapper<int>(114);
    private int? numberDaysOverdue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? NumberDaysOverdue {
      get { return numberDaysOverdue_; }
      set {
        numberDaysOverdue_ = value;
      }
    }


    /// <summary>Field number for the "notifyChannelExpirationDays" field.</summary>
    public const int NotifyChannelExpirationDaysFieldNumber = 15;
    private static readonly pb::FieldCodec<int?> _single_notifyChannelExpirationDays_codec = pb::FieldCodec.ForStructWrapper<int>(122);
    private int? notifyChannelExpirationDays_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? NotifyChannelExpirationDays {
      get { return notifyChannelExpirationDays_; }
      set {
        notifyChannelExpirationDays_ = value;
      }
    }


    /// <summary>Field number for the "bankName" field.</summary>
    public const int BankNameFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_bankName_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string bankName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankName {
      get { return bankName_; }
      set {
        bankName_ = value;
      }
    }


    /// <summary>Field number for the "bankBranch" field.</summary>
    public const int BankBranchFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _single_bankBranch_codec = pb::FieldCodec.ForClassWrapper<string>(138);
    private string bankBranch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankBranch {
      get { return bankBranch_; }
      set {
        bankBranch_ = value;
      }
    }


    /// <summary>Field number for the "cODCollectionFee" field.</summary>
    public const int CODCollectionFeeFieldNumber = 18;
    private static readonly pb::FieldCodec<int?> _single_cODCollectionFee_codec = pb::FieldCodec.ForStructWrapper<int>(146);
    private int? cODCollectionFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? CODCollectionFee {
      get { return cODCollectionFee_; }
      set {
        cODCollectionFee_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SystemConfigurationParamsGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SystemConfigurationParamsGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChangeRecordExportExcel != other.ChangeRecordExportExcel) return false;
      if (ChangeRecordExportPdf != other.ChangeRecordExportPdf) return false;
      if (OrganizationUnit != other.OrganizationUnit) return false;
      if (Address != other.Address) return false;
      if (TaxCode != other.TaxCode) return false;
      if (BankAccount != other.BankAccount) return false;
      if (TelephoneSwitchboard != other.TelephoneSwitchboard) return false;
      if (RepresentativePersonName != other.RepresentativePersonName) return false;
      if (RpPosition != other.RpPosition) return false;
      if (AuthorizationLetterNumber != other.AuthorizationLetterNumber) return false;
      if (TradingAddress != other.TradingAddress) return false;
      if (Website != other.Website) return false;
      if (NumberDaysBadDebt != other.NumberDaysBadDebt) return false;
      if (NumberDaysOverdue != other.NumberDaysOverdue) return false;
      if (NotifyChannelExpirationDays != other.NotifyChannelExpirationDays) return false;
      if (BankName != other.BankName) return false;
      if (BankBranch != other.BankBranch) return false;
      if (CODCollectionFee != other.CODCollectionFee) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (changeRecordExportExcel_ != null) hash ^= ChangeRecordExportExcel.GetHashCode();
      if (changeRecordExportPdf_ != null) hash ^= ChangeRecordExportPdf.GetHashCode();
      if (organizationUnit_ != null) hash ^= OrganizationUnit.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (taxCode_ != null) hash ^= TaxCode.GetHashCode();
      if (bankAccount_ != null) hash ^= BankAccount.GetHashCode();
      if (telephoneSwitchboard_ != null) hash ^= TelephoneSwitchboard.GetHashCode();
      if (representativePersonName_ != null) hash ^= RepresentativePersonName.GetHashCode();
      if (rpPosition_ != null) hash ^= RpPosition.GetHashCode();
      if (authorizationLetterNumber_ != null) hash ^= AuthorizationLetterNumber.GetHashCode();
      if (tradingAddress_ != null) hash ^= TradingAddress.GetHashCode();
      if (website_ != null) hash ^= Website.GetHashCode();
      if (numberDaysBadDebt_ != null) hash ^= NumberDaysBadDebt.GetHashCode();
      if (numberDaysOverdue_ != null) hash ^= NumberDaysOverdue.GetHashCode();
      if (notifyChannelExpirationDays_ != null) hash ^= NotifyChannelExpirationDays.GetHashCode();
      if (bankName_ != null) hash ^= BankName.GetHashCode();
      if (bankBranch_ != null) hash ^= BankBranch.GetHashCode();
      if (cODCollectionFee_ != null) hash ^= CODCollectionFee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (changeRecordExportExcel_ != null) {
        _single_changeRecordExportExcel_codec.WriteTagAndValue(output, ChangeRecordExportExcel);
      }
      if (changeRecordExportPdf_ != null) {
        _single_changeRecordExportPdf_codec.WriteTagAndValue(output, ChangeRecordExportPdf);
      }
      if (organizationUnit_ != null) {
        _single_organizationUnit_codec.WriteTagAndValue(output, OrganizationUnit);
      }
      if (address_ != null) {
        _single_address_codec.WriteTagAndValue(output, Address);
      }
      if (taxCode_ != null) {
        _single_taxCode_codec.WriteTagAndValue(output, TaxCode);
      }
      if (bankAccount_ != null) {
        _single_bankAccount_codec.WriteTagAndValue(output, BankAccount);
      }
      if (telephoneSwitchboard_ != null) {
        _single_telephoneSwitchboard_codec.WriteTagAndValue(output, TelephoneSwitchboard);
      }
      if (representativePersonName_ != null) {
        _single_representativePersonName_codec.WriteTagAndValue(output, RepresentativePersonName);
      }
      if (rpPosition_ != null) {
        _single_rpPosition_codec.WriteTagAndValue(output, RpPosition);
      }
      if (authorizationLetterNumber_ != null) {
        _single_authorizationLetterNumber_codec.WriteTagAndValue(output, AuthorizationLetterNumber);
      }
      if (tradingAddress_ != null) {
        _single_tradingAddress_codec.WriteTagAndValue(output, TradingAddress);
      }
      if (website_ != null) {
        _single_website_codec.WriteTagAndValue(output, Website);
      }
      if (numberDaysBadDebt_ != null) {
        _single_numberDaysBadDebt_codec.WriteTagAndValue(output, NumberDaysBadDebt);
      }
      if (numberDaysOverdue_ != null) {
        _single_numberDaysOverdue_codec.WriteTagAndValue(output, NumberDaysOverdue);
      }
      if (notifyChannelExpirationDays_ != null) {
        _single_notifyChannelExpirationDays_codec.WriteTagAndValue(output, NotifyChannelExpirationDays);
      }
      if (bankName_ != null) {
        _single_bankName_codec.WriteTagAndValue(output, BankName);
      }
      if (bankBranch_ != null) {
        _single_bankBranch_codec.WriteTagAndValue(output, BankBranch);
      }
      if (cODCollectionFee_ != null) {
        _single_cODCollectionFee_codec.WriteTagAndValue(output, CODCollectionFee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (changeRecordExportExcel_ != null) {
        size += _single_changeRecordExportExcel_codec.CalculateSizeWithTag(ChangeRecordExportExcel);
      }
      if (changeRecordExportPdf_ != null) {
        size += _single_changeRecordExportPdf_codec.CalculateSizeWithTag(ChangeRecordExportPdf);
      }
      if (organizationUnit_ != null) {
        size += _single_organizationUnit_codec.CalculateSizeWithTag(OrganizationUnit);
      }
      if (address_ != null) {
        size += _single_address_codec.CalculateSizeWithTag(Address);
      }
      if (taxCode_ != null) {
        size += _single_taxCode_codec.CalculateSizeWithTag(TaxCode);
      }
      if (bankAccount_ != null) {
        size += _single_bankAccount_codec.CalculateSizeWithTag(BankAccount);
      }
      if (telephoneSwitchboard_ != null) {
        size += _single_telephoneSwitchboard_codec.CalculateSizeWithTag(TelephoneSwitchboard);
      }
      if (representativePersonName_ != null) {
        size += _single_representativePersonName_codec.CalculateSizeWithTag(RepresentativePersonName);
      }
      if (rpPosition_ != null) {
        size += _single_rpPosition_codec.CalculateSizeWithTag(RpPosition);
      }
      if (authorizationLetterNumber_ != null) {
        size += _single_authorizationLetterNumber_codec.CalculateSizeWithTag(AuthorizationLetterNumber);
      }
      if (tradingAddress_ != null) {
        size += _single_tradingAddress_codec.CalculateSizeWithTag(TradingAddress);
      }
      if (website_ != null) {
        size += _single_website_codec.CalculateSizeWithTag(Website);
      }
      if (numberDaysBadDebt_ != null) {
        size += _single_numberDaysBadDebt_codec.CalculateSizeWithTag(NumberDaysBadDebt);
      }
      if (numberDaysOverdue_ != null) {
        size += _single_numberDaysOverdue_codec.CalculateSizeWithTag(NumberDaysOverdue);
      }
      if (notifyChannelExpirationDays_ != null) {
        size += _single_notifyChannelExpirationDays_codec.CalculateSizeWithTag(NotifyChannelExpirationDays);
      }
      if (bankName_ != null) {
        size += _single_bankName_codec.CalculateSizeWithTag(BankName);
      }
      if (bankBranch_ != null) {
        size += _single_bankBranch_codec.CalculateSizeWithTag(BankBranch);
      }
      if (cODCollectionFee_ != null) {
        size += _single_cODCollectionFee_codec.CalculateSizeWithTag(CODCollectionFee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SystemConfigurationParamsGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.changeRecordExportExcel_ != null) {
        if (changeRecordExportExcel_ == null || other.ChangeRecordExportExcel != 0) {
          ChangeRecordExportExcel = other.ChangeRecordExportExcel;
        }
      }
      if (other.changeRecordExportPdf_ != null) {
        if (changeRecordExportPdf_ == null || other.ChangeRecordExportPdf != 0) {
          ChangeRecordExportPdf = other.ChangeRecordExportPdf;
        }
      }
      if (other.organizationUnit_ != null) {
        if (organizationUnit_ == null || other.OrganizationUnit != "") {
          OrganizationUnit = other.OrganizationUnit;
        }
      }
      if (other.address_ != null) {
        if (address_ == null || other.Address != "") {
          Address = other.Address;
        }
      }
      if (other.taxCode_ != null) {
        if (taxCode_ == null || other.TaxCode != "") {
          TaxCode = other.TaxCode;
        }
      }
      if (other.bankAccount_ != null) {
        if (bankAccount_ == null || other.BankAccount != "") {
          BankAccount = other.BankAccount;
        }
      }
      if (other.telephoneSwitchboard_ != null) {
        if (telephoneSwitchboard_ == null || other.TelephoneSwitchboard != "") {
          TelephoneSwitchboard = other.TelephoneSwitchboard;
        }
      }
      if (other.representativePersonName_ != null) {
        if (representativePersonName_ == null || other.RepresentativePersonName != "") {
          RepresentativePersonName = other.RepresentativePersonName;
        }
      }
      if (other.rpPosition_ != null) {
        if (rpPosition_ == null || other.RpPosition != "") {
          RpPosition = other.RpPosition;
        }
      }
      if (other.authorizationLetterNumber_ != null) {
        if (authorizationLetterNumber_ == null || other.AuthorizationLetterNumber != "") {
          AuthorizationLetterNumber = other.AuthorizationLetterNumber;
        }
      }
      if (other.tradingAddress_ != null) {
        if (tradingAddress_ == null || other.TradingAddress != "") {
          TradingAddress = other.TradingAddress;
        }
      }
      if (other.website_ != null) {
        if (website_ == null || other.Website != "") {
          Website = other.Website;
        }
      }
      if (other.numberDaysBadDebt_ != null) {
        if (numberDaysBadDebt_ == null || other.NumberDaysBadDebt != 0) {
          NumberDaysBadDebt = other.NumberDaysBadDebt;
        }
      }
      if (other.numberDaysOverdue_ != null) {
        if (numberDaysOverdue_ == null || other.NumberDaysOverdue != 0) {
          NumberDaysOverdue = other.NumberDaysOverdue;
        }
      }
      if (other.notifyChannelExpirationDays_ != null) {
        if (notifyChannelExpirationDays_ == null || other.NotifyChannelExpirationDays != 0) {
          NotifyChannelExpirationDays = other.NotifyChannelExpirationDays;
        }
      }
      if (other.bankName_ != null) {
        if (bankName_ == null || other.BankName != "") {
          BankName = other.BankName;
        }
      }
      if (other.bankBranch_ != null) {
        if (bankBranch_ == null || other.BankBranch != "") {
          BankBranch = other.BankBranch;
        }
      }
      if (other.cODCollectionFee_ != null) {
        if (cODCollectionFee_ == null || other.CODCollectionFee != 0) {
          CODCollectionFee = other.CODCollectionFee;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_changeRecordExportExcel_codec.Read(input);
            if (changeRecordExportExcel_ == null || value != 0) {
              ChangeRecordExportExcel = value;
            }
            break;
          }
          case 18: {
            int? value = _single_changeRecordExportPdf_codec.Read(input);
            if (changeRecordExportPdf_ == null || value != 0) {
              ChangeRecordExportPdf = value;
            }
            break;
          }
          case 26: {
            string value = _single_organizationUnit_codec.Read(input);
            if (organizationUnit_ == null || value != "") {
              OrganizationUnit = value;
            }
            break;
          }
          case 34: {
            string value = _single_address_codec.Read(input);
            if (address_ == null || value != "") {
              Address = value;
            }
            break;
          }
          case 42: {
            string value = _single_taxCode_codec.Read(input);
            if (taxCode_ == null || value != "") {
              TaxCode = value;
            }
            break;
          }
          case 50: {
            string value = _single_bankAccount_codec.Read(input);
            if (bankAccount_ == null || value != "") {
              BankAccount = value;
            }
            break;
          }
          case 58: {
            string value = _single_telephoneSwitchboard_codec.Read(input);
            if (telephoneSwitchboard_ == null || value != "") {
              TelephoneSwitchboard = value;
            }
            break;
          }
          case 66: {
            string value = _single_representativePersonName_codec.Read(input);
            if (representativePersonName_ == null || value != "") {
              RepresentativePersonName = value;
            }
            break;
          }
          case 74: {
            string value = _single_rpPosition_codec.Read(input);
            if (rpPosition_ == null || value != "") {
              RpPosition = value;
            }
            break;
          }
          case 82: {
            string value = _single_authorizationLetterNumber_codec.Read(input);
            if (authorizationLetterNumber_ == null || value != "") {
              AuthorizationLetterNumber = value;
            }
            break;
          }
          case 90: {
            string value = _single_tradingAddress_codec.Read(input);
            if (tradingAddress_ == null || value != "") {
              TradingAddress = value;
            }
            break;
          }
          case 98: {
            string value = _single_website_codec.Read(input);
            if (website_ == null || value != "") {
              Website = value;
            }
            break;
          }
          case 106: {
            int? value = _single_numberDaysBadDebt_codec.Read(input);
            if (numberDaysBadDebt_ == null || value != 0) {
              NumberDaysBadDebt = value;
            }
            break;
          }
          case 114: {
            int? value = _single_numberDaysOverdue_codec.Read(input);
            if (numberDaysOverdue_ == null || value != 0) {
              NumberDaysOverdue = value;
            }
            break;
          }
          case 122: {
            int? value = _single_notifyChannelExpirationDays_codec.Read(input);
            if (notifyChannelExpirationDays_ == null || value != 0) {
              NotifyChannelExpirationDays = value;
            }
            break;
          }
          case 130: {
            string value = _single_bankName_codec.Read(input);
            if (bankName_ == null || value != "") {
              BankName = value;
            }
            break;
          }
          case 138: {
            string value = _single_bankBranch_codec.Read(input);
            if (bankBranch_ == null || value != "") {
              BankBranch = value;
            }
            break;
          }
          case 146: {
            int? value = _single_cODCollectionFee_codec.Read(input);
            if (cODCollectionFee_ == null || value != 0) {
              CODCollectionFee = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
