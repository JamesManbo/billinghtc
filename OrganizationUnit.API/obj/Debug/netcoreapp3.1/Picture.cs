// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: picture.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Picture.StaticResource.API.Proto {

  /// <summary>Holder for reflection information generated from picture.proto</summary>
  public static partial class PictureReflection {

    #region Descriptor
    /// <summary>File descriptor for picture.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PictureReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1waWN0dXJlLnByb3RvEhJQaWN0dXJlUmVzb3VyY2VBcGkaHmdvb2dsZS9w",
            "cm90b2J1Zi93cmFwcGVycy5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVz",
            "dGFtcC5wcm90byI4ChtUZW1wb3JhcnlQaWN0dXJlR3JwY1JlcXVlc3QSGQoR",
            "dGVtcG9yYXJ5RmlsZVBhdGgYASADKAkiUQoWUGljdHVyZUdycGNEdG9SZXNw",
            "b25zZRI3CgtwaWN0dXJlRHRvcxgBIAMoCzIiLlBpY3R1cmVSZXNvdXJjZUFw",
            "aS5QaWN0dXJlR3JwY0R0byLRAwoOUGljdHVyZUdycGNEdG8SKgoEbmFtZRgB",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIuCghmaWxlTmFt",
            "ZRgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIuCghmaWxl",
            "UGF0aBgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIpCgRz",
            "aXplGAQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSMQoMZGlz",
            "cGxheU9yZGVyGAUgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUS",
            "MAoLcGljdHVyZVR5cGUYBiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJW",
            "YWx1ZRIvCglleHRlbnNpb24YByABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWUSMgoMcmVkaXJlY3RMaW5rGAggASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEjIKDHRlbXBvcmFyeVVybBgJIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIKCgJpZBgKIAEoBTKKAQoTUGljdHVy",
            "ZVJlc291cmNlR3JwYxJzChJTdG9yZUFuZFNhdmVJbWFnZXMSLy5QaWN0dXJl",
            "UmVzb3VyY2VBcGkuVGVtcG9yYXJ5UGljdHVyZUdycGNSZXF1ZXN0GiouUGlj",
            "dHVyZVJlc291cmNlQXBpLlBpY3R1cmVHcnBjRHRvUmVzcG9uc2UiAEIjqgIg",
            "UGljdHVyZS5TdGF0aWNSZXNvdXJjZS5BUEkuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Picture.StaticResource.API.Proto.TemporaryPictureGrpcRequest), global::Picture.StaticResource.API.Proto.TemporaryPictureGrpcRequest.Parser, new[]{ "TemporaryFilePath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Picture.StaticResource.API.Proto.PictureGrpcDtoResponse), global::Picture.StaticResource.API.Proto.PictureGrpcDtoResponse.Parser, new[]{ "PictureDtos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Picture.StaticResource.API.Proto.PictureGrpcDto), global::Picture.StaticResource.API.Proto.PictureGrpcDto.Parser, new[]{ "Name", "FileName", "FilePath", "Size", "DisplayOrder", "PictureType", "Extension", "RedirectLink", "TemporaryUrl", "Id" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TemporaryPictureGrpcRequest : pb::IMessage<TemporaryPictureGrpcRequest> {
    private static readonly pb::MessageParser<TemporaryPictureGrpcRequest> _parser = new pb::MessageParser<TemporaryPictureGrpcRequest>(() => new TemporaryPictureGrpcRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemporaryPictureGrpcRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Picture.StaticResource.API.Proto.PictureReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemporaryPictureGrpcRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemporaryPictureGrpcRequest(TemporaryPictureGrpcRequest other) : this() {
      temporaryFilePath_ = other.temporaryFilePath_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemporaryPictureGrpcRequest Clone() {
      return new TemporaryPictureGrpcRequest(this);
    }

    /// <summary>Field number for the "temporaryFilePath" field.</summary>
    public const int TemporaryFilePathFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_temporaryFilePath_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> temporaryFilePath_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TemporaryFilePath {
      get { return temporaryFilePath_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemporaryPictureGrpcRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemporaryPictureGrpcRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!temporaryFilePath_.Equals(other.temporaryFilePath_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= temporaryFilePath_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      temporaryFilePath_.WriteTo(output, _repeated_temporaryFilePath_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += temporaryFilePath_.CalculateSize(_repeated_temporaryFilePath_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemporaryPictureGrpcRequest other) {
      if (other == null) {
        return;
      }
      temporaryFilePath_.Add(other.temporaryFilePath_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            temporaryFilePath_.AddEntriesFrom(input, _repeated_temporaryFilePath_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PictureGrpcDtoResponse : pb::IMessage<PictureGrpcDtoResponse> {
    private static readonly pb::MessageParser<PictureGrpcDtoResponse> _parser = new pb::MessageParser<PictureGrpcDtoResponse>(() => new PictureGrpcDtoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PictureGrpcDtoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Picture.StaticResource.API.Proto.PictureReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureGrpcDtoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureGrpcDtoResponse(PictureGrpcDtoResponse other) : this() {
      pictureDtos_ = other.pictureDtos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureGrpcDtoResponse Clone() {
      return new PictureGrpcDtoResponse(this);
    }

    /// <summary>Field number for the "pictureDtos" field.</summary>
    public const int PictureDtosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Picture.StaticResource.API.Proto.PictureGrpcDto> _repeated_pictureDtos_codec
        = pb::FieldCodec.ForMessage(10, global::Picture.StaticResource.API.Proto.PictureGrpcDto.Parser);
    private readonly pbc::RepeatedField<global::Picture.StaticResource.API.Proto.PictureGrpcDto> pictureDtos_ = new pbc::RepeatedField<global::Picture.StaticResource.API.Proto.PictureGrpcDto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Picture.StaticResource.API.Proto.PictureGrpcDto> PictureDtos {
      get { return pictureDtos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PictureGrpcDtoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PictureGrpcDtoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pictureDtos_.Equals(other.pictureDtos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pictureDtos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pictureDtos_.WriteTo(output, _repeated_pictureDtos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pictureDtos_.CalculateSize(_repeated_pictureDtos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PictureGrpcDtoResponse other) {
      if (other == null) {
        return;
      }
      pictureDtos_.Add(other.pictureDtos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pictureDtos_.AddEntriesFrom(input, _repeated_pictureDtos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PictureGrpcDto : pb::IMessage<PictureGrpcDto> {
    private static readonly pb::MessageParser<PictureGrpcDto> _parser = new pb::MessageParser<PictureGrpcDto>(() => new PictureGrpcDto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PictureGrpcDto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Picture.StaticResource.API.Proto.PictureReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureGrpcDto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureGrpcDto(PictureGrpcDto other) : this() {
      Name = other.Name;
      FileName = other.FileName;
      FilePath = other.FilePath;
      Size = other.Size;
      DisplayOrder = other.DisplayOrder;
      PictureType = other.PictureType;
      Extension = other.Extension;
      RedirectLink = other.RedirectLink;
      TemporaryUrl = other.TemporaryUrl;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureGrpcDto Clone() {
      return new PictureGrpcDto(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_fileName_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string fileName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = value;
      }
    }


    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_filePath_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string filePath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = value;
      }
    }


    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 4;
    private static readonly pb::FieldCodec<long?> _single_size_codec = pb::FieldCodec.ForStructWrapper<long>(34);
    private long? size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }


    /// <summary>Field number for the "displayOrder" field.</summary>
    public const int DisplayOrderFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_displayOrder_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? displayOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? DisplayOrder {
      get { return displayOrder_; }
      set {
        displayOrder_ = value;
      }
    }


    /// <summary>Field number for the "pictureType" field.</summary>
    public const int PictureTypeFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_pictureType_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? pictureType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PictureType {
      get { return pictureType_; }
      set {
        pictureType_ = value;
      }
    }


    /// <summary>Field number for the "extension" field.</summary>
    public const int ExtensionFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_extension_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string extension_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Extension {
      get { return extension_; }
      set {
        extension_ = value;
      }
    }


    /// <summary>Field number for the "redirectLink" field.</summary>
    public const int RedirectLinkFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_redirectLink_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string redirectLink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RedirectLink {
      get { return redirectLink_; }
      set {
        redirectLink_ = value;
      }
    }


    /// <summary>Field number for the "temporaryUrl" field.</summary>
    public const int TemporaryUrlFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_temporaryUrl_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string temporaryUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemporaryUrl {
      get { return temporaryUrl_; }
      set {
        temporaryUrl_ = value;
      }
    }


    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 10;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PictureGrpcDto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PictureGrpcDto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (FileName != other.FileName) return false;
      if (FilePath != other.FilePath) return false;
      if (Size != other.Size) return false;
      if (DisplayOrder != other.DisplayOrder) return false;
      if (PictureType != other.PictureType) return false;
      if (Extension != other.Extension) return false;
      if (RedirectLink != other.RedirectLink) return false;
      if (TemporaryUrl != other.TemporaryUrl) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (name_ != null) hash ^= Name.GetHashCode();
      if (fileName_ != null) hash ^= FileName.GetHashCode();
      if (filePath_ != null) hash ^= FilePath.GetHashCode();
      if (size_ != null) hash ^= Size.GetHashCode();
      if (displayOrder_ != null) hash ^= DisplayOrder.GetHashCode();
      if (pictureType_ != null) hash ^= PictureType.GetHashCode();
      if (extension_ != null) hash ^= Extension.GetHashCode();
      if (redirectLink_ != null) hash ^= RedirectLink.GetHashCode();
      if (temporaryUrl_ != null) hash ^= TemporaryUrl.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (fileName_ != null) {
        _single_fileName_codec.WriteTagAndValue(output, FileName);
      }
      if (filePath_ != null) {
        _single_filePath_codec.WriteTagAndValue(output, FilePath);
      }
      if (size_ != null) {
        _single_size_codec.WriteTagAndValue(output, Size);
      }
      if (displayOrder_ != null) {
        _single_displayOrder_codec.WriteTagAndValue(output, DisplayOrder);
      }
      if (pictureType_ != null) {
        _single_pictureType_codec.WriteTagAndValue(output, PictureType);
      }
      if (extension_ != null) {
        _single_extension_codec.WriteTagAndValue(output, Extension);
      }
      if (redirectLink_ != null) {
        _single_redirectLink_codec.WriteTagAndValue(output, RedirectLink);
      }
      if (temporaryUrl_ != null) {
        _single_temporaryUrl_codec.WriteTagAndValue(output, TemporaryUrl);
      }
      if (Id != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (fileName_ != null) {
        size += _single_fileName_codec.CalculateSizeWithTag(FileName);
      }
      if (filePath_ != null) {
        size += _single_filePath_codec.CalculateSizeWithTag(FilePath);
      }
      if (size_ != null) {
        size += _single_size_codec.CalculateSizeWithTag(Size);
      }
      if (displayOrder_ != null) {
        size += _single_displayOrder_codec.CalculateSizeWithTag(DisplayOrder);
      }
      if (pictureType_ != null) {
        size += _single_pictureType_codec.CalculateSizeWithTag(PictureType);
      }
      if (extension_ != null) {
        size += _single_extension_codec.CalculateSizeWithTag(Extension);
      }
      if (redirectLink_ != null) {
        size += _single_redirectLink_codec.CalculateSizeWithTag(RedirectLink);
      }
      if (temporaryUrl_ != null) {
        size += _single_temporaryUrl_codec.CalculateSizeWithTag(TemporaryUrl);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PictureGrpcDto other) {
      if (other == null) {
        return;
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.fileName_ != null) {
        if (fileName_ == null || other.FileName != "") {
          FileName = other.FileName;
        }
      }
      if (other.filePath_ != null) {
        if (filePath_ == null || other.FilePath != "") {
          FilePath = other.FilePath;
        }
      }
      if (other.size_ != null) {
        if (size_ == null || other.Size != 0L) {
          Size = other.Size;
        }
      }
      if (other.displayOrder_ != null) {
        if (displayOrder_ == null || other.DisplayOrder != 0) {
          DisplayOrder = other.DisplayOrder;
        }
      }
      if (other.pictureType_ != null) {
        if (pictureType_ == null || other.PictureType != 0) {
          PictureType = other.PictureType;
        }
      }
      if (other.extension_ != null) {
        if (extension_ == null || other.Extension != "") {
          Extension = other.Extension;
        }
      }
      if (other.redirectLink_ != null) {
        if (redirectLink_ == null || other.RedirectLink != "") {
          RedirectLink = other.RedirectLink;
        }
      }
      if (other.temporaryUrl_ != null) {
        if (temporaryUrl_ == null || other.TemporaryUrl != "") {
          TemporaryUrl = other.TemporaryUrl;
        }
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 18: {
            string value = _single_fileName_codec.Read(input);
            if (fileName_ == null || value != "") {
              FileName = value;
            }
            break;
          }
          case 26: {
            string value = _single_filePath_codec.Read(input);
            if (filePath_ == null || value != "") {
              FilePath = value;
            }
            break;
          }
          case 34: {
            long? value = _single_size_codec.Read(input);
            if (size_ == null || value != 0L) {
              Size = value;
            }
            break;
          }
          case 42: {
            int? value = _single_displayOrder_codec.Read(input);
            if (displayOrder_ == null || value != 0) {
              DisplayOrder = value;
            }
            break;
          }
          case 50: {
            int? value = _single_pictureType_codec.Read(input);
            if (pictureType_ == null || value != 0) {
              PictureType = value;
            }
            break;
          }
          case 58: {
            string value = _single_extension_codec.Read(input);
            if (extension_ == null || value != "") {
              Extension = value;
            }
            break;
          }
          case 66: {
            string value = _single_redirectLink_codec.Read(input);
            if (redirectLink_ == null || value != "") {
              RedirectLink = value;
            }
            break;
          }
          case 74: {
            string value = _single_temporaryUrl_codec.Read(input);
            if (temporaryUrl_ == null || value != "") {
              TemporaryUrl = value;
            }
            break;
          }
          case 80: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
