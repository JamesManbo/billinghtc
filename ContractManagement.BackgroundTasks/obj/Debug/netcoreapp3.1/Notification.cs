// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: notification.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Notification.API.Protos {

  /// <summary>Holder for reflection information generated from notification.proto</summary>
  public static partial class NotificationReflection {

    #region Descriptor
    /// <summary>File descriptor for notification.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NotificationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJub3RpZmljYXRpb24ucHJvdG8SD05vdGlmaWNhdGlvbkFQSRoeZ29vZ2xl",
            "L3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvIp4BChNTZW5kTWFpbFJlcXVlc3RHcnBjEiwKBmVtYWls",
            "cxgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRItCgdzdWJq",
            "ZWN0GAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEioKBGJv",
            "ZHkYAyABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUiJwoUU2Vu",
            "ZE1haWxSZXNwb25zZUdycGMSDwoHc3VjY2VzcxgBIAEoCCJ3ChJTZW5kU21z",
            "UmVxdWVzdEdycGMSMgoMcGhvbmVOdW1iZXJzGAEgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEi0KB21lc3NhZ2UYAiABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUiJgoTU2VuZFNtc1Jlc3BvbnNlR3JwYxIP",
            "CgdzdWNjZXNzGAEgASgIIo8GChtQdXNoTm90aWZpY2F0aW9uUmVxdWVzdEdy",
            "cGMSKQoEdHlwZRgBIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVl",
            "EikKBHpvbmUYAiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIs",
            "CgZzZW5kZXIYAyABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "LgoIc2VuZGVySWQYBCABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSLgoIcmVjZWl2ZXIYBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUSMAoKcmVjZWl2ZXJJZBgGIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRIrCgV0aXRsZRgHIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRItCgdjb250ZW50GAggASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEi0KB3BheWxvYWQYCSABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSKwoHaXNTdGFmZhgKIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5Cb29sVmFsdWUSMQoLZGV2aWNlVG9rZW4YCyABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSKgoEdWlkcxgMIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZRIuCghwbGF0Zm9ybRgNIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRItCghjYXRlZ29yeRgOIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEi4KCHJvbGVDb2RlGA8gASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjQKDmRlcGFydG1lbnRDb2Rl",
            "GBAgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIi8KHFB1c2hO",
            "b3RpZmljYXRpb25SZXNwb25zZUdycGMSDwoHc3VjY2VzcxgBIAEoCCJdChdO",
            "b3RpZmljYXRpb25HcnBjUmVxdWVzdBJCChRub3RpZmljYXRpb25Db21tYW5k",
            "cxgBIAMoCzIkLk5vdGlmaWNhdGlvbkFQSS5Ob3RpZmljYXRpb25Db21tYW5k",
            "IooBCh1VcGRhdGVOb3RpZmljYXRpb25SZXF1ZXN0R3JwYxIoCgJpZBgBIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI/ChFub3RpZmljYXRp",
            "b25Nb2RlbBgCIAEoCzIkLk5vdGlmaWNhdGlvbkFQSS5Ob3RpZmljYXRpb25D",
            "b21tYW5kIogCChtOb3RpZmljYXRpb25GaWx0ZXJNb2RlbEdycGMSMAoKcmVj",
            "ZWl2ZXJJZBgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIp",
            "CgR0YWtlGAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSKQoE",
            "c2tpcBgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjUKEG5v",
            "dGlmaWNhdGlvblR5cGUYBCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJW",
            "YWx1ZRIqCgZpc1JlYWQYBSABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZh",
            "bHVlIsUFChNOb3RpZmljYXRpb25Db21tYW5kEikKBHR5cGUYASABKAsyGy5n",
            "b29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIpCgR6b25lGAIgASgLMhsuZ29v",
            "Z2xlLnByb3RvYnVmLkludDMyVmFsdWUSLAoGc2VuZGVyGAMgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4KCHNlbmRlcklkGAQgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4KCHJlY2VpdmVyGAUgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjAKCnJlY2VpdmVySWQY",
            "BiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSKwoFdGl0bGUY",
            "ByABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoHY29udGVu",
            "dBgIIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRItCgdwYXls",
            "b2FkGAkgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEioKBmlz",
            "UmVhZBgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSKAoCaWQY",
            "CyABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLwoLY3JlYXRl",
            "ZERhdGUYDCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEioKBmlz",
            "U2hvdxgNIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSLQoIY2F0",
            "ZWdvcnkYDiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIrCgdp",
            "c1N0YWZmGA8gASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZSKRAwob",
            "Tm90aWZpY2F0aW9uUGFnZUxpc3RHcnBjRFRPEjQKBnN1YnNldBgBIAMoCzIk",
            "Lk5vdGlmaWNhdGlvbkFQSS5Ob3RpZmljYXRpb25EVE9HcnBjEioKBWNvdW50",
            "GAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSLgoJcGFnZUNv",
            "dW50GAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSMwoOdG90",
            "YWxJdGVtQ291bnQYBCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1",
            "ZRIpCgRza2lwGAUgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUS",
            "KQoEdGFrZRgGIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEhcK",
            "D2hhc1ByZXZpb3VzUGFnZRgHIAEoCBITCgtoYXNOZXh0UGFnZRgIIAEoCBIT",
            "Cgtpc0ZpcnN0UGFnZRgJIAEoCBISCgppc0xhc3RQYWdlGAogASgIIvEEChNO",
            "b3RpZmljYXRpb25EVE9HcnBjEikKBHR5cGUYASABKAsyGy5nb29nbGUucHJv",
            "dG9idWYuSW50MzJWYWx1ZRIpCgR6b25lGAIgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDMyVmFsdWUSLAoGc2VuZGVyGAMgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEi4KCHNlbmRlcklkGAQgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEi4KCHJlY2VpdmVyGAUgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEjAKCnJlY2VpdmVySWQYBiABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSKwoFdGl0bGUYByABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoHY29udGVudBgIIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRItCgdwYXlsb2FkGAkgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEioKBmlzUmVhZBgKIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSKAoCaWQYCyABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMcmVhZGFibGVUaW1lGAwg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi8KC2NyZWF0ZWRE",
            "YXRlGA0gASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcDKACQoQTm90",
            "aWZpY2F0aW9uR3JwYxJTCgpCdWxrSW5zZXJ0EiguTm90aWZpY2F0aW9uQVBJ",
            "Lk5vdGlmaWNhdGlvbkdycGNSZXF1ZXN0GhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDY0VmFsdWUSbwoRR2V0TGlzdEJ5UmVjZWl2ZXISLC5Ob3RpZmljYXRpb25B",
            "UEkuTm90aWZpY2F0aW9uRmlsdGVyTW9kZWxHcnBjGiwuTm90aWZpY2F0aW9u",
            "QVBJLk5vdGlmaWNhdGlvblBhZ2VMaXN0R3JwY0RUTxJNCgdHZXRCeUlkEhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlGiQuTm90aWZpY2F0aW9uQVBJ",
            "Lk5vdGlmaWNhdGlvbkRUT0dycGMSXgoGVXBkYXRlEi4uTm90aWZpY2F0aW9u",
            "QVBJLlVwZGF0ZU5vdGlmaWNhdGlvblJlcXVlc3RHcnBjGiQuTm90aWZpY2F0",
            "aW9uQVBJLk5vdGlmaWNhdGlvbkRUT0dycGMSXgoYVXBkYXRlVmlld2VkTm90",
            "aWZpY2F0aW9uEhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlGiQuTm90",
            "aWZpY2F0aW9uQVBJLk5vdGlmaWNhdGlvbkRUT0dycGMSVAoHU2VuZFNtcxIj",
            "Lk5vdGlmaWNhdGlvbkFQSS5TZW5kU21zUmVxdWVzdEdycGMaJC5Ob3RpZmlj",
            "YXRpb25BUEkuU2VuZFNtc1Jlc3BvbnNlR3JwYxJXCghTZW5kTWFpbBIkLk5v",
            "dGlmaWNhdGlvbkFQSS5TZW5kTWFpbFJlcXVlc3RHcnBjGiUuTm90aWZpY2F0",
            "aW9uQVBJLlNlbmRNYWlsUmVzcG9uc2VHcnBjEnsKHFB1c2hOb3RpZmljYXRp",
            "b25CeURlcGFydG1lbnQSLC5Ob3RpZmljYXRpb25BUEkuUHVzaE5vdGlmaWNh",
            "dGlvblJlcXVlc3RHcnBjGi0uTm90aWZpY2F0aW9uQVBJLlB1c2hOb3RpZmlj",
            "YXRpb25SZXNwb25zZUdycGMSdQoWUHVzaE5vdGlmaWNhdGlvbkJ5Um9sZRIs",
            "Lk5vdGlmaWNhdGlvbkFQSS5QdXNoTm90aWZpY2F0aW9uUmVxdWVzdEdycGMa",
            "LS5Ob3RpZmljYXRpb25BUEkuUHVzaE5vdGlmaWNhdGlvblJlc3BvbnNlR3Jw",
            "YxJ1ChZQdXNoTm90aWZpY2F0aW9uQnlVaWRzEiwuTm90aWZpY2F0aW9uQVBJ",
            "LlB1c2hOb3RpZmljYXRpb25SZXF1ZXN0R3JwYxotLk5vdGlmaWNhdGlvbkFQ",
            "SS5QdXNoTm90aWZpY2F0aW9uUmVzcG9uc2VHcnBjEn0KHlB1c2hOb3RpZmlj",
            "YXRpb25CeUN1c3RvbWVyVWlkcxIsLk5vdGlmaWNhdGlvbkFQSS5QdXNoTm90",
            "aWZpY2F0aW9uUmVxdWVzdEdycGMaLS5Ob3RpZmljYXRpb25BUEkuUHVzaE5v",
            "dGlmaWNhdGlvblJlc3BvbnNlR3JwY0IaqgIXTm90aWZpY2F0aW9uLkFQSS5Q",
            "cm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.SendMailRequestGrpc), global::Notification.API.Protos.SendMailRequestGrpc.Parser, new[]{ "Emails", "Subject", "Body" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.SendMailResponseGrpc), global::Notification.API.Protos.SendMailResponseGrpc.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.SendSmsRequestGrpc), global::Notification.API.Protos.SendSmsRequestGrpc.Parser, new[]{ "PhoneNumbers", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.SendSmsResponseGrpc), global::Notification.API.Protos.SendSmsResponseGrpc.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.PushNotificationRequestGrpc), global::Notification.API.Protos.PushNotificationRequestGrpc.Parser, new[]{ "Type", "Zone", "Sender", "SenderId", "Receiver", "ReceiverId", "Title", "Content", "Payload", "IsStaff", "DeviceToken", "Uids", "Platform", "Category", "RoleCode", "DepartmentCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.PushNotificationResponseGrpc), global::Notification.API.Protos.PushNotificationResponseGrpc.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.NotificationGrpcRequest), global::Notification.API.Protos.NotificationGrpcRequest.Parser, new[]{ "NotificationCommands" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.UpdateNotificationRequestGrpc), global::Notification.API.Protos.UpdateNotificationRequestGrpc.Parser, new[]{ "Id", "NotificationModel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.NotificationFilterModelGrpc), global::Notification.API.Protos.NotificationFilterModelGrpc.Parser, new[]{ "ReceiverId", "Take", "Skip", "NotificationType", "IsRead" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.NotificationCommand), global::Notification.API.Protos.NotificationCommand.Parser, new[]{ "Type", "Zone", "Sender", "SenderId", "Receiver", "ReceiverId", "Title", "Content", "Payload", "IsRead", "Id", "CreatedDate", "IsShow", "Category", "IsStaff" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.NotificationPageListGrpcDTO), global::Notification.API.Protos.NotificationPageListGrpcDTO.Parser, new[]{ "Subset", "Count", "PageCount", "TotalItemCount", "Skip", "Take", "HasPreviousPage", "HasNextPage", "IsFirstPage", "IsLastPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Notification.API.Protos.NotificationDTOGrpc), global::Notification.API.Protos.NotificationDTOGrpc.Parser, new[]{ "Type", "Zone", "Sender", "SenderId", "Receiver", "ReceiverId", "Title", "Content", "Payload", "IsRead", "Id", "ReadableTime", "CreatedDate" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SendMailRequestGrpc : pb::IMessage<SendMailRequestGrpc> {
    private static readonly pb::MessageParser<SendMailRequestGrpc> _parser = new pb::MessageParser<SendMailRequestGrpc>(() => new SendMailRequestGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMailRequestGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMailRequestGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMailRequestGrpc(SendMailRequestGrpc other) : this() {
      Emails = other.Emails;
      Subject = other.Subject;
      Body = other.Body;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMailRequestGrpc Clone() {
      return new SendMailRequestGrpc(this);
    }

    /// <summary>Field number for the "emails" field.</summary>
    public const int EmailsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_emails_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string emails_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Emails {
      get { return emails_; }
      set {
        emails_ = value;
      }
    }


    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_subject_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string subject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = value;
      }
    }


    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_body_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMailRequestGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMailRequestGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Emails != other.Emails) return false;
      if (Subject != other.Subject) return false;
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (emails_ != null) hash ^= Emails.GetHashCode();
      if (subject_ != null) hash ^= Subject.GetHashCode();
      if (body_ != null) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (emails_ != null) {
        _single_emails_codec.WriteTagAndValue(output, Emails);
      }
      if (subject_ != null) {
        _single_subject_codec.WriteTagAndValue(output, Subject);
      }
      if (body_ != null) {
        _single_body_codec.WriteTagAndValue(output, Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (emails_ != null) {
        size += _single_emails_codec.CalculateSizeWithTag(Emails);
      }
      if (subject_ != null) {
        size += _single_subject_codec.CalculateSizeWithTag(Subject);
      }
      if (body_ != null) {
        size += _single_body_codec.CalculateSizeWithTag(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMailRequestGrpc other) {
      if (other == null) {
        return;
      }
      if (other.emails_ != null) {
        if (emails_ == null || other.Emails != "") {
          Emails = other.Emails;
        }
      }
      if (other.subject_ != null) {
        if (subject_ == null || other.Subject != "") {
          Subject = other.Subject;
        }
      }
      if (other.body_ != null) {
        if (body_ == null || other.Body != "") {
          Body = other.Body;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_emails_codec.Read(input);
            if (emails_ == null || value != "") {
              Emails = value;
            }
            break;
          }
          case 18: {
            string value = _single_subject_codec.Read(input);
            if (subject_ == null || value != "") {
              Subject = value;
            }
            break;
          }
          case 26: {
            string value = _single_body_codec.Read(input);
            if (body_ == null || value != "") {
              Body = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendMailResponseGrpc : pb::IMessage<SendMailResponseGrpc> {
    private static readonly pb::MessageParser<SendMailResponseGrpc> _parser = new pb::MessageParser<SendMailResponseGrpc>(() => new SendMailResponseGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMailResponseGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMailResponseGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMailResponseGrpc(SendMailResponseGrpc other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMailResponseGrpc Clone() {
      return new SendMailResponseGrpc(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMailResponseGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMailResponseGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMailResponseGrpc other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendSmsRequestGrpc : pb::IMessage<SendSmsRequestGrpc> {
    private static readonly pb::MessageParser<SendSmsRequestGrpc> _parser = new pb::MessageParser<SendSmsRequestGrpc>(() => new SendSmsRequestGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendSmsRequestGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendSmsRequestGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendSmsRequestGrpc(SendSmsRequestGrpc other) : this() {
      PhoneNumbers = other.PhoneNumbers;
      Message = other.Message;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendSmsRequestGrpc Clone() {
      return new SendSmsRequestGrpc(this);
    }

    /// <summary>Field number for the "phoneNumbers" field.</summary>
    public const int PhoneNumbersFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_phoneNumbers_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string phoneNumbers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumbers {
      get { return phoneNumbers_; }
      set {
        phoneNumbers_ = value;
      }
    }


    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_message_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendSmsRequestGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendSmsRequestGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PhoneNumbers != other.PhoneNumbers) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (phoneNumbers_ != null) hash ^= PhoneNumbers.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (phoneNumbers_ != null) {
        _single_phoneNumbers_codec.WriteTagAndValue(output, PhoneNumbers);
      }
      if (message_ != null) {
        _single_message_codec.WriteTagAndValue(output, Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (phoneNumbers_ != null) {
        size += _single_phoneNumbers_codec.CalculateSizeWithTag(PhoneNumbers);
      }
      if (message_ != null) {
        size += _single_message_codec.CalculateSizeWithTag(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendSmsRequestGrpc other) {
      if (other == null) {
        return;
      }
      if (other.phoneNumbers_ != null) {
        if (phoneNumbers_ == null || other.PhoneNumbers != "") {
          PhoneNumbers = other.PhoneNumbers;
        }
      }
      if (other.message_ != null) {
        if (message_ == null || other.Message != "") {
          Message = other.Message;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_phoneNumbers_codec.Read(input);
            if (phoneNumbers_ == null || value != "") {
              PhoneNumbers = value;
            }
            break;
          }
          case 18: {
            string value = _single_message_codec.Read(input);
            if (message_ == null || value != "") {
              Message = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendSmsResponseGrpc : pb::IMessage<SendSmsResponseGrpc> {
    private static readonly pb::MessageParser<SendSmsResponseGrpc> _parser = new pb::MessageParser<SendSmsResponseGrpc>(() => new SendSmsResponseGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendSmsResponseGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendSmsResponseGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendSmsResponseGrpc(SendSmsResponseGrpc other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendSmsResponseGrpc Clone() {
      return new SendSmsResponseGrpc(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendSmsResponseGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendSmsResponseGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendSmsResponseGrpc other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PushNotificationRequestGrpc : pb::IMessage<PushNotificationRequestGrpc> {
    private static readonly pb::MessageParser<PushNotificationRequestGrpc> _parser = new pb::MessageParser<PushNotificationRequestGrpc>(() => new PushNotificationRequestGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushNotificationRequestGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotificationRequestGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotificationRequestGrpc(PushNotificationRequestGrpc other) : this() {
      Type = other.Type;
      Zone = other.Zone;
      Sender = other.Sender;
      SenderId = other.SenderId;
      Receiver = other.Receiver;
      ReceiverId = other.ReceiverId;
      Title = other.Title;
      Content = other.Content;
      Payload = other.Payload;
      IsStaff = other.IsStaff;
      DeviceToken = other.DeviceToken;
      Uids = other.Uids;
      Platform = other.Platform;
      Category = other.Category;
      RoleCode = other.RoleCode;
      DepartmentCode = other.DepartmentCode;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotificationRequestGrpc Clone() {
      return new PushNotificationRequestGrpc(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_type_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }


    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_zone_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? zone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Zone {
      get { return zone_; }
      set {
        zone_ = value;
      }
    }


    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_sender_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }


    /// <summary>Field number for the "senderId" field.</summary>
    public const int SenderIdFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_senderId_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string senderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }


    /// <summary>Field number for the "receiver" field.</summary>
    public const int ReceiverFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_receiver_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string receiver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Receiver {
      get { return receiver_; }
      set {
        receiver_ = value;
      }
    }


    /// <summary>Field number for the "receiverId" field.</summary>
    public const int ReceiverIdFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_receiverId_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string receiverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiverId {
      get { return receiverId_; }
      set {
        receiverId_ = value;
      }
    }


    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_title_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }


    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_content_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }


    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_payload_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }


    /// <summary>Field number for the "isStaff" field.</summary>
    public const int IsStaffFieldNumber = 10;
    private static readonly pb::FieldCodec<bool?> _single_isStaff_codec = pb::FieldCodec.ForStructWrapper<bool>(82);
    private bool? isStaff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? IsStaff {
      get { return isStaff_; }
      set {
        isStaff_ = value;
      }
    }


    /// <summary>Field number for the "deviceToken" field.</summary>
    public const int DeviceTokenFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_deviceToken_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string deviceToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceToken {
      get { return deviceToken_; }
      set {
        deviceToken_ = value;
      }
    }


    /// <summary>Field number for the "uids" field.</summary>
    public const int UidsFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_uids_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string uids_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uids {
      get { return uids_; }
      set {
        uids_ = value;
      }
    }


    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_platform_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_; }
      set {
        platform_ = value;
      }
    }


    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 14;
    private static readonly pb::FieldCodec<int?> _single_category_codec = pb::FieldCodec.ForStructWrapper<int>(114);
    private int? category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }


    /// <summary>Field number for the "roleCode" field.</summary>
    public const int RoleCodeFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_roleCode_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string roleCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoleCode {
      get { return roleCode_; }
      set {
        roleCode_ = value;
      }
    }


    /// <summary>Field number for the "departmentCode" field.</summary>
    public const int DepartmentCodeFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_departmentCode_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string departmentCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DepartmentCode {
      get { return departmentCode_; }
      set {
        departmentCode_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PushNotificationRequestGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PushNotificationRequestGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Zone != other.Zone) return false;
      if (Sender != other.Sender) return false;
      if (SenderId != other.SenderId) return false;
      if (Receiver != other.Receiver) return false;
      if (ReceiverId != other.ReceiverId) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if (Payload != other.Payload) return false;
      if (IsStaff != other.IsStaff) return false;
      if (DeviceToken != other.DeviceToken) return false;
      if (Uids != other.Uids) return false;
      if (Platform != other.Platform) return false;
      if (Category != other.Category) return false;
      if (RoleCode != other.RoleCode) return false;
      if (DepartmentCode != other.DepartmentCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (type_ != null) hash ^= Type.GetHashCode();
      if (zone_ != null) hash ^= Zone.GetHashCode();
      if (sender_ != null) hash ^= Sender.GetHashCode();
      if (senderId_ != null) hash ^= SenderId.GetHashCode();
      if (receiver_ != null) hash ^= Receiver.GetHashCode();
      if (receiverId_ != null) hash ^= ReceiverId.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (isStaff_ != null) hash ^= IsStaff.GetHashCode();
      if (deviceToken_ != null) hash ^= DeviceToken.GetHashCode();
      if (uids_ != null) hash ^= Uids.GetHashCode();
      if (platform_ != null) hash ^= Platform.GetHashCode();
      if (category_ != null) hash ^= Category.GetHashCode();
      if (roleCode_ != null) hash ^= RoleCode.GetHashCode();
      if (departmentCode_ != null) hash ^= DepartmentCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (type_ != null) {
        _single_type_codec.WriteTagAndValue(output, Type);
      }
      if (zone_ != null) {
        _single_zone_codec.WriteTagAndValue(output, Zone);
      }
      if (sender_ != null) {
        _single_sender_codec.WriteTagAndValue(output, Sender);
      }
      if (senderId_ != null) {
        _single_senderId_codec.WriteTagAndValue(output, SenderId);
      }
      if (receiver_ != null) {
        _single_receiver_codec.WriteTagAndValue(output, Receiver);
      }
      if (receiverId_ != null) {
        _single_receiverId_codec.WriteTagAndValue(output, ReceiverId);
      }
      if (title_ != null) {
        _single_title_codec.WriteTagAndValue(output, Title);
      }
      if (content_ != null) {
        _single_content_codec.WriteTagAndValue(output, Content);
      }
      if (payload_ != null) {
        _single_payload_codec.WriteTagAndValue(output, Payload);
      }
      if (isStaff_ != null) {
        _single_isStaff_codec.WriteTagAndValue(output, IsStaff);
      }
      if (deviceToken_ != null) {
        _single_deviceToken_codec.WriteTagAndValue(output, DeviceToken);
      }
      if (uids_ != null) {
        _single_uids_codec.WriteTagAndValue(output, Uids);
      }
      if (platform_ != null) {
        _single_platform_codec.WriteTagAndValue(output, Platform);
      }
      if (category_ != null) {
        _single_category_codec.WriteTagAndValue(output, Category);
      }
      if (roleCode_ != null) {
        _single_roleCode_codec.WriteTagAndValue(output, RoleCode);
      }
      if (departmentCode_ != null) {
        _single_departmentCode_codec.WriteTagAndValue(output, DepartmentCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (type_ != null) {
        size += _single_type_codec.CalculateSizeWithTag(Type);
      }
      if (zone_ != null) {
        size += _single_zone_codec.CalculateSizeWithTag(Zone);
      }
      if (sender_ != null) {
        size += _single_sender_codec.CalculateSizeWithTag(Sender);
      }
      if (senderId_ != null) {
        size += _single_senderId_codec.CalculateSizeWithTag(SenderId);
      }
      if (receiver_ != null) {
        size += _single_receiver_codec.CalculateSizeWithTag(Receiver);
      }
      if (receiverId_ != null) {
        size += _single_receiverId_codec.CalculateSizeWithTag(ReceiverId);
      }
      if (title_ != null) {
        size += _single_title_codec.CalculateSizeWithTag(Title);
      }
      if (content_ != null) {
        size += _single_content_codec.CalculateSizeWithTag(Content);
      }
      if (payload_ != null) {
        size += _single_payload_codec.CalculateSizeWithTag(Payload);
      }
      if (isStaff_ != null) {
        size += _single_isStaff_codec.CalculateSizeWithTag(IsStaff);
      }
      if (deviceToken_ != null) {
        size += _single_deviceToken_codec.CalculateSizeWithTag(DeviceToken);
      }
      if (uids_ != null) {
        size += _single_uids_codec.CalculateSizeWithTag(Uids);
      }
      if (platform_ != null) {
        size += _single_platform_codec.CalculateSizeWithTag(Platform);
      }
      if (category_ != null) {
        size += _single_category_codec.CalculateSizeWithTag(Category);
      }
      if (roleCode_ != null) {
        size += _single_roleCode_codec.CalculateSizeWithTag(RoleCode);
      }
      if (departmentCode_ != null) {
        size += _single_departmentCode_codec.CalculateSizeWithTag(DepartmentCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PushNotificationRequestGrpc other) {
      if (other == null) {
        return;
      }
      if (other.type_ != null) {
        if (type_ == null || other.Type != 0) {
          Type = other.Type;
        }
      }
      if (other.zone_ != null) {
        if (zone_ == null || other.Zone != 0) {
          Zone = other.Zone;
        }
      }
      if (other.sender_ != null) {
        if (sender_ == null || other.Sender != "") {
          Sender = other.Sender;
        }
      }
      if (other.senderId_ != null) {
        if (senderId_ == null || other.SenderId != "") {
          SenderId = other.SenderId;
        }
      }
      if (other.receiver_ != null) {
        if (receiver_ == null || other.Receiver != "") {
          Receiver = other.Receiver;
        }
      }
      if (other.receiverId_ != null) {
        if (receiverId_ == null || other.ReceiverId != "") {
          ReceiverId = other.ReceiverId;
        }
      }
      if (other.title_ != null) {
        if (title_ == null || other.Title != "") {
          Title = other.Title;
        }
      }
      if (other.content_ != null) {
        if (content_ == null || other.Content != "") {
          Content = other.Content;
        }
      }
      if (other.payload_ != null) {
        if (payload_ == null || other.Payload != "") {
          Payload = other.Payload;
        }
      }
      if (other.isStaff_ != null) {
        if (isStaff_ == null || other.IsStaff != false) {
          IsStaff = other.IsStaff;
        }
      }
      if (other.deviceToken_ != null) {
        if (deviceToken_ == null || other.DeviceToken != "") {
          DeviceToken = other.DeviceToken;
        }
      }
      if (other.uids_ != null) {
        if (uids_ == null || other.Uids != "") {
          Uids = other.Uids;
        }
      }
      if (other.platform_ != null) {
        if (platform_ == null || other.Platform != "") {
          Platform = other.Platform;
        }
      }
      if (other.category_ != null) {
        if (category_ == null || other.Category != 0) {
          Category = other.Category;
        }
      }
      if (other.roleCode_ != null) {
        if (roleCode_ == null || other.RoleCode != "") {
          RoleCode = other.RoleCode;
        }
      }
      if (other.departmentCode_ != null) {
        if (departmentCode_ == null || other.DepartmentCode != "") {
          DepartmentCode = other.DepartmentCode;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_type_codec.Read(input);
            if (type_ == null || value != 0) {
              Type = value;
            }
            break;
          }
          case 18: {
            int? value = _single_zone_codec.Read(input);
            if (zone_ == null || value != 0) {
              Zone = value;
            }
            break;
          }
          case 26: {
            string value = _single_sender_codec.Read(input);
            if (sender_ == null || value != "") {
              Sender = value;
            }
            break;
          }
          case 34: {
            string value = _single_senderId_codec.Read(input);
            if (senderId_ == null || value != "") {
              SenderId = value;
            }
            break;
          }
          case 42: {
            string value = _single_receiver_codec.Read(input);
            if (receiver_ == null || value != "") {
              Receiver = value;
            }
            break;
          }
          case 50: {
            string value = _single_receiverId_codec.Read(input);
            if (receiverId_ == null || value != "") {
              ReceiverId = value;
            }
            break;
          }
          case 58: {
            string value = _single_title_codec.Read(input);
            if (title_ == null || value != "") {
              Title = value;
            }
            break;
          }
          case 66: {
            string value = _single_content_codec.Read(input);
            if (content_ == null || value != "") {
              Content = value;
            }
            break;
          }
          case 74: {
            string value = _single_payload_codec.Read(input);
            if (payload_ == null || value != "") {
              Payload = value;
            }
            break;
          }
          case 82: {
            bool? value = _single_isStaff_codec.Read(input);
            if (isStaff_ == null || value != false) {
              IsStaff = value;
            }
            break;
          }
          case 90: {
            string value = _single_deviceToken_codec.Read(input);
            if (deviceToken_ == null || value != "") {
              DeviceToken = value;
            }
            break;
          }
          case 98: {
            string value = _single_uids_codec.Read(input);
            if (uids_ == null || value != "") {
              Uids = value;
            }
            break;
          }
          case 106: {
            string value = _single_platform_codec.Read(input);
            if (platform_ == null || value != "") {
              Platform = value;
            }
            break;
          }
          case 114: {
            int? value = _single_category_codec.Read(input);
            if (category_ == null || value != 0) {
              Category = value;
            }
            break;
          }
          case 122: {
            string value = _single_roleCode_codec.Read(input);
            if (roleCode_ == null || value != "") {
              RoleCode = value;
            }
            break;
          }
          case 130: {
            string value = _single_departmentCode_codec.Read(input);
            if (departmentCode_ == null || value != "") {
              DepartmentCode = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class PushNotificationResponseGrpc : pb::IMessage<PushNotificationResponseGrpc> {
    private static readonly pb::MessageParser<PushNotificationResponseGrpc> _parser = new pb::MessageParser<PushNotificationResponseGrpc>(() => new PushNotificationResponseGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PushNotificationResponseGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotificationResponseGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotificationResponseGrpc(PushNotificationResponseGrpc other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PushNotificationResponseGrpc Clone() {
      return new PushNotificationResponseGrpc(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PushNotificationResponseGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PushNotificationResponseGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PushNotificationResponseGrpc other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotificationGrpcRequest : pb::IMessage<NotificationGrpcRequest> {
    private static readonly pb::MessageParser<NotificationGrpcRequest> _parser = new pb::MessageParser<NotificationGrpcRequest>(() => new NotificationGrpcRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationGrpcRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationGrpcRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationGrpcRequest(NotificationGrpcRequest other) : this() {
      notificationCommands_ = other.notificationCommands_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationGrpcRequest Clone() {
      return new NotificationGrpcRequest(this);
    }

    /// <summary>Field number for the "notificationCommands" field.</summary>
    public const int NotificationCommandsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Notification.API.Protos.NotificationCommand> _repeated_notificationCommands_codec
        = pb::FieldCodec.ForMessage(10, global::Notification.API.Protos.NotificationCommand.Parser);
    private readonly pbc::RepeatedField<global::Notification.API.Protos.NotificationCommand> notificationCommands_ = new pbc::RepeatedField<global::Notification.API.Protos.NotificationCommand>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Notification.API.Protos.NotificationCommand> NotificationCommands {
      get { return notificationCommands_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationGrpcRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationGrpcRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!notificationCommands_.Equals(other.notificationCommands_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= notificationCommands_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      notificationCommands_.WriteTo(output, _repeated_notificationCommands_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += notificationCommands_.CalculateSize(_repeated_notificationCommands_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationGrpcRequest other) {
      if (other == null) {
        return;
      }
      notificationCommands_.Add(other.notificationCommands_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            notificationCommands_.AddEntriesFrom(input, _repeated_notificationCommands_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateNotificationRequestGrpc : pb::IMessage<UpdateNotificationRequestGrpc> {
    private static readonly pb::MessageParser<UpdateNotificationRequestGrpc> _parser = new pb::MessageParser<UpdateNotificationRequestGrpc>(() => new UpdateNotificationRequestGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateNotificationRequestGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNotificationRequestGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNotificationRequestGrpc(UpdateNotificationRequestGrpc other) : this() {
      Id = other.Id;
      notificationModel_ = other.notificationModel_ != null ? other.notificationModel_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNotificationRequestGrpc Clone() {
      return new UpdateNotificationRequestGrpc(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "notificationModel" field.</summary>
    public const int NotificationModelFieldNumber = 2;
    private global::Notification.API.Protos.NotificationCommand notificationModel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Notification.API.Protos.NotificationCommand NotificationModel {
      get { return notificationModel_; }
      set {
        notificationModel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateNotificationRequestGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateNotificationRequestGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(NotificationModel, other.NotificationModel)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (notificationModel_ != null) hash ^= NotificationModel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (notificationModel_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NotificationModel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (notificationModel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotificationModel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateNotificationRequestGrpc other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.notificationModel_ != null) {
        if (notificationModel_ == null) {
          NotificationModel = new global::Notification.API.Protos.NotificationCommand();
        }
        NotificationModel.MergeFrom(other.NotificationModel);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            if (notificationModel_ == null) {
              NotificationModel = new global::Notification.API.Protos.NotificationCommand();
            }
            input.ReadMessage(NotificationModel);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotificationFilterModelGrpc : pb::IMessage<NotificationFilterModelGrpc> {
    private static readonly pb::MessageParser<NotificationFilterModelGrpc> _parser = new pb::MessageParser<NotificationFilterModelGrpc>(() => new NotificationFilterModelGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationFilterModelGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationFilterModelGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationFilterModelGrpc(NotificationFilterModelGrpc other) : this() {
      ReceiverId = other.ReceiverId;
      Take = other.Take;
      Skip = other.Skip;
      NotificationType = other.NotificationType;
      IsRead = other.IsRead;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationFilterModelGrpc Clone() {
      return new NotificationFilterModelGrpc(this);
    }

    /// <summary>Field number for the "receiverId" field.</summary>
    public const int ReceiverIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_receiverId_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string receiverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiverId {
      get { return receiverId_; }
      set {
        receiverId_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "notificationType" field.</summary>
    public const int NotificationTypeFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_notificationType_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? notificationType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? NotificationType {
      get { return notificationType_; }
      set {
        notificationType_ = value;
      }
    }


    /// <summary>Field number for the "isRead" field.</summary>
    public const int IsReadFieldNumber = 5;
    private static readonly pb::FieldCodec<bool?> _single_isRead_codec = pb::FieldCodec.ForStructWrapper<bool>(42);
    private bool? isRead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? IsRead {
      get { return isRead_; }
      set {
        isRead_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationFilterModelGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationFilterModelGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReceiverId != other.ReceiverId) return false;
      if (Take != other.Take) return false;
      if (Skip != other.Skip) return false;
      if (NotificationType != other.NotificationType) return false;
      if (IsRead != other.IsRead) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (receiverId_ != null) hash ^= ReceiverId.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (notificationType_ != null) hash ^= NotificationType.GetHashCode();
      if (isRead_ != null) hash ^= IsRead.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (receiverId_ != null) {
        _single_receiverId_codec.WriteTagAndValue(output, ReceiverId);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (notificationType_ != null) {
        _single_notificationType_codec.WriteTagAndValue(output, NotificationType);
      }
      if (isRead_ != null) {
        _single_isRead_codec.WriteTagAndValue(output, IsRead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (receiverId_ != null) {
        size += _single_receiverId_codec.CalculateSizeWithTag(ReceiverId);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (notificationType_ != null) {
        size += _single_notificationType_codec.CalculateSizeWithTag(NotificationType);
      }
      if (isRead_ != null) {
        size += _single_isRead_codec.CalculateSizeWithTag(IsRead);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationFilterModelGrpc other) {
      if (other == null) {
        return;
      }
      if (other.receiverId_ != null) {
        if (receiverId_ == null || other.ReceiverId != "") {
          ReceiverId = other.ReceiverId;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.notificationType_ != null) {
        if (notificationType_ == null || other.NotificationType != 0) {
          NotificationType = other.NotificationType;
        }
      }
      if (other.isRead_ != null) {
        if (isRead_ == null || other.IsRead != false) {
          IsRead = other.IsRead;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_receiverId_codec.Read(input);
            if (receiverId_ == null || value != "") {
              ReceiverId = value;
            }
            break;
          }
          case 18: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 26: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 34: {
            int? value = _single_notificationType_codec.Read(input);
            if (notificationType_ == null || value != 0) {
              NotificationType = value;
            }
            break;
          }
          case 42: {
            bool? value = _single_isRead_codec.Read(input);
            if (isRead_ == null || value != false) {
              IsRead = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotificationCommand : pb::IMessage<NotificationCommand> {
    private static readonly pb::MessageParser<NotificationCommand> _parser = new pb::MessageParser<NotificationCommand>(() => new NotificationCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationCommand(NotificationCommand other) : this() {
      Type = other.Type;
      Zone = other.Zone;
      Sender = other.Sender;
      SenderId = other.SenderId;
      Receiver = other.Receiver;
      ReceiverId = other.ReceiverId;
      Title = other.Title;
      Content = other.Content;
      Payload = other.Payload;
      IsRead = other.IsRead;
      Id = other.Id;
      createdDate_ = other.createdDate_ != null ? other.createdDate_.Clone() : null;
      IsShow = other.IsShow;
      Category = other.Category;
      IsStaff = other.IsStaff;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationCommand Clone() {
      return new NotificationCommand(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_type_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }


    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_zone_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? zone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Zone {
      get { return zone_; }
      set {
        zone_ = value;
      }
    }


    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_sender_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }


    /// <summary>Field number for the "senderId" field.</summary>
    public const int SenderIdFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_senderId_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string senderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }


    /// <summary>Field number for the "receiver" field.</summary>
    public const int ReceiverFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_receiver_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string receiver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Receiver {
      get { return receiver_; }
      set {
        receiver_ = value;
      }
    }


    /// <summary>Field number for the "receiverId" field.</summary>
    public const int ReceiverIdFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_receiverId_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string receiverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiverId {
      get { return receiverId_; }
      set {
        receiverId_ = value;
      }
    }


    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_title_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }


    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_content_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }


    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_payload_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }


    /// <summary>Field number for the "isRead" field.</summary>
    public const int IsReadFieldNumber = 10;
    private static readonly pb::FieldCodec<bool?> _single_isRead_codec = pb::FieldCodec.ForStructWrapper<bool>(82);
    private bool? isRead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? IsRead {
      get { return isRead_; }
      set {
        isRead_ = value;
      }
    }


    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "createdDate" field.</summary>
    public const int CreatedDateFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedDate {
      get { return createdDate_; }
      set {
        createdDate_ = value;
      }
    }

    /// <summary>Field number for the "isShow" field.</summary>
    public const int IsShowFieldNumber = 13;
    private static readonly pb::FieldCodec<bool?> _single_isShow_codec = pb::FieldCodec.ForStructWrapper<bool>(106);
    private bool? isShow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? IsShow {
      get { return isShow_; }
      set {
        isShow_ = value;
      }
    }


    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 14;
    private static readonly pb::FieldCodec<int?> _single_category_codec = pb::FieldCodec.ForStructWrapper<int>(114);
    private int? category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }


    /// <summary>Field number for the "isStaff" field.</summary>
    public const int IsStaffFieldNumber = 15;
    private static readonly pb::FieldCodec<bool?> _single_isStaff_codec = pb::FieldCodec.ForStructWrapper<bool>(122);
    private bool? isStaff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? IsStaff {
      get { return isStaff_; }
      set {
        isStaff_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Zone != other.Zone) return false;
      if (Sender != other.Sender) return false;
      if (SenderId != other.SenderId) return false;
      if (Receiver != other.Receiver) return false;
      if (ReceiverId != other.ReceiverId) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if (Payload != other.Payload) return false;
      if (IsRead != other.IsRead) return false;
      if (Id != other.Id) return false;
      if (!object.Equals(CreatedDate, other.CreatedDate)) return false;
      if (IsShow != other.IsShow) return false;
      if (Category != other.Category) return false;
      if (IsStaff != other.IsStaff) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (type_ != null) hash ^= Type.GetHashCode();
      if (zone_ != null) hash ^= Zone.GetHashCode();
      if (sender_ != null) hash ^= Sender.GetHashCode();
      if (senderId_ != null) hash ^= SenderId.GetHashCode();
      if (receiver_ != null) hash ^= Receiver.GetHashCode();
      if (receiverId_ != null) hash ^= ReceiverId.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (isRead_ != null) hash ^= IsRead.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (createdDate_ != null) hash ^= CreatedDate.GetHashCode();
      if (isShow_ != null) hash ^= IsShow.GetHashCode();
      if (category_ != null) hash ^= Category.GetHashCode();
      if (isStaff_ != null) hash ^= IsStaff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (type_ != null) {
        _single_type_codec.WriteTagAndValue(output, Type);
      }
      if (zone_ != null) {
        _single_zone_codec.WriteTagAndValue(output, Zone);
      }
      if (sender_ != null) {
        _single_sender_codec.WriteTagAndValue(output, Sender);
      }
      if (senderId_ != null) {
        _single_senderId_codec.WriteTagAndValue(output, SenderId);
      }
      if (receiver_ != null) {
        _single_receiver_codec.WriteTagAndValue(output, Receiver);
      }
      if (receiverId_ != null) {
        _single_receiverId_codec.WriteTagAndValue(output, ReceiverId);
      }
      if (title_ != null) {
        _single_title_codec.WriteTagAndValue(output, Title);
      }
      if (content_ != null) {
        _single_content_codec.WriteTagAndValue(output, Content);
      }
      if (payload_ != null) {
        _single_payload_codec.WriteTagAndValue(output, Payload);
      }
      if (isRead_ != null) {
        _single_isRead_codec.WriteTagAndValue(output, IsRead);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (createdDate_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(CreatedDate);
      }
      if (isShow_ != null) {
        _single_isShow_codec.WriteTagAndValue(output, IsShow);
      }
      if (category_ != null) {
        _single_category_codec.WriteTagAndValue(output, Category);
      }
      if (isStaff_ != null) {
        _single_isStaff_codec.WriteTagAndValue(output, IsStaff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (type_ != null) {
        size += _single_type_codec.CalculateSizeWithTag(Type);
      }
      if (zone_ != null) {
        size += _single_zone_codec.CalculateSizeWithTag(Zone);
      }
      if (sender_ != null) {
        size += _single_sender_codec.CalculateSizeWithTag(Sender);
      }
      if (senderId_ != null) {
        size += _single_senderId_codec.CalculateSizeWithTag(SenderId);
      }
      if (receiver_ != null) {
        size += _single_receiver_codec.CalculateSizeWithTag(Receiver);
      }
      if (receiverId_ != null) {
        size += _single_receiverId_codec.CalculateSizeWithTag(ReceiverId);
      }
      if (title_ != null) {
        size += _single_title_codec.CalculateSizeWithTag(Title);
      }
      if (content_ != null) {
        size += _single_content_codec.CalculateSizeWithTag(Content);
      }
      if (payload_ != null) {
        size += _single_payload_codec.CalculateSizeWithTag(Payload);
      }
      if (isRead_ != null) {
        size += _single_isRead_codec.CalculateSizeWithTag(IsRead);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (createdDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedDate);
      }
      if (isShow_ != null) {
        size += _single_isShow_codec.CalculateSizeWithTag(IsShow);
      }
      if (category_ != null) {
        size += _single_category_codec.CalculateSizeWithTag(Category);
      }
      if (isStaff_ != null) {
        size += _single_isStaff_codec.CalculateSizeWithTag(IsStaff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationCommand other) {
      if (other == null) {
        return;
      }
      if (other.type_ != null) {
        if (type_ == null || other.Type != 0) {
          Type = other.Type;
        }
      }
      if (other.zone_ != null) {
        if (zone_ == null || other.Zone != 0) {
          Zone = other.Zone;
        }
      }
      if (other.sender_ != null) {
        if (sender_ == null || other.Sender != "") {
          Sender = other.Sender;
        }
      }
      if (other.senderId_ != null) {
        if (senderId_ == null || other.SenderId != "") {
          SenderId = other.SenderId;
        }
      }
      if (other.receiver_ != null) {
        if (receiver_ == null || other.Receiver != "") {
          Receiver = other.Receiver;
        }
      }
      if (other.receiverId_ != null) {
        if (receiverId_ == null || other.ReceiverId != "") {
          ReceiverId = other.ReceiverId;
        }
      }
      if (other.title_ != null) {
        if (title_ == null || other.Title != "") {
          Title = other.Title;
        }
      }
      if (other.content_ != null) {
        if (content_ == null || other.Content != "") {
          Content = other.Content;
        }
      }
      if (other.payload_ != null) {
        if (payload_ == null || other.Payload != "") {
          Payload = other.Payload;
        }
      }
      if (other.isRead_ != null) {
        if (isRead_ == null || other.IsRead != false) {
          IsRead = other.IsRead;
        }
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.createdDate_ != null) {
        if (createdDate_ == null) {
          CreatedDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedDate.MergeFrom(other.CreatedDate);
      }
      if (other.isShow_ != null) {
        if (isShow_ == null || other.IsShow != false) {
          IsShow = other.IsShow;
        }
      }
      if (other.category_ != null) {
        if (category_ == null || other.Category != 0) {
          Category = other.Category;
        }
      }
      if (other.isStaff_ != null) {
        if (isStaff_ == null || other.IsStaff != false) {
          IsStaff = other.IsStaff;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_type_codec.Read(input);
            if (type_ == null || value != 0) {
              Type = value;
            }
            break;
          }
          case 18: {
            int? value = _single_zone_codec.Read(input);
            if (zone_ == null || value != 0) {
              Zone = value;
            }
            break;
          }
          case 26: {
            string value = _single_sender_codec.Read(input);
            if (sender_ == null || value != "") {
              Sender = value;
            }
            break;
          }
          case 34: {
            string value = _single_senderId_codec.Read(input);
            if (senderId_ == null || value != "") {
              SenderId = value;
            }
            break;
          }
          case 42: {
            string value = _single_receiver_codec.Read(input);
            if (receiver_ == null || value != "") {
              Receiver = value;
            }
            break;
          }
          case 50: {
            string value = _single_receiverId_codec.Read(input);
            if (receiverId_ == null || value != "") {
              ReceiverId = value;
            }
            break;
          }
          case 58: {
            string value = _single_title_codec.Read(input);
            if (title_ == null || value != "") {
              Title = value;
            }
            break;
          }
          case 66: {
            string value = _single_content_codec.Read(input);
            if (content_ == null || value != "") {
              Content = value;
            }
            break;
          }
          case 74: {
            string value = _single_payload_codec.Read(input);
            if (payload_ == null || value != "") {
              Payload = value;
            }
            break;
          }
          case 82: {
            bool? value = _single_isRead_codec.Read(input);
            if (isRead_ == null || value != false) {
              IsRead = value;
            }
            break;
          }
          case 90: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 98: {
            if (createdDate_ == null) {
              CreatedDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedDate);
            break;
          }
          case 106: {
            bool? value = _single_isShow_codec.Read(input);
            if (isShow_ == null || value != false) {
              IsShow = value;
            }
            break;
          }
          case 114: {
            int? value = _single_category_codec.Read(input);
            if (category_ == null || value != 0) {
              Category = value;
            }
            break;
          }
          case 122: {
            bool? value = _single_isStaff_codec.Read(input);
            if (isStaff_ == null || value != false) {
              IsStaff = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotificationPageListGrpcDTO : pb::IMessage<NotificationPageListGrpcDTO> {
    private static readonly pb::MessageParser<NotificationPageListGrpcDTO> _parser = new pb::MessageParser<NotificationPageListGrpcDTO>(() => new NotificationPageListGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationPageListGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationPageListGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationPageListGrpcDTO(NotificationPageListGrpcDTO other) : this() {
      subset_ = other.subset_.Clone();
      Count = other.Count;
      PageCount = other.PageCount;
      TotalItemCount = other.TotalItemCount;
      Skip = other.Skip;
      Take = other.Take;
      hasPreviousPage_ = other.hasPreviousPage_;
      hasNextPage_ = other.hasNextPage_;
      isFirstPage_ = other.isFirstPage_;
      isLastPage_ = other.isLastPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationPageListGrpcDTO Clone() {
      return new NotificationPageListGrpcDTO(this);
    }

    /// <summary>Field number for the "subset" field.</summary>
    public const int SubsetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Notification.API.Protos.NotificationDTOGrpc> _repeated_subset_codec
        = pb::FieldCodec.ForMessage(10, global::Notification.API.Protos.NotificationDTOGrpc.Parser);
    private readonly pbc::RepeatedField<global::Notification.API.Protos.NotificationDTOGrpc> subset_ = new pbc::RepeatedField<global::Notification.API.Protos.NotificationDTOGrpc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Notification.API.Protos.NotificationDTOGrpc> Subset {
      get { return subset_; }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_count_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }


    /// <summary>Field number for the "pageCount" field.</summary>
    public const int PageCountFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_pageCount_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? pageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PageCount {
      get { return pageCount_; }
      set {
        pageCount_ = value;
      }
    }


    /// <summary>Field number for the "totalItemCount" field.</summary>
    public const int TotalItemCountFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_totalItemCount_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? totalItemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TotalItemCount {
      get { return totalItemCount_; }
      set {
        totalItemCount_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "hasPreviousPage" field.</summary>
    public const int HasPreviousPageFieldNumber = 7;
    private bool hasPreviousPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreviousPage {
      get { return hasPreviousPage_; }
      set {
        hasPreviousPage_ = value;
      }
    }

    /// <summary>Field number for the "hasNextPage" field.</summary>
    public const int HasNextPageFieldNumber = 8;
    private bool hasNextPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPage {
      get { return hasNextPage_; }
      set {
        hasNextPage_ = value;
      }
    }

    /// <summary>Field number for the "isFirstPage" field.</summary>
    public const int IsFirstPageFieldNumber = 9;
    private bool isFirstPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirstPage {
      get { return isFirstPage_; }
      set {
        isFirstPage_ = value;
      }
    }

    /// <summary>Field number for the "isLastPage" field.</summary>
    public const int IsLastPageFieldNumber = 10;
    private bool isLastPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastPage {
      get { return isLastPage_; }
      set {
        isLastPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationPageListGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationPageListGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subset_.Equals(other.subset_)) return false;
      if (Count != other.Count) return false;
      if (PageCount != other.PageCount) return false;
      if (TotalItemCount != other.TotalItemCount) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (HasPreviousPage != other.HasPreviousPage) return false;
      if (HasNextPage != other.HasNextPage) return false;
      if (IsFirstPage != other.IsFirstPage) return false;
      if (IsLastPage != other.IsLastPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subset_.GetHashCode();
      if (count_ != null) hash ^= Count.GetHashCode();
      if (pageCount_ != null) hash ^= PageCount.GetHashCode();
      if (totalItemCount_ != null) hash ^= TotalItemCount.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (HasPreviousPage != false) hash ^= HasPreviousPage.GetHashCode();
      if (HasNextPage != false) hash ^= HasNextPage.GetHashCode();
      if (IsFirstPage != false) hash ^= IsFirstPage.GetHashCode();
      if (IsLastPage != false) hash ^= IsLastPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subset_.WriteTo(output, _repeated_subset_codec);
      if (count_ != null) {
        _single_count_codec.WriteTagAndValue(output, Count);
      }
      if (pageCount_ != null) {
        _single_pageCount_codec.WriteTagAndValue(output, PageCount);
      }
      if (totalItemCount_ != null) {
        _single_totalItemCount_codec.WriteTagAndValue(output, TotalItemCount);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (HasPreviousPage != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasPreviousPage);
      }
      if (HasNextPage != false) {
        output.WriteRawTag(64);
        output.WriteBool(HasNextPage);
      }
      if (IsFirstPage != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsFirstPage);
      }
      if (IsLastPage != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsLastPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subset_.CalculateSize(_repeated_subset_codec);
      if (count_ != null) {
        size += _single_count_codec.CalculateSizeWithTag(Count);
      }
      if (pageCount_ != null) {
        size += _single_pageCount_codec.CalculateSizeWithTag(PageCount);
      }
      if (totalItemCount_ != null) {
        size += _single_totalItemCount_codec.CalculateSizeWithTag(TotalItemCount);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (HasPreviousPage != false) {
        size += 1 + 1;
      }
      if (HasNextPage != false) {
        size += 1 + 1;
      }
      if (IsFirstPage != false) {
        size += 1 + 1;
      }
      if (IsLastPage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationPageListGrpcDTO other) {
      if (other == null) {
        return;
      }
      subset_.Add(other.subset_);
      if (other.count_ != null) {
        if (count_ == null || other.Count != 0) {
          Count = other.Count;
        }
      }
      if (other.pageCount_ != null) {
        if (pageCount_ == null || other.PageCount != 0) {
          PageCount = other.PageCount;
        }
      }
      if (other.totalItemCount_ != null) {
        if (totalItemCount_ == null || other.TotalItemCount != 0) {
          TotalItemCount = other.TotalItemCount;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.HasPreviousPage != false) {
        HasPreviousPage = other.HasPreviousPage;
      }
      if (other.HasNextPage != false) {
        HasNextPage = other.HasNextPage;
      }
      if (other.IsFirstPage != false) {
        IsFirstPage = other.IsFirstPage;
      }
      if (other.IsLastPage != false) {
        IsLastPage = other.IsLastPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subset_.AddEntriesFrom(input, _repeated_subset_codec);
            break;
          }
          case 18: {
            int? value = _single_count_codec.Read(input);
            if (count_ == null || value != 0) {
              Count = value;
            }
            break;
          }
          case 26: {
            int? value = _single_pageCount_codec.Read(input);
            if (pageCount_ == null || value != 0) {
              PageCount = value;
            }
            break;
          }
          case 34: {
            int? value = _single_totalItemCount_codec.Read(input);
            if (totalItemCount_ == null || value != 0) {
              TotalItemCount = value;
            }
            break;
          }
          case 42: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 50: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 56: {
            HasPreviousPage = input.ReadBool();
            break;
          }
          case 64: {
            HasNextPage = input.ReadBool();
            break;
          }
          case 72: {
            IsFirstPage = input.ReadBool();
            break;
          }
          case 80: {
            IsLastPage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotificationDTOGrpc : pb::IMessage<NotificationDTOGrpc> {
    private static readonly pb::MessageParser<NotificationDTOGrpc> _parser = new pb::MessageParser<NotificationDTOGrpc>(() => new NotificationDTOGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationDTOGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Notification.API.Protos.NotificationReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationDTOGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationDTOGrpc(NotificationDTOGrpc other) : this() {
      Type = other.Type;
      Zone = other.Zone;
      Sender = other.Sender;
      SenderId = other.SenderId;
      Receiver = other.Receiver;
      ReceiverId = other.ReceiverId;
      Title = other.Title;
      Content = other.Content;
      Payload = other.Payload;
      IsRead = other.IsRead;
      Id = other.Id;
      ReadableTime = other.ReadableTime;
      createdDate_ = other.createdDate_ != null ? other.createdDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationDTOGrpc Clone() {
      return new NotificationDTOGrpc(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_type_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }


    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_zone_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? zone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Zone {
      get { return zone_; }
      set {
        zone_ = value;
      }
    }


    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_sender_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string sender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = value;
      }
    }


    /// <summary>Field number for the "senderId" field.</summary>
    public const int SenderIdFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_senderId_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string senderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderId {
      get { return senderId_; }
      set {
        senderId_ = value;
      }
    }


    /// <summary>Field number for the "receiver" field.</summary>
    public const int ReceiverFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_receiver_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string receiver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Receiver {
      get { return receiver_; }
      set {
        receiver_ = value;
      }
    }


    /// <summary>Field number for the "receiverId" field.</summary>
    public const int ReceiverIdFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_receiverId_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string receiverId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReceiverId {
      get { return receiverId_; }
      set {
        receiverId_ = value;
      }
    }


    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_title_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }


    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_content_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }


    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_payload_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }


    /// <summary>Field number for the "isRead" field.</summary>
    public const int IsReadFieldNumber = 10;
    private static readonly pb::FieldCodec<bool?> _single_isRead_codec = pb::FieldCodec.ForStructWrapper<bool>(82);
    private bool? isRead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? IsRead {
      get { return isRead_; }
      set {
        isRead_ = value;
      }
    }


    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "readableTime" field.</summary>
    public const int ReadableTimeFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_readableTime_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string readableTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReadableTime {
      get { return readableTime_; }
      set {
        readableTime_ = value;
      }
    }


    /// <summary>Field number for the "createdDate" field.</summary>
    public const int CreatedDateFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedDate {
      get { return createdDate_; }
      set {
        createdDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationDTOGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationDTOGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Zone != other.Zone) return false;
      if (Sender != other.Sender) return false;
      if (SenderId != other.SenderId) return false;
      if (Receiver != other.Receiver) return false;
      if (ReceiverId != other.ReceiverId) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if (Payload != other.Payload) return false;
      if (IsRead != other.IsRead) return false;
      if (Id != other.Id) return false;
      if (ReadableTime != other.ReadableTime) return false;
      if (!object.Equals(CreatedDate, other.CreatedDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (type_ != null) hash ^= Type.GetHashCode();
      if (zone_ != null) hash ^= Zone.GetHashCode();
      if (sender_ != null) hash ^= Sender.GetHashCode();
      if (senderId_ != null) hash ^= SenderId.GetHashCode();
      if (receiver_ != null) hash ^= Receiver.GetHashCode();
      if (receiverId_ != null) hash ^= ReceiverId.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (isRead_ != null) hash ^= IsRead.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (readableTime_ != null) hash ^= ReadableTime.GetHashCode();
      if (createdDate_ != null) hash ^= CreatedDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (type_ != null) {
        _single_type_codec.WriteTagAndValue(output, Type);
      }
      if (zone_ != null) {
        _single_zone_codec.WriteTagAndValue(output, Zone);
      }
      if (sender_ != null) {
        _single_sender_codec.WriteTagAndValue(output, Sender);
      }
      if (senderId_ != null) {
        _single_senderId_codec.WriteTagAndValue(output, SenderId);
      }
      if (receiver_ != null) {
        _single_receiver_codec.WriteTagAndValue(output, Receiver);
      }
      if (receiverId_ != null) {
        _single_receiverId_codec.WriteTagAndValue(output, ReceiverId);
      }
      if (title_ != null) {
        _single_title_codec.WriteTagAndValue(output, Title);
      }
      if (content_ != null) {
        _single_content_codec.WriteTagAndValue(output, Content);
      }
      if (payload_ != null) {
        _single_payload_codec.WriteTagAndValue(output, Payload);
      }
      if (isRead_ != null) {
        _single_isRead_codec.WriteTagAndValue(output, IsRead);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (readableTime_ != null) {
        _single_readableTime_codec.WriteTagAndValue(output, ReadableTime);
      }
      if (createdDate_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(CreatedDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (type_ != null) {
        size += _single_type_codec.CalculateSizeWithTag(Type);
      }
      if (zone_ != null) {
        size += _single_zone_codec.CalculateSizeWithTag(Zone);
      }
      if (sender_ != null) {
        size += _single_sender_codec.CalculateSizeWithTag(Sender);
      }
      if (senderId_ != null) {
        size += _single_senderId_codec.CalculateSizeWithTag(SenderId);
      }
      if (receiver_ != null) {
        size += _single_receiver_codec.CalculateSizeWithTag(Receiver);
      }
      if (receiverId_ != null) {
        size += _single_receiverId_codec.CalculateSizeWithTag(ReceiverId);
      }
      if (title_ != null) {
        size += _single_title_codec.CalculateSizeWithTag(Title);
      }
      if (content_ != null) {
        size += _single_content_codec.CalculateSizeWithTag(Content);
      }
      if (payload_ != null) {
        size += _single_payload_codec.CalculateSizeWithTag(Payload);
      }
      if (isRead_ != null) {
        size += _single_isRead_codec.CalculateSizeWithTag(IsRead);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (readableTime_ != null) {
        size += _single_readableTime_codec.CalculateSizeWithTag(ReadableTime);
      }
      if (createdDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationDTOGrpc other) {
      if (other == null) {
        return;
      }
      if (other.type_ != null) {
        if (type_ == null || other.Type != 0) {
          Type = other.Type;
        }
      }
      if (other.zone_ != null) {
        if (zone_ == null || other.Zone != 0) {
          Zone = other.Zone;
        }
      }
      if (other.sender_ != null) {
        if (sender_ == null || other.Sender != "") {
          Sender = other.Sender;
        }
      }
      if (other.senderId_ != null) {
        if (senderId_ == null || other.SenderId != "") {
          SenderId = other.SenderId;
        }
      }
      if (other.receiver_ != null) {
        if (receiver_ == null || other.Receiver != "") {
          Receiver = other.Receiver;
        }
      }
      if (other.receiverId_ != null) {
        if (receiverId_ == null || other.ReceiverId != "") {
          ReceiverId = other.ReceiverId;
        }
      }
      if (other.title_ != null) {
        if (title_ == null || other.Title != "") {
          Title = other.Title;
        }
      }
      if (other.content_ != null) {
        if (content_ == null || other.Content != "") {
          Content = other.Content;
        }
      }
      if (other.payload_ != null) {
        if (payload_ == null || other.Payload != "") {
          Payload = other.Payload;
        }
      }
      if (other.isRead_ != null) {
        if (isRead_ == null || other.IsRead != false) {
          IsRead = other.IsRead;
        }
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.readableTime_ != null) {
        if (readableTime_ == null || other.ReadableTime != "") {
          ReadableTime = other.ReadableTime;
        }
      }
      if (other.createdDate_ != null) {
        if (createdDate_ == null) {
          CreatedDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedDate.MergeFrom(other.CreatedDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_type_codec.Read(input);
            if (type_ == null || value != 0) {
              Type = value;
            }
            break;
          }
          case 18: {
            int? value = _single_zone_codec.Read(input);
            if (zone_ == null || value != 0) {
              Zone = value;
            }
            break;
          }
          case 26: {
            string value = _single_sender_codec.Read(input);
            if (sender_ == null || value != "") {
              Sender = value;
            }
            break;
          }
          case 34: {
            string value = _single_senderId_codec.Read(input);
            if (senderId_ == null || value != "") {
              SenderId = value;
            }
            break;
          }
          case 42: {
            string value = _single_receiver_codec.Read(input);
            if (receiver_ == null || value != "") {
              Receiver = value;
            }
            break;
          }
          case 50: {
            string value = _single_receiverId_codec.Read(input);
            if (receiverId_ == null || value != "") {
              ReceiverId = value;
            }
            break;
          }
          case 58: {
            string value = _single_title_codec.Read(input);
            if (title_ == null || value != "") {
              Title = value;
            }
            break;
          }
          case 66: {
            string value = _single_content_codec.Read(input);
            if (content_ == null || value != "") {
              Content = value;
            }
            break;
          }
          case 74: {
            string value = _single_payload_codec.Read(input);
            if (payload_ == null || value != "") {
              Payload = value;
            }
            break;
          }
          case 82: {
            bool? value = _single_isRead_codec.Read(input);
            if (isRead_ == null || value != false) {
              IsRead = value;
            }
            break;
          }
          case 90: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 98: {
            string value = _single_readableTime_codec.Read(input);
            if (readableTime_ == null || value != "") {
              ReadableTime = value;
            }
            break;
          }
          case 106: {
            if (createdDate_ == null) {
              CreatedDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedDate);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
