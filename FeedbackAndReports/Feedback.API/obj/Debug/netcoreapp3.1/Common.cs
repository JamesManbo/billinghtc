// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ContractManagement.API.Protos {

  /// <summary>Holder for reflection information generated from common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxjb21tb24ucHJvdG8SFUNvbnRyYWN0TWFuYWdlbWVudEFwaRoeZ29vZ2xl",
            "L3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvIrICChFSZXF1ZXN0RmlsdGVyR3JwYxItCgdvcmRlckJ5",
            "GAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEikKA2RpchgC",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIpCgRza2lwGAMg",
            "ASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSKQoEdGFrZRgEIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEi0KB2ZpbHRlcnMYBSAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSDgoGcGFnaW5nGAYg",
            "ASgIEi4KCGtleXdvcmRzGAcgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlIqMGCg5QaWN0dXJlRFRPR3JwYxInCgJpZBgBIAEoCzIbLmdvb2ds",
            "ZS5wcm90b2J1Zi5JbnQzMlZhbHVlEioKBG5hbWUYAiABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSLgoIZmlsZU5hbWUYAyABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLgoIZmlsZVBhdGgYBCABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSKQoEc2l6ZRgFIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjEKDGRpc3BsYXlPcmRlchgGIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjAKC3BpY3R1cmVUeXBl",
            "GAcgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSLwoJZXh0ZW5z",
            "aW9uGAggASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjIKDHJl",
            "ZGlyZWN0TGluaxgJIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRIyCgx0ZW1wb3JhcnlVcmwYCiABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWUSEgoKaXNVcGRhdGluZxgLIAEoCBIyCgxvcHRpbWl6ZWRVcmwY",
            "DCABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoHdzE2MFVy",
            "bBgNIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIuCgh3MTI4",
            "MFVybBgOIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRItCgd3",
            "MzIwVXJsGA8gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi0K",
            "B3c2NDBVcmwYECABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "LgoIdGh1bWJVcmwYESABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUimwEKBU1vbmV5EisKBXZhbHVlGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEjEKC2Zvcm1hdFZhbHVlGAIgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEjIKDGN1cnJlbmN5Q29kZRgDIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSKlBAoXSW5zdGFsbGF0aW9uQWRk",
            "cmVzc0dycGMSLAoGc3RyZWV0GAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlEi4KCGRpc3RyaWN0GAIgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEjAKCmRpc3RyaWN0SWQYAyABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSKgoEY2l0eRgEIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIsCgZjaXR5SWQYBSABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSMQoLZnVsbEFkZHJlc3MYBiABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLgoIYnVpbGRpbmcYByABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSKwoFZmxvb3IYCCABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMAoKcm9vbU51bWJlchgJIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRItCgdjb3VudHJ5GAog",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi8KCWNvdW50cnlJ",
            "ZBgLIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSKIAwoTQmls",
            "bGluZ1RpbWVMaW5lR3JwYxIVCg1wYXltZW50UGVyaW9kGAEgASgFEi0KCWVm",
            "ZmVjdGl2ZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKgoG",
            "c2lnbmVkGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIxCg1s",
            "YXRlc3RCaWxsaW5nGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBIvCgtuZXh0QmlsbGluZxgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXASNwoTc3VzcGVuc2lvblN0YXJ0RGF0ZRgGIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXASNQoRc3VzcGVuc2lvbkVuZERhdGUYByABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhUKDWRheXNTdXNwZW5kZWQY",
            "CCABKAUSFAoMcHJlcGF5UGVyaW9kGAkgASgFIvwBChRTZWxlY3Rpb25JdGVt",
            "RFRPR3JwYxIqCgR0ZXh0GAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEioKBGNvZGUYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUSKgoFdmFsdWUYAyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJW",
            "YWx1ZRItCghwYXJlbnRJZBgEIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQz",
            "MlZhbHVlEjEKDGRpc3BsYXlPcmRlchgFIAEoCzIbLmdvb2dsZS5wcm90b2J1",
            "Zi5JbnQzMlZhbHVlImcKF0xzdFNlbGVjdGlvbkl0ZW1EVE9HcnBjEkwKF2xz",
            "dFNlbGVjdGlvbkl0ZW1EVE9HcnBjGAEgAygLMisuQ29udHJhY3RNYW5hZ2Vt",
            "ZW50QXBpLlNlbGVjdGlvbkl0ZW1EVE9HcnBjQiCqAh1Db250cmFjdE1hbmFn",
            "ZW1lbnQuQVBJLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.RequestFilterGrpc), global::ContractManagement.API.Protos.RequestFilterGrpc.Parser, new[]{ "OrderBy", "Dir", "Skip", "Take", "Filters", "Paging", "Keywords" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.PictureDTOGrpc), global::ContractManagement.API.Protos.PictureDTOGrpc.Parser, new[]{ "Id", "Name", "FileName", "FilePath", "Size", "DisplayOrder", "PictureType", "Extension", "RedirectLink", "TemporaryUrl", "IsUpdating", "OptimizedUrl", "W160Url", "W1280Url", "W320Url", "W640Url", "ThumbUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.Money), global::ContractManagement.API.Protos.Money.Parser, new[]{ "Value", "FormatValue", "CurrencyCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.InstallationAddressGrpc), global::ContractManagement.API.Protos.InstallationAddressGrpc.Parser, new[]{ "Street", "District", "DistrictId", "City", "CityId", "FullAddress", "Building", "Floor", "RoomNumber", "Country", "CountryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.BillingTimeLineGrpc), global::ContractManagement.API.Protos.BillingTimeLineGrpc.Parser, new[]{ "PaymentPeriod", "Effective", "Signed", "LatestBilling", "NextBilling", "SuspensionStartDate", "SuspensionEndDate", "DaysSuspended", "PrepayPeriod" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.SelectionItemDTOGrpc), global::ContractManagement.API.Protos.SelectionItemDTOGrpc.Parser, new[]{ "Text", "Code", "Value", "ParentId", "DisplayOrder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.LstSelectionItemDTOGrpc), global::ContractManagement.API.Protos.LstSelectionItemDTOGrpc.Parser, new[]{ "LstSelectionItemDTOGrpc_" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RequestFilterGrpc : pb::IMessage<RequestFilterGrpc> {
    private static readonly pb::MessageParser<RequestFilterGrpc> _parser = new pb::MessageParser<RequestFilterGrpc>(() => new RequestFilterGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestFilterGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFilterGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFilterGrpc(RequestFilterGrpc other) : this() {
      OrderBy = other.OrderBy;
      Dir = other.Dir;
      Skip = other.Skip;
      Take = other.Take;
      Filters = other.Filters;
      paging_ = other.paging_;
      Keywords = other.Keywords;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestFilterGrpc Clone() {
      return new RequestFilterGrpc(this);
    }

    /// <summary>Field number for the "orderBy" field.</summary>
    public const int OrderByFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_orderBy_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string orderBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = value;
      }
    }


    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_dir_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_filters_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string filters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }


    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 6;
    private bool paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "keywords" field.</summary>
    public const int KeywordsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_keywords_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string keywords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Keywords {
      get { return keywords_; }
      set {
        keywords_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestFilterGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestFilterGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderBy != other.OrderBy) return false;
      if (Dir != other.Dir) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (Filters != other.Filters) return false;
      if (Paging != other.Paging) return false;
      if (Keywords != other.Keywords) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (orderBy_ != null) hash ^= OrderBy.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (filters_ != null) hash ^= Filters.GetHashCode();
      if (Paging != false) hash ^= Paging.GetHashCode();
      if (keywords_ != null) hash ^= Keywords.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (orderBy_ != null) {
        _single_orderBy_codec.WriteTagAndValue(output, OrderBy);
      }
      if (dir_ != null) {
        _single_dir_codec.WriteTagAndValue(output, Dir);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (filters_ != null) {
        _single_filters_codec.WriteTagAndValue(output, Filters);
      }
      if (Paging != false) {
        output.WriteRawTag(48);
        output.WriteBool(Paging);
      }
      if (keywords_ != null) {
        _single_keywords_codec.WriteTagAndValue(output, Keywords);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (orderBy_ != null) {
        size += _single_orderBy_codec.CalculateSizeWithTag(OrderBy);
      }
      if (dir_ != null) {
        size += _single_dir_codec.CalculateSizeWithTag(Dir);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (filters_ != null) {
        size += _single_filters_codec.CalculateSizeWithTag(Filters);
      }
      if (Paging != false) {
        size += 1 + 1;
      }
      if (keywords_ != null) {
        size += _single_keywords_codec.CalculateSizeWithTag(Keywords);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestFilterGrpc other) {
      if (other == null) {
        return;
      }
      if (other.orderBy_ != null) {
        if (orderBy_ == null || other.OrderBy != "") {
          OrderBy = other.OrderBy;
        }
      }
      if (other.dir_ != null) {
        if (dir_ == null || other.Dir != "") {
          Dir = other.Dir;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.filters_ != null) {
        if (filters_ == null || other.Filters != "") {
          Filters = other.Filters;
        }
      }
      if (other.Paging != false) {
        Paging = other.Paging;
      }
      if (other.keywords_ != null) {
        if (keywords_ == null || other.Keywords != "") {
          Keywords = other.Keywords;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_orderBy_codec.Read(input);
            if (orderBy_ == null || value != "") {
              OrderBy = value;
            }
            break;
          }
          case 18: {
            string value = _single_dir_codec.Read(input);
            if (dir_ == null || value != "") {
              Dir = value;
            }
            break;
          }
          case 26: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 34: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 42: {
            string value = _single_filters_codec.Read(input);
            if (filters_ == null || value != "") {
              Filters = value;
            }
            break;
          }
          case 48: {
            Paging = input.ReadBool();
            break;
          }
          case 58: {
            string value = _single_keywords_codec.Read(input);
            if (keywords_ == null || value != "") {
              Keywords = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class PictureDTOGrpc : pb::IMessage<PictureDTOGrpc> {
    private static readonly pb::MessageParser<PictureDTOGrpc> _parser = new pb::MessageParser<PictureDTOGrpc>(() => new PictureDTOGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PictureDTOGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureDTOGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureDTOGrpc(PictureDTOGrpc other) : this() {
      Id = other.Id;
      Name = other.Name;
      FileName = other.FileName;
      FilePath = other.FilePath;
      Size = other.Size;
      DisplayOrder = other.DisplayOrder;
      PictureType = other.PictureType;
      Extension = other.Extension;
      RedirectLink = other.RedirectLink;
      TemporaryUrl = other.TemporaryUrl;
      isUpdating_ = other.isUpdating_;
      OptimizedUrl = other.OptimizedUrl;
      W160Url = other.W160Url;
      W1280Url = other.W1280Url;
      W320Url = other.W320Url;
      W640Url = other.W640Url;
      ThumbUrl = other.ThumbUrl;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureDTOGrpc Clone() {
      return new PictureDTOGrpc(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_id_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_fileName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string fileName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = value;
      }
    }


    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_filePath_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string filePath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = value;
      }
    }


    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 5;
    private static readonly pb::FieldCodec<long?> _single_size_codec = pb::FieldCodec.ForStructWrapper<long>(42);
    private long? size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }


    /// <summary>Field number for the "displayOrder" field.</summary>
    public const int DisplayOrderFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_displayOrder_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? displayOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? DisplayOrder {
      get { return displayOrder_; }
      set {
        displayOrder_ = value;
      }
    }


    /// <summary>Field number for the "pictureType" field.</summary>
    public const int PictureTypeFieldNumber = 7;
    private static readonly pb::FieldCodec<int?> _single_pictureType_codec = pb::FieldCodec.ForStructWrapper<int>(58);
    private int? pictureType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PictureType {
      get { return pictureType_; }
      set {
        pictureType_ = value;
      }
    }


    /// <summary>Field number for the "extension" field.</summary>
    public const int ExtensionFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_extension_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string extension_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Extension {
      get { return extension_; }
      set {
        extension_ = value;
      }
    }


    /// <summary>Field number for the "redirectLink" field.</summary>
    public const int RedirectLinkFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_redirectLink_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string redirectLink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RedirectLink {
      get { return redirectLink_; }
      set {
        redirectLink_ = value;
      }
    }


    /// <summary>Field number for the "temporaryUrl" field.</summary>
    public const int TemporaryUrlFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_temporaryUrl_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string temporaryUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemporaryUrl {
      get { return temporaryUrl_; }
      set {
        temporaryUrl_ = value;
      }
    }


    /// <summary>Field number for the "isUpdating" field.</summary>
    public const int IsUpdatingFieldNumber = 11;
    private bool isUpdating_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUpdating {
      get { return isUpdating_; }
      set {
        isUpdating_ = value;
      }
    }

    /// <summary>Field number for the "optimizedUrl" field.</summary>
    public const int OptimizedUrlFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_optimizedUrl_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string optimizedUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OptimizedUrl {
      get { return optimizedUrl_; }
      set {
        optimizedUrl_ = value;
      }
    }


    /// <summary>Field number for the "w160Url" field.</summary>
    public const int W160UrlFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_w160Url_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string w160Url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string W160Url {
      get { return w160Url_; }
      set {
        w160Url_ = value;
      }
    }


    /// <summary>Field number for the "w1280Url" field.</summary>
    public const int W1280UrlFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_w1280Url_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string w1280Url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string W1280Url {
      get { return w1280Url_; }
      set {
        w1280Url_ = value;
      }
    }


    /// <summary>Field number for the "w320Url" field.</summary>
    public const int W320UrlFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_w320Url_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string w320Url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string W320Url {
      get { return w320Url_; }
      set {
        w320Url_ = value;
      }
    }


    /// <summary>Field number for the "w640Url" field.</summary>
    public const int W640UrlFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_w640Url_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string w640Url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string W640Url {
      get { return w640Url_; }
      set {
        w640Url_ = value;
      }
    }


    /// <summary>Field number for the "thumbUrl" field.</summary>
    public const int ThumbUrlFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _single_thumbUrl_codec = pb::FieldCodec.ForClassWrapper<string>(138);
    private string thumbUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThumbUrl {
      get { return thumbUrl_; }
      set {
        thumbUrl_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PictureDTOGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PictureDTOGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (FileName != other.FileName) return false;
      if (FilePath != other.FilePath) return false;
      if (Size != other.Size) return false;
      if (DisplayOrder != other.DisplayOrder) return false;
      if (PictureType != other.PictureType) return false;
      if (Extension != other.Extension) return false;
      if (RedirectLink != other.RedirectLink) return false;
      if (TemporaryUrl != other.TemporaryUrl) return false;
      if (IsUpdating != other.IsUpdating) return false;
      if (OptimizedUrl != other.OptimizedUrl) return false;
      if (W160Url != other.W160Url) return false;
      if (W1280Url != other.W1280Url) return false;
      if (W320Url != other.W320Url) return false;
      if (W640Url != other.W640Url) return false;
      if (ThumbUrl != other.ThumbUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (fileName_ != null) hash ^= FileName.GetHashCode();
      if (filePath_ != null) hash ^= FilePath.GetHashCode();
      if (size_ != null) hash ^= Size.GetHashCode();
      if (displayOrder_ != null) hash ^= DisplayOrder.GetHashCode();
      if (pictureType_ != null) hash ^= PictureType.GetHashCode();
      if (extension_ != null) hash ^= Extension.GetHashCode();
      if (redirectLink_ != null) hash ^= RedirectLink.GetHashCode();
      if (temporaryUrl_ != null) hash ^= TemporaryUrl.GetHashCode();
      if (IsUpdating != false) hash ^= IsUpdating.GetHashCode();
      if (optimizedUrl_ != null) hash ^= OptimizedUrl.GetHashCode();
      if (w160Url_ != null) hash ^= W160Url.GetHashCode();
      if (w1280Url_ != null) hash ^= W1280Url.GetHashCode();
      if (w320Url_ != null) hash ^= W320Url.GetHashCode();
      if (w640Url_ != null) hash ^= W640Url.GetHashCode();
      if (thumbUrl_ != null) hash ^= ThumbUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (fileName_ != null) {
        _single_fileName_codec.WriteTagAndValue(output, FileName);
      }
      if (filePath_ != null) {
        _single_filePath_codec.WriteTagAndValue(output, FilePath);
      }
      if (size_ != null) {
        _single_size_codec.WriteTagAndValue(output, Size);
      }
      if (displayOrder_ != null) {
        _single_displayOrder_codec.WriteTagAndValue(output, DisplayOrder);
      }
      if (pictureType_ != null) {
        _single_pictureType_codec.WriteTagAndValue(output, PictureType);
      }
      if (extension_ != null) {
        _single_extension_codec.WriteTagAndValue(output, Extension);
      }
      if (redirectLink_ != null) {
        _single_redirectLink_codec.WriteTagAndValue(output, RedirectLink);
      }
      if (temporaryUrl_ != null) {
        _single_temporaryUrl_codec.WriteTagAndValue(output, TemporaryUrl);
      }
      if (IsUpdating != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsUpdating);
      }
      if (optimizedUrl_ != null) {
        _single_optimizedUrl_codec.WriteTagAndValue(output, OptimizedUrl);
      }
      if (w160Url_ != null) {
        _single_w160Url_codec.WriteTagAndValue(output, W160Url);
      }
      if (w1280Url_ != null) {
        _single_w1280Url_codec.WriteTagAndValue(output, W1280Url);
      }
      if (w320Url_ != null) {
        _single_w320Url_codec.WriteTagAndValue(output, W320Url);
      }
      if (w640Url_ != null) {
        _single_w640Url_codec.WriteTagAndValue(output, W640Url);
      }
      if (thumbUrl_ != null) {
        _single_thumbUrl_codec.WriteTagAndValue(output, ThumbUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (fileName_ != null) {
        size += _single_fileName_codec.CalculateSizeWithTag(FileName);
      }
      if (filePath_ != null) {
        size += _single_filePath_codec.CalculateSizeWithTag(FilePath);
      }
      if (size_ != null) {
        size += _single_size_codec.CalculateSizeWithTag(Size);
      }
      if (displayOrder_ != null) {
        size += _single_displayOrder_codec.CalculateSizeWithTag(DisplayOrder);
      }
      if (pictureType_ != null) {
        size += _single_pictureType_codec.CalculateSizeWithTag(PictureType);
      }
      if (extension_ != null) {
        size += _single_extension_codec.CalculateSizeWithTag(Extension);
      }
      if (redirectLink_ != null) {
        size += _single_redirectLink_codec.CalculateSizeWithTag(RedirectLink);
      }
      if (temporaryUrl_ != null) {
        size += _single_temporaryUrl_codec.CalculateSizeWithTag(TemporaryUrl);
      }
      if (IsUpdating != false) {
        size += 1 + 1;
      }
      if (optimizedUrl_ != null) {
        size += _single_optimizedUrl_codec.CalculateSizeWithTag(OptimizedUrl);
      }
      if (w160Url_ != null) {
        size += _single_w160Url_codec.CalculateSizeWithTag(W160Url);
      }
      if (w1280Url_ != null) {
        size += _single_w1280Url_codec.CalculateSizeWithTag(W1280Url);
      }
      if (w320Url_ != null) {
        size += _single_w320Url_codec.CalculateSizeWithTag(W320Url);
      }
      if (w640Url_ != null) {
        size += _single_w640Url_codec.CalculateSizeWithTag(W640Url);
      }
      if (thumbUrl_ != null) {
        size += _single_thumbUrl_codec.CalculateSizeWithTag(ThumbUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PictureDTOGrpc other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0) {
          Id = other.Id;
        }
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.fileName_ != null) {
        if (fileName_ == null || other.FileName != "") {
          FileName = other.FileName;
        }
      }
      if (other.filePath_ != null) {
        if (filePath_ == null || other.FilePath != "") {
          FilePath = other.FilePath;
        }
      }
      if (other.size_ != null) {
        if (size_ == null || other.Size != 0L) {
          Size = other.Size;
        }
      }
      if (other.displayOrder_ != null) {
        if (displayOrder_ == null || other.DisplayOrder != 0) {
          DisplayOrder = other.DisplayOrder;
        }
      }
      if (other.pictureType_ != null) {
        if (pictureType_ == null || other.PictureType != 0) {
          PictureType = other.PictureType;
        }
      }
      if (other.extension_ != null) {
        if (extension_ == null || other.Extension != "") {
          Extension = other.Extension;
        }
      }
      if (other.redirectLink_ != null) {
        if (redirectLink_ == null || other.RedirectLink != "") {
          RedirectLink = other.RedirectLink;
        }
      }
      if (other.temporaryUrl_ != null) {
        if (temporaryUrl_ == null || other.TemporaryUrl != "") {
          TemporaryUrl = other.TemporaryUrl;
        }
      }
      if (other.IsUpdating != false) {
        IsUpdating = other.IsUpdating;
      }
      if (other.optimizedUrl_ != null) {
        if (optimizedUrl_ == null || other.OptimizedUrl != "") {
          OptimizedUrl = other.OptimizedUrl;
        }
      }
      if (other.w160Url_ != null) {
        if (w160Url_ == null || other.W160Url != "") {
          W160Url = other.W160Url;
        }
      }
      if (other.w1280Url_ != null) {
        if (w1280Url_ == null || other.W1280Url != "") {
          W1280Url = other.W1280Url;
        }
      }
      if (other.w320Url_ != null) {
        if (w320Url_ == null || other.W320Url != "") {
          W320Url = other.W320Url;
        }
      }
      if (other.w640Url_ != null) {
        if (w640Url_ == null || other.W640Url != "") {
          W640Url = other.W640Url;
        }
      }
      if (other.thumbUrl_ != null) {
        if (thumbUrl_ == null || other.ThumbUrl != "") {
          ThumbUrl = other.ThumbUrl;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0) {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 26: {
            string value = _single_fileName_codec.Read(input);
            if (fileName_ == null || value != "") {
              FileName = value;
            }
            break;
          }
          case 34: {
            string value = _single_filePath_codec.Read(input);
            if (filePath_ == null || value != "") {
              FilePath = value;
            }
            break;
          }
          case 42: {
            long? value = _single_size_codec.Read(input);
            if (size_ == null || value != 0L) {
              Size = value;
            }
            break;
          }
          case 50: {
            int? value = _single_displayOrder_codec.Read(input);
            if (displayOrder_ == null || value != 0) {
              DisplayOrder = value;
            }
            break;
          }
          case 58: {
            int? value = _single_pictureType_codec.Read(input);
            if (pictureType_ == null || value != 0) {
              PictureType = value;
            }
            break;
          }
          case 66: {
            string value = _single_extension_codec.Read(input);
            if (extension_ == null || value != "") {
              Extension = value;
            }
            break;
          }
          case 74: {
            string value = _single_redirectLink_codec.Read(input);
            if (redirectLink_ == null || value != "") {
              RedirectLink = value;
            }
            break;
          }
          case 82: {
            string value = _single_temporaryUrl_codec.Read(input);
            if (temporaryUrl_ == null || value != "") {
              TemporaryUrl = value;
            }
            break;
          }
          case 88: {
            IsUpdating = input.ReadBool();
            break;
          }
          case 98: {
            string value = _single_optimizedUrl_codec.Read(input);
            if (optimizedUrl_ == null || value != "") {
              OptimizedUrl = value;
            }
            break;
          }
          case 106: {
            string value = _single_w160Url_codec.Read(input);
            if (w160Url_ == null || value != "") {
              W160Url = value;
            }
            break;
          }
          case 114: {
            string value = _single_w1280Url_codec.Read(input);
            if (w1280Url_ == null || value != "") {
              W1280Url = value;
            }
            break;
          }
          case 122: {
            string value = _single_w320Url_codec.Read(input);
            if (w320Url_ == null || value != "") {
              W320Url = value;
            }
            break;
          }
          case 130: {
            string value = _single_w640Url_codec.Read(input);
            if (w640Url_ == null || value != "") {
              W640Url = value;
            }
            break;
          }
          case 138: {
            string value = _single_thumbUrl_codec.Read(input);
            if (thumbUrl_ == null || value != "") {
              ThumbUrl = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class Money : pb::IMessage<Money> {
    private static readonly pb::MessageParser<Money> _parser = new pb::MessageParser<Money>(() => new Money());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Money> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money(Money other) : this() {
      Value = other.Value;
      FormatValue = other.FormatValue;
      CurrencyCode = other.CurrencyCode;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Money Clone() {
      return new Money(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_value_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }


    /// <summary>Field number for the "formatValue" field.</summary>
    public const int FormatValueFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_formatValue_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string formatValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormatValue {
      get { return formatValue_; }
      set {
        formatValue_ = value;
      }
    }


    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_currencyCode_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string currencyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Money);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Money other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (FormatValue != other.FormatValue) return false;
      if (CurrencyCode != other.CurrencyCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (formatValue_ != null) hash ^= FormatValue.GetHashCode();
      if (currencyCode_ != null) hash ^= CurrencyCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (value_ != null) {
        _single_value_codec.WriteTagAndValue(output, Value);
      }
      if (formatValue_ != null) {
        _single_formatValue_codec.WriteTagAndValue(output, FormatValue);
      }
      if (currencyCode_ != null) {
        _single_currencyCode_codec.WriteTagAndValue(output, CurrencyCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += _single_value_codec.CalculateSizeWithTag(Value);
      }
      if (formatValue_ != null) {
        size += _single_formatValue_codec.CalculateSizeWithTag(FormatValue);
      }
      if (currencyCode_ != null) {
        size += _single_currencyCode_codec.CalculateSizeWithTag(CurrencyCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Money other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null || other.Value != "") {
          Value = other.Value;
        }
      }
      if (other.formatValue_ != null) {
        if (formatValue_ == null || other.FormatValue != "") {
          FormatValue = other.FormatValue;
        }
      }
      if (other.currencyCode_ != null) {
        if (currencyCode_ == null || other.CurrencyCode != "") {
          CurrencyCode = other.CurrencyCode;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_value_codec.Read(input);
            if (value_ == null || value != "") {
              Value = value;
            }
            break;
          }
          case 18: {
            string value = _single_formatValue_codec.Read(input);
            if (formatValue_ == null || value != "") {
              FormatValue = value;
            }
            break;
          }
          case 26: {
            string value = _single_currencyCode_codec.Read(input);
            if (currencyCode_ == null || value != "") {
              CurrencyCode = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class InstallationAddressGrpc : pb::IMessage<InstallationAddressGrpc> {
    private static readonly pb::MessageParser<InstallationAddressGrpc> _parser = new pb::MessageParser<InstallationAddressGrpc>(() => new InstallationAddressGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InstallationAddressGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallationAddressGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallationAddressGrpc(InstallationAddressGrpc other) : this() {
      Street = other.Street;
      District = other.District;
      DistrictId = other.DistrictId;
      City = other.City;
      CityId = other.CityId;
      FullAddress = other.FullAddress;
      Building = other.Building;
      Floor = other.Floor;
      RoomNumber = other.RoomNumber;
      Country = other.Country;
      CountryId = other.CountryId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InstallationAddressGrpc Clone() {
      return new InstallationAddressGrpc(this);
    }

    /// <summary>Field number for the "street" field.</summary>
    public const int StreetFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_street_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string street_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Street {
      get { return street_; }
      set {
        street_ = value;
      }
    }


    /// <summary>Field number for the "district" field.</summary>
    public const int DistrictFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_district_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string district_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string District {
      get { return district_; }
      set {
        district_ = value;
      }
    }


    /// <summary>Field number for the "districtId" field.</summary>
    public const int DistrictIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_districtId_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string districtId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DistrictId {
      get { return districtId_; }
      set {
        districtId_ = value;
      }
    }


    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_city_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = value;
      }
    }


    /// <summary>Field number for the "cityId" field.</summary>
    public const int CityIdFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_cityId_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }


    /// <summary>Field number for the "fullAddress" field.</summary>
    public const int FullAddressFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_fullAddress_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string fullAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullAddress {
      get { return fullAddress_; }
      set {
        fullAddress_ = value;
      }
    }


    /// <summary>Field number for the "building" field.</summary>
    public const int BuildingFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_building_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string building_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Building {
      get { return building_; }
      set {
        building_ = value;
      }
    }


    /// <summary>Field number for the "floor" field.</summary>
    public const int FloorFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_floor_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string floor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Floor {
      get { return floor_; }
      set {
        floor_ = value;
      }
    }


    /// <summary>Field number for the "roomNumber" field.</summary>
    public const int RoomNumberFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_roomNumber_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string roomNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoomNumber {
      get { return roomNumber_; }
      set {
        roomNumber_ = value;
      }
    }


    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_country_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string country_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = value;
      }
    }


    /// <summary>Field number for the "countryId" field.</summary>
    public const int CountryIdFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_countryId_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string countryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryId {
      get { return countryId_; }
      set {
        countryId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InstallationAddressGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InstallationAddressGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Street != other.Street) return false;
      if (District != other.District) return false;
      if (DistrictId != other.DistrictId) return false;
      if (City != other.City) return false;
      if (CityId != other.CityId) return false;
      if (FullAddress != other.FullAddress) return false;
      if (Building != other.Building) return false;
      if (Floor != other.Floor) return false;
      if (RoomNumber != other.RoomNumber) return false;
      if (Country != other.Country) return false;
      if (CountryId != other.CountryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (street_ != null) hash ^= Street.GetHashCode();
      if (district_ != null) hash ^= District.GetHashCode();
      if (districtId_ != null) hash ^= DistrictId.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      if (cityId_ != null) hash ^= CityId.GetHashCode();
      if (fullAddress_ != null) hash ^= FullAddress.GetHashCode();
      if (building_ != null) hash ^= Building.GetHashCode();
      if (floor_ != null) hash ^= Floor.GetHashCode();
      if (roomNumber_ != null) hash ^= RoomNumber.GetHashCode();
      if (country_ != null) hash ^= Country.GetHashCode();
      if (countryId_ != null) hash ^= CountryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (street_ != null) {
        _single_street_codec.WriteTagAndValue(output, Street);
      }
      if (district_ != null) {
        _single_district_codec.WriteTagAndValue(output, District);
      }
      if (districtId_ != null) {
        _single_districtId_codec.WriteTagAndValue(output, DistrictId);
      }
      if (city_ != null) {
        _single_city_codec.WriteTagAndValue(output, City);
      }
      if (cityId_ != null) {
        _single_cityId_codec.WriteTagAndValue(output, CityId);
      }
      if (fullAddress_ != null) {
        _single_fullAddress_codec.WriteTagAndValue(output, FullAddress);
      }
      if (building_ != null) {
        _single_building_codec.WriteTagAndValue(output, Building);
      }
      if (floor_ != null) {
        _single_floor_codec.WriteTagAndValue(output, Floor);
      }
      if (roomNumber_ != null) {
        _single_roomNumber_codec.WriteTagAndValue(output, RoomNumber);
      }
      if (country_ != null) {
        _single_country_codec.WriteTagAndValue(output, Country);
      }
      if (countryId_ != null) {
        _single_countryId_codec.WriteTagAndValue(output, CountryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (street_ != null) {
        size += _single_street_codec.CalculateSizeWithTag(Street);
      }
      if (district_ != null) {
        size += _single_district_codec.CalculateSizeWithTag(District);
      }
      if (districtId_ != null) {
        size += _single_districtId_codec.CalculateSizeWithTag(DistrictId);
      }
      if (city_ != null) {
        size += _single_city_codec.CalculateSizeWithTag(City);
      }
      if (cityId_ != null) {
        size += _single_cityId_codec.CalculateSizeWithTag(CityId);
      }
      if (fullAddress_ != null) {
        size += _single_fullAddress_codec.CalculateSizeWithTag(FullAddress);
      }
      if (building_ != null) {
        size += _single_building_codec.CalculateSizeWithTag(Building);
      }
      if (floor_ != null) {
        size += _single_floor_codec.CalculateSizeWithTag(Floor);
      }
      if (roomNumber_ != null) {
        size += _single_roomNumber_codec.CalculateSizeWithTag(RoomNumber);
      }
      if (country_ != null) {
        size += _single_country_codec.CalculateSizeWithTag(Country);
      }
      if (countryId_ != null) {
        size += _single_countryId_codec.CalculateSizeWithTag(CountryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InstallationAddressGrpc other) {
      if (other == null) {
        return;
      }
      if (other.street_ != null) {
        if (street_ == null || other.Street != "") {
          Street = other.Street;
        }
      }
      if (other.district_ != null) {
        if (district_ == null || other.District != "") {
          District = other.District;
        }
      }
      if (other.districtId_ != null) {
        if (districtId_ == null || other.DistrictId != "") {
          DistrictId = other.DistrictId;
        }
      }
      if (other.city_ != null) {
        if (city_ == null || other.City != "") {
          City = other.City;
        }
      }
      if (other.cityId_ != null) {
        if (cityId_ == null || other.CityId != "") {
          CityId = other.CityId;
        }
      }
      if (other.fullAddress_ != null) {
        if (fullAddress_ == null || other.FullAddress != "") {
          FullAddress = other.FullAddress;
        }
      }
      if (other.building_ != null) {
        if (building_ == null || other.Building != "") {
          Building = other.Building;
        }
      }
      if (other.floor_ != null) {
        if (floor_ == null || other.Floor != "") {
          Floor = other.Floor;
        }
      }
      if (other.roomNumber_ != null) {
        if (roomNumber_ == null || other.RoomNumber != "") {
          RoomNumber = other.RoomNumber;
        }
      }
      if (other.country_ != null) {
        if (country_ == null || other.Country != "") {
          Country = other.Country;
        }
      }
      if (other.countryId_ != null) {
        if (countryId_ == null || other.CountryId != "") {
          CountryId = other.CountryId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_street_codec.Read(input);
            if (street_ == null || value != "") {
              Street = value;
            }
            break;
          }
          case 18: {
            string value = _single_district_codec.Read(input);
            if (district_ == null || value != "") {
              District = value;
            }
            break;
          }
          case 26: {
            string value = _single_districtId_codec.Read(input);
            if (districtId_ == null || value != "") {
              DistrictId = value;
            }
            break;
          }
          case 34: {
            string value = _single_city_codec.Read(input);
            if (city_ == null || value != "") {
              City = value;
            }
            break;
          }
          case 42: {
            string value = _single_cityId_codec.Read(input);
            if (cityId_ == null || value != "") {
              CityId = value;
            }
            break;
          }
          case 50: {
            string value = _single_fullAddress_codec.Read(input);
            if (fullAddress_ == null || value != "") {
              FullAddress = value;
            }
            break;
          }
          case 58: {
            string value = _single_building_codec.Read(input);
            if (building_ == null || value != "") {
              Building = value;
            }
            break;
          }
          case 66: {
            string value = _single_floor_codec.Read(input);
            if (floor_ == null || value != "") {
              Floor = value;
            }
            break;
          }
          case 74: {
            string value = _single_roomNumber_codec.Read(input);
            if (roomNumber_ == null || value != "") {
              RoomNumber = value;
            }
            break;
          }
          case 82: {
            string value = _single_country_codec.Read(input);
            if (country_ == null || value != "") {
              Country = value;
            }
            break;
          }
          case 90: {
            string value = _single_countryId_codec.Read(input);
            if (countryId_ == null || value != "") {
              CountryId = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class BillingTimeLineGrpc : pb::IMessage<BillingTimeLineGrpc> {
    private static readonly pb::MessageParser<BillingTimeLineGrpc> _parser = new pb::MessageParser<BillingTimeLineGrpc>(() => new BillingTimeLineGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BillingTimeLineGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingTimeLineGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingTimeLineGrpc(BillingTimeLineGrpc other) : this() {
      paymentPeriod_ = other.paymentPeriod_;
      effective_ = other.effective_ != null ? other.effective_.Clone() : null;
      signed_ = other.signed_ != null ? other.signed_.Clone() : null;
      latestBilling_ = other.latestBilling_ != null ? other.latestBilling_.Clone() : null;
      nextBilling_ = other.nextBilling_ != null ? other.nextBilling_.Clone() : null;
      suspensionStartDate_ = other.suspensionStartDate_ != null ? other.suspensionStartDate_.Clone() : null;
      suspensionEndDate_ = other.suspensionEndDate_ != null ? other.suspensionEndDate_.Clone() : null;
      daysSuspended_ = other.daysSuspended_;
      prepayPeriod_ = other.prepayPeriod_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BillingTimeLineGrpc Clone() {
      return new BillingTimeLineGrpc(this);
    }

    /// <summary>Field number for the "paymentPeriod" field.</summary>
    public const int PaymentPeriodFieldNumber = 1;
    private int paymentPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PaymentPeriod {
      get { return paymentPeriod_; }
      set {
        paymentPeriod_ = value;
      }
    }

    /// <summary>Field number for the "effective" field.</summary>
    public const int EffectiveFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp effective_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Effective {
      get { return effective_; }
      set {
        effective_ = value;
      }
    }

    /// <summary>Field number for the "signed" field.</summary>
    public const int SignedFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp signed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Signed {
      get { return signed_; }
      set {
        signed_ = value;
      }
    }

    /// <summary>Field number for the "latestBilling" field.</summary>
    public const int LatestBillingFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp latestBilling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LatestBilling {
      get { return latestBilling_; }
      set {
        latestBilling_ = value;
      }
    }

    /// <summary>Field number for the "nextBilling" field.</summary>
    public const int NextBillingFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp nextBilling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp NextBilling {
      get { return nextBilling_; }
      set {
        nextBilling_ = value;
      }
    }

    /// <summary>Field number for the "suspensionStartDate" field.</summary>
    public const int SuspensionStartDateFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp suspensionStartDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SuspensionStartDate {
      get { return suspensionStartDate_; }
      set {
        suspensionStartDate_ = value;
      }
    }

    /// <summary>Field number for the "suspensionEndDate" field.</summary>
    public const int SuspensionEndDateFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp suspensionEndDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SuspensionEndDate {
      get { return suspensionEndDate_; }
      set {
        suspensionEndDate_ = value;
      }
    }

    /// <summary>Field number for the "daysSuspended" field.</summary>
    public const int DaysSuspendedFieldNumber = 8;
    private int daysSuspended_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DaysSuspended {
      get { return daysSuspended_; }
      set {
        daysSuspended_ = value;
      }
    }

    /// <summary>Field number for the "prepayPeriod" field.</summary>
    public const int PrepayPeriodFieldNumber = 9;
    private int prepayPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PrepayPeriod {
      get { return prepayPeriod_; }
      set {
        prepayPeriod_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BillingTimeLineGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BillingTimeLineGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PaymentPeriod != other.PaymentPeriod) return false;
      if (!object.Equals(Effective, other.Effective)) return false;
      if (!object.Equals(Signed, other.Signed)) return false;
      if (!object.Equals(LatestBilling, other.LatestBilling)) return false;
      if (!object.Equals(NextBilling, other.NextBilling)) return false;
      if (!object.Equals(SuspensionStartDate, other.SuspensionStartDate)) return false;
      if (!object.Equals(SuspensionEndDate, other.SuspensionEndDate)) return false;
      if (DaysSuspended != other.DaysSuspended) return false;
      if (PrepayPeriod != other.PrepayPeriod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PaymentPeriod != 0) hash ^= PaymentPeriod.GetHashCode();
      if (effective_ != null) hash ^= Effective.GetHashCode();
      if (signed_ != null) hash ^= Signed.GetHashCode();
      if (latestBilling_ != null) hash ^= LatestBilling.GetHashCode();
      if (nextBilling_ != null) hash ^= NextBilling.GetHashCode();
      if (suspensionStartDate_ != null) hash ^= SuspensionStartDate.GetHashCode();
      if (suspensionEndDate_ != null) hash ^= SuspensionEndDate.GetHashCode();
      if (DaysSuspended != 0) hash ^= DaysSuspended.GetHashCode();
      if (PrepayPeriod != 0) hash ^= PrepayPeriod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PaymentPeriod != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PaymentPeriod);
      }
      if (effective_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Effective);
      }
      if (signed_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Signed);
      }
      if (latestBilling_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LatestBilling);
      }
      if (nextBilling_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(NextBilling);
      }
      if (suspensionStartDate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SuspensionStartDate);
      }
      if (suspensionEndDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(SuspensionEndDate);
      }
      if (DaysSuspended != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DaysSuspended);
      }
      if (PrepayPeriod != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PrepayPeriod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PaymentPeriod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PaymentPeriod);
      }
      if (effective_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Effective);
      }
      if (signed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signed);
      }
      if (latestBilling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatestBilling);
      }
      if (nextBilling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextBilling);
      }
      if (suspensionStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SuspensionStartDate);
      }
      if (suspensionEndDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SuspensionEndDate);
      }
      if (DaysSuspended != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DaysSuspended);
      }
      if (PrepayPeriod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrepayPeriod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BillingTimeLineGrpc other) {
      if (other == null) {
        return;
      }
      if (other.PaymentPeriod != 0) {
        PaymentPeriod = other.PaymentPeriod;
      }
      if (other.effective_ != null) {
        if (effective_ == null) {
          Effective = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Effective.MergeFrom(other.Effective);
      }
      if (other.signed_ != null) {
        if (signed_ == null) {
          Signed = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Signed.MergeFrom(other.Signed);
      }
      if (other.latestBilling_ != null) {
        if (latestBilling_ == null) {
          LatestBilling = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LatestBilling.MergeFrom(other.LatestBilling);
      }
      if (other.nextBilling_ != null) {
        if (nextBilling_ == null) {
          NextBilling = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        NextBilling.MergeFrom(other.NextBilling);
      }
      if (other.suspensionStartDate_ != null) {
        if (suspensionStartDate_ == null) {
          SuspensionStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SuspensionStartDate.MergeFrom(other.SuspensionStartDate);
      }
      if (other.suspensionEndDate_ != null) {
        if (suspensionEndDate_ == null) {
          SuspensionEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        SuspensionEndDate.MergeFrom(other.SuspensionEndDate);
      }
      if (other.DaysSuspended != 0) {
        DaysSuspended = other.DaysSuspended;
      }
      if (other.PrepayPeriod != 0) {
        PrepayPeriod = other.PrepayPeriod;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PaymentPeriod = input.ReadInt32();
            break;
          }
          case 18: {
            if (effective_ == null) {
              Effective = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Effective);
            break;
          }
          case 26: {
            if (signed_ == null) {
              Signed = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Signed);
            break;
          }
          case 34: {
            if (latestBilling_ == null) {
              LatestBilling = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestBilling);
            break;
          }
          case 42: {
            if (nextBilling_ == null) {
              NextBilling = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(NextBilling);
            break;
          }
          case 50: {
            if (suspensionStartDate_ == null) {
              SuspensionStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SuspensionStartDate);
            break;
          }
          case 58: {
            if (suspensionEndDate_ == null) {
              SuspensionEndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(SuspensionEndDate);
            break;
          }
          case 64: {
            DaysSuspended = input.ReadInt32();
            break;
          }
          case 72: {
            PrepayPeriod = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SelectionItemDTOGrpc : pb::IMessage<SelectionItemDTOGrpc> {
    private static readonly pb::MessageParser<SelectionItemDTOGrpc> _parser = new pb::MessageParser<SelectionItemDTOGrpc>(() => new SelectionItemDTOGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelectionItemDTOGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectionItemDTOGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectionItemDTOGrpc(SelectionItemDTOGrpc other) : this() {
      Text = other.Text;
      Code = other.Code;
      Value = other.Value;
      ParentId = other.ParentId;
      DisplayOrder = other.DisplayOrder;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectionItemDTOGrpc Clone() {
      return new SelectionItemDTOGrpc(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_text_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = value;
      }
    }


    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_code_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }


    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_value_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }


    /// <summary>Field number for the "parentId" field.</summary>
    public const int ParentIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_parentId_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? parentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ParentId {
      get { return parentId_; }
      set {
        parentId_ = value;
      }
    }


    /// <summary>Field number for the "displayOrder" field.</summary>
    public const int DisplayOrderFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_displayOrder_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? displayOrder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? DisplayOrder {
      get { return displayOrder_; }
      set {
        displayOrder_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelectionItemDTOGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelectionItemDTOGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (Code != other.Code) return false;
      if (Value != other.Value) return false;
      if (ParentId != other.ParentId) return false;
      if (DisplayOrder != other.DisplayOrder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (text_ != null) hash ^= Text.GetHashCode();
      if (code_ != null) hash ^= Code.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (parentId_ != null) hash ^= ParentId.GetHashCode();
      if (displayOrder_ != null) hash ^= DisplayOrder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (text_ != null) {
        _single_text_codec.WriteTagAndValue(output, Text);
      }
      if (code_ != null) {
        _single_code_codec.WriteTagAndValue(output, Code);
      }
      if (value_ != null) {
        _single_value_codec.WriteTagAndValue(output, Value);
      }
      if (parentId_ != null) {
        _single_parentId_codec.WriteTagAndValue(output, ParentId);
      }
      if (displayOrder_ != null) {
        _single_displayOrder_codec.WriteTagAndValue(output, DisplayOrder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (text_ != null) {
        size += _single_text_codec.CalculateSizeWithTag(Text);
      }
      if (code_ != null) {
        size += _single_code_codec.CalculateSizeWithTag(Code);
      }
      if (value_ != null) {
        size += _single_value_codec.CalculateSizeWithTag(Value);
      }
      if (parentId_ != null) {
        size += _single_parentId_codec.CalculateSizeWithTag(ParentId);
      }
      if (displayOrder_ != null) {
        size += _single_displayOrder_codec.CalculateSizeWithTag(DisplayOrder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelectionItemDTOGrpc other) {
      if (other == null) {
        return;
      }
      if (other.text_ != null) {
        if (text_ == null || other.Text != "") {
          Text = other.Text;
        }
      }
      if (other.code_ != null) {
        if (code_ == null || other.Code != "") {
          Code = other.Code;
        }
      }
      if (other.value_ != null) {
        if (value_ == null || other.Value != 0) {
          Value = other.Value;
        }
      }
      if (other.parentId_ != null) {
        if (parentId_ == null || other.ParentId != 0) {
          ParentId = other.ParentId;
        }
      }
      if (other.displayOrder_ != null) {
        if (displayOrder_ == null || other.DisplayOrder != 0) {
          DisplayOrder = other.DisplayOrder;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_text_codec.Read(input);
            if (text_ == null || value != "") {
              Text = value;
            }
            break;
          }
          case 18: {
            string value = _single_code_codec.Read(input);
            if (code_ == null || value != "") {
              Code = value;
            }
            break;
          }
          case 26: {
            int? value = _single_value_codec.Read(input);
            if (value_ == null || value != 0) {
              Value = value;
            }
            break;
          }
          case 34: {
            int? value = _single_parentId_codec.Read(input);
            if (parentId_ == null || value != 0) {
              ParentId = value;
            }
            break;
          }
          case 42: {
            int? value = _single_displayOrder_codec.Read(input);
            if (displayOrder_ == null || value != 0) {
              DisplayOrder = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class LstSelectionItemDTOGrpc : pb::IMessage<LstSelectionItemDTOGrpc> {
    private static readonly pb::MessageParser<LstSelectionItemDTOGrpc> _parser = new pb::MessageParser<LstSelectionItemDTOGrpc>(() => new LstSelectionItemDTOGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LstSelectionItemDTOGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstSelectionItemDTOGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstSelectionItemDTOGrpc(LstSelectionItemDTOGrpc other) : this() {
      lstSelectionItemDTOGrpc_ = other.lstSelectionItemDTOGrpc_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LstSelectionItemDTOGrpc Clone() {
      return new LstSelectionItemDTOGrpc(this);
    }

    /// <summary>Field number for the "lstSelectionItemDTOGrpc" field.</summary>
    public const int LstSelectionItemDTOGrpc_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.SelectionItemDTOGrpc> _repeated_lstSelectionItemDTOGrpc_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.SelectionItemDTOGrpc.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.SelectionItemDTOGrpc> lstSelectionItemDTOGrpc_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.SelectionItemDTOGrpc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.SelectionItemDTOGrpc> LstSelectionItemDTOGrpc_ {
      get { return lstSelectionItemDTOGrpc_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LstSelectionItemDTOGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LstSelectionItemDTOGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lstSelectionItemDTOGrpc_.Equals(other.lstSelectionItemDTOGrpc_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lstSelectionItemDTOGrpc_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lstSelectionItemDTOGrpc_.WriteTo(output, _repeated_lstSelectionItemDTOGrpc_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lstSelectionItemDTOGrpc_.CalculateSize(_repeated_lstSelectionItemDTOGrpc_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LstSelectionItemDTOGrpc other) {
      if (other == null) {
        return;
      }
      lstSelectionItemDTOGrpc_.Add(other.lstSelectionItemDTOGrpc_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            lstSelectionItemDTOGrpc_.AddEntriesFrom(input, _repeated_lstSelectionItemDTOGrpc_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
