// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/feedbackandrequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Feedback.API.Protos {

  /// <summary>Holder for reflection information generated from Protos/feedbackandrequest.proto</summary>
  public static partial class FeedbackandrequestReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/feedbackandrequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FeedbackandrequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9Qcm90b3MvZmVlZGJhY2thbmRyZXF1ZXN0LnByb3RvEgtGZWVkYmFja0FQ",
            "SRoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHku",
            "cHJvdG8ibgoVQ291bnRGZWVkYmFja0l0ZW1HcnBjEikKA2NJZBgBIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIqCgVjb3VudBgCIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlIlsKHkNvdW50RmVlZGJhY2tC",
            "eUNJZEdycGNSZXNwb25zZRI5Cg1jb3VudGluZ0l0ZW1zGAEgAygLMiIuRmVl",
            "ZGJhY2tBUEkuQ291bnRGZWVkYmFja0l0ZW1HcnBjIn0KHFVwZGF0ZVJlY2Vp",
            "cHRMaW5lUmVxdWVzdEdycGMSKQoDaWRzGAEgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEjIKDXJlY2VpcHRMaW5lSWQYAiABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50MzJWYWx1ZSLOAwocRmVlZGJhY2tBbmRSZXF1ZXN0",
            "RmlsdGVyR3JwYxItCgdvcmRlckJ5GAEgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEikKA2RpchgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRIpCgRza2lwGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDMyVmFsdWUSKQoEdGFrZRgEIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQz",
            "MlZhbHVlEi0KB2ZpbHRlcnMYBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWUSDgoGcGFnaW5nGAYgASgIEi4KCGtleXdvcmRzGAcgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjAKCmN1c3RvbWVySWQYCCAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLAoGc291cmNlGAkg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi8KCWNyZWF0ZWRC",
            "eRgKIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSLbDgocQ3Jl",
            "YXRlRmVlZGJhY2tBbmRSZXF1ZXN0R3JwYxIoCgJpZBgBIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIrCgZzdGF0dXMYAiABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50MzJWYWx1ZRIwCgpjdXN0b21lcklkGAMgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjIKDGN1c3RvbWVyTmFtZRgE",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg1jdXN0b21l",
            "clBob25lGAUgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjMK",
            "DWN1c3RvbWVyRW1haWwYBiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUSKQoDY0lkGAcgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEjAKCmNvbnRyYWN0SWQYCCABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWUSMgoMY3VzdG9tZXJDb2RlGAkgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEi0KB3NlcnZpY2UYCiABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSNAoOc2VydmljZVBhY2thZ2UYCyABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoHYWRkcmVzcxgMIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIvCglpUEFkZHJlc3MYDSAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSKwoFdGl0bGUYDiAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoHY29udGVudBgP",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIqCgRub3RlGBAg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi8KC2RhdGVDcmVh",
            "dGVkGBEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIvCgtkYXRl",
            "VXBkYXRlZBgSIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoG",
            "c291cmNlGBMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEkAK",
            "G291dENvbnRyYWN0U2VydmljZVBhY2thZ2VJZBgUIAEoCzIbLmdvb2dsZS5w",
            "cm90b2J1Zi5JbnQzMlZhbHVlEjIKDGNvbnRyYWN0Q29kZRgVIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIPCgdoYW5kbGVkGBYgASgIEjIK",
            "DGN1c3RvbWVyUmF0ZRgXIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5Eb3VibGVW",
            "YWx1ZRI1Cg9jdXN0b21lckNvbW1lbnQYGCABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSMQoNZGF0ZVJlcXVlc3RlZBgZIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXASMQoLZGVzY3JpcHRpb24YGiABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLQoJc3RhcnRUaW1lGBsgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIsCghzdG9wVGltZRgcIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoIZ2xvYmFsSWQYHSAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMQoLcmVxdWVzdENv",
            "ZGUYHiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSKgoEY2l0",
            "eRgfIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIuCghkaXN0",
            "cmljdBggIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRItCghk",
            "dXJhdGlvbhghIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjAK",
            "CnVwZGF0ZUZyb20YIiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSLwoJY3JlYXRlZEJ5GCMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEjoKFGN1c3RvbWVySWRlbnRpdHlHdWlkGCQgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEjEKDGNvbnRyYWN0b3JJZBglIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjEKC2NoYW5uZWxUZXh0GCYg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIlMKGUZlZWRiYWNr",
            "QW5kUmVxdWVzdEFsbEdycGMSNgoGcmVzdWx0GAEgAygLMiYuRmVlZGJhY2tB",
            "UEkuRmVlZGJhY2tBbmRSZXF1ZXN0RFRPR3JwYyKZAwohRmVlZGJhY2tBbmRS",
            "ZXF1ZXN0UGFnZUxpc3RHcnBjRFRPEjYKBnN1YnNldBgBIAMoCzImLkZlZWRi",
            "YWNrQVBJLkZlZWRiYWNrQW5kUmVxdWVzdERUT0dycGMSKgoFY291bnQYAiAB",
            "KAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIuCglwYWdlQ291bnQY",
            "AyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIzCg50b3RhbEl0",
            "ZW1Db3VudBgEIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEikK",
            "BHNraXAYBSABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIpCgR0",
            "YWtlGAYgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSFwoPaGFz",
            "UHJldmlvdXNQYWdlGAcgASgIEhMKC2hhc05leHRQYWdlGAggASgIEhMKC2lz",
            "Rmlyc3RQYWdlGAkgASgIEhIKCmlzTGFzdFBhZ2UYCiABKAgipw4KGUZlZWRi",
            "YWNrQW5kUmVxdWVzdERUT0dycGMSKAoCaWQYASABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSKwoGc3RhdHVzGAIgASgLMhsuZ29vZ2xlLnBy",
            "b3RvYnVmLkludDMyVmFsdWUSMAoKY3VzdG9tZXJJZBgDIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIyCgxjdXN0b21lck5hbWUYBCABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMwoNY3VzdG9tZXJQaG9u",
            "ZRgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg1jdXN0",
            "b21lckVtYWlsGAYgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EikKA2NJZBgHIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIw",
            "Cgpjb250cmFjdElkGAggASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEjIKDGN1c3RvbWVyQ29kZRgJIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRItCgdzZXJ2aWNlGAogASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEjQKDnNlcnZpY2VQYWNrYWdlGAsgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEi0KB2FkZHJlc3MYDCABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLwoJaVBBZGRyZXNzGA0gASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEisKBXRpdGxlGA4gASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi0KB2NvbnRlbnQYDyABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSKgoEbm90ZRgQIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIvCgtkYXRlQ3JlYXRlZBgR",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLZGF0ZVVwZGF0",
            "ZWQYEiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjEKDWRhdGVS",
            "ZXF1ZXN0ZWQYEyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiwK",
            "BnNvdXJjZRgVIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJA",
            "ChtvdXRDb250cmFjdFNlcnZpY2VQYWNrYWdlSWQYFiABKAsyGy5nb29nbGUu",
            "cHJvdG9idWYuSW50MzJWYWx1ZRIyCgxjb250cmFjdENvZGUYFyABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSDwoHaGFuZGxlZBgYIAEoCBIy",
            "CgxjdXN0b21lclJhdGUYGSABKAsyHC5nb29nbGUucHJvdG9idWYuRG91Ymxl",
            "VmFsdWUSNQoPY3VzdG9tZXJDb21tZW50GBogASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEjEKC2Rlc2NyaXB0aW9uGBsgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEi0KCXN0YXJ0VGltZRgcIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLAoIc3RvcFRpbWUYHSABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEi4KCGdsb2JhbElkGB4gASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi0KCGR1cmF0aW9uGB8gASgL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSMQoLcmVxdWVzdENvZGUY",
            "ICABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSKgoEY2l0eRgh",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIuCghkaXN0cmlj",
            "dBgiIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIwCgp1cGRh",
            "dGVGcm9tGCMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjoK",
            "FGN1c3RvbWVySWRlbnRpdHlHdWlkGCQgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEjEKDGNvbnRyYWN0b3JJZBglIAEoCzIbLmdvb2dsZS5w",
            "cm90b2J1Zi5JbnQzMlZhbHVlEjEKC2NoYW5uZWxUZXh0GCYgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlMogHChZGZWVkYmFja0FuZFJlcXVl",
            "c3RHcnBjEnUKFkdldEZlZWRiYWNrQW5kUmVxdWVzdHMSKS5GZWVkYmFja0FQ",
            "SS5GZWVkYmFja0FuZFJlcXVlc3RGaWx0ZXJHcnBjGi4uRmVlZGJhY2tBUEku",
            "RmVlZGJhY2tBbmRSZXF1ZXN0UGFnZUxpc3RHcnBjRFRPIgASYwoYQ3JlYXRl",
            "RmVlZGJhY2tBbmRSZXF1ZXN0EikuRmVlZGJhY2tBUEkuQ3JlYXRlRmVlZGJh",
            "Y2tBbmRSZXF1ZXN0R3JwYxoaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUi",
            "ABJXCgxDdXN0b21lclJhdGUSKS5GZWVkYmFja0FQSS5DcmVhdGVGZWVkYmFj",
            "a0FuZFJlcXVlc3RHcnBjGhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZSIA",
            "EmYKHEdldFVucmVzb2x2ZWRGZWVkYmFja3NCeUNJZHMSHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUaJi5GZWVkYmFja0FQSS5GZWVkYmFja0FuZFJl",
            "cXVlc3RBbGxHcnBjIgASVQoXTWFya0ZlZWRiYWNrc0FzUmVzb2x2ZWQSHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaGi5nb29nbGUucHJvdG9idWYu",
            "Qm9vbFZhbHVlIgASYgoTQ291bnRGZWVkYmFja0J5Q0lkcxIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZRorLkZlZWRiYWNrQVBJLkNvdW50RmVlZGJh",
            "Y2tCeUNJZEdycGNSZXNwb25zZSIAElEKB0dldEJ5SWQSHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUaJi5GZWVkYmFja0FQSS5GZWVkYmFja0FuZFJl",
            "cXVlc3REVE9HcnBjIgASXgoTVXBkYXRlUmVjZWlwdExpbmVJZBIpLkZlZWRi",
            "YWNrQVBJLlVwZGF0ZVJlY2VpcHRMaW5lUmVxdWVzdEdycGMaGi5nb29nbGUu",
            "cHJvdG9idWYuQm9vbFZhbHVlIgASYwoYVXBkYXRlRmVlZGJhY2tBbmRSZXF1",
            "ZXN0EikuRmVlZGJhY2tBUEkuQ3JlYXRlRmVlZGJhY2tBbmRSZXF1ZXN0R3Jw",
            "YxoaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUiAEIWqgITRmVlZGJhY2su",
            "QVBJLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Feedback.API.Protos.CountFeedbackItemGrpc), global::Feedback.API.Protos.CountFeedbackItemGrpc.Parser, new[]{ "CId", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Feedback.API.Protos.CountFeedbackByCIdGrpcResponse), global::Feedback.API.Protos.CountFeedbackByCIdGrpcResponse.Parser, new[]{ "CountingItems" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Feedback.API.Protos.UpdateReceiptLineRequestGrpc), global::Feedback.API.Protos.UpdateReceiptLineRequestGrpc.Parser, new[]{ "Ids", "ReceiptLineId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Feedback.API.Protos.FeedbackAndRequestFilterGrpc), global::Feedback.API.Protos.FeedbackAndRequestFilterGrpc.Parser, new[]{ "OrderBy", "Dir", "Skip", "Take", "Filters", "Paging", "Keywords", "CustomerId", "Source", "CreatedBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Feedback.API.Protos.CreateFeedbackAndRequestGrpc), global::Feedback.API.Protos.CreateFeedbackAndRequestGrpc.Parser, new[]{ "Id", "Status", "CustomerId", "CustomerName", "CustomerPhone", "CustomerEmail", "CId", "ContractId", "CustomerCode", "Service", "ServicePackage", "Address", "IPAddress", "Title", "Content", "Note", "DateCreated", "DateUpdated", "Source", "OutContractServicePackageId", "ContractCode", "Handled", "CustomerRate", "CustomerComment", "DateRequested", "Description", "StartTime", "StopTime", "GlobalId", "RequestCode", "City", "District", "Duration", "UpdateFrom", "CreatedBy", "CustomerIdentityGuid", "ContractorId", "ChannelText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Feedback.API.Protos.FeedbackAndRequestAllGrpc), global::Feedback.API.Protos.FeedbackAndRequestAllGrpc.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Feedback.API.Protos.FeedbackAndRequestPageListGrpcDTO), global::Feedback.API.Protos.FeedbackAndRequestPageListGrpcDTO.Parser, new[]{ "Subset", "Count", "PageCount", "TotalItemCount", "Skip", "Take", "HasPreviousPage", "HasNextPage", "IsFirstPage", "IsLastPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc), global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc.Parser, new[]{ "Id", "Status", "CustomerId", "CustomerName", "CustomerPhone", "CustomerEmail", "CId", "ContractId", "CustomerCode", "Service", "ServicePackage", "Address", "IPAddress", "Title", "Content", "Note", "DateCreated", "DateUpdated", "DateRequested", "Source", "OutContractServicePackageId", "ContractCode", "Handled", "CustomerRate", "CustomerComment", "Description", "StartTime", "StopTime", "GlobalId", "Duration", "RequestCode", "City", "District", "UpdateFrom", "CustomerIdentityGuid", "ContractorId", "ChannelText" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CountFeedbackItemGrpc : pb::IMessage<CountFeedbackItemGrpc> {
    private static readonly pb::MessageParser<CountFeedbackItemGrpc> _parser = new pb::MessageParser<CountFeedbackItemGrpc>(() => new CountFeedbackItemGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CountFeedbackItemGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Feedback.API.Protos.FeedbackandrequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountFeedbackItemGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountFeedbackItemGrpc(CountFeedbackItemGrpc other) : this() {
      CId = other.CId;
      Count = other.Count;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountFeedbackItemGrpc Clone() {
      return new CountFeedbackItemGrpc(this);
    }

    /// <summary>Field number for the "cId" field.</summary>
    public const int CIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_cId_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string cId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CId {
      get { return cId_; }
      set {
        cId_ = value;
      }
    }


    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_count_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CountFeedbackItemGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CountFeedbackItemGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CId != other.CId) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cId_ != null) hash ^= CId.GetHashCode();
      if (count_ != null) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cId_ != null) {
        _single_cId_codec.WriteTagAndValue(output, CId);
      }
      if (count_ != null) {
        _single_count_codec.WriteTagAndValue(output, Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cId_ != null) {
        size += _single_cId_codec.CalculateSizeWithTag(CId);
      }
      if (count_ != null) {
        size += _single_count_codec.CalculateSizeWithTag(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CountFeedbackItemGrpc other) {
      if (other == null) {
        return;
      }
      if (other.cId_ != null) {
        if (cId_ == null || other.CId != "") {
          CId = other.CId;
        }
      }
      if (other.count_ != null) {
        if (count_ == null || other.Count != 0) {
          Count = other.Count;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_cId_codec.Read(input);
            if (cId_ == null || value != "") {
              CId = value;
            }
            break;
          }
          case 18: {
            int? value = _single_count_codec.Read(input);
            if (count_ == null || value != 0) {
              Count = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class CountFeedbackByCIdGrpcResponse : pb::IMessage<CountFeedbackByCIdGrpcResponse> {
    private static readonly pb::MessageParser<CountFeedbackByCIdGrpcResponse> _parser = new pb::MessageParser<CountFeedbackByCIdGrpcResponse>(() => new CountFeedbackByCIdGrpcResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CountFeedbackByCIdGrpcResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Feedback.API.Protos.FeedbackandrequestReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountFeedbackByCIdGrpcResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountFeedbackByCIdGrpcResponse(CountFeedbackByCIdGrpcResponse other) : this() {
      countingItems_ = other.countingItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountFeedbackByCIdGrpcResponse Clone() {
      return new CountFeedbackByCIdGrpcResponse(this);
    }

    /// <summary>Field number for the "countingItems" field.</summary>
    public const int CountingItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Feedback.API.Protos.CountFeedbackItemGrpc> _repeated_countingItems_codec
        = pb::FieldCodec.ForMessage(10, global::Feedback.API.Protos.CountFeedbackItemGrpc.Parser);
    private readonly pbc::RepeatedField<global::Feedback.API.Protos.CountFeedbackItemGrpc> countingItems_ = new pbc::RepeatedField<global::Feedback.API.Protos.CountFeedbackItemGrpc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Feedback.API.Protos.CountFeedbackItemGrpc> CountingItems {
      get { return countingItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CountFeedbackByCIdGrpcResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CountFeedbackByCIdGrpcResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!countingItems_.Equals(other.countingItems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= countingItems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      countingItems_.WriteTo(output, _repeated_countingItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += countingItems_.CalculateSize(_repeated_countingItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CountFeedbackByCIdGrpcResponse other) {
      if (other == null) {
        return;
      }
      countingItems_.Add(other.countingItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            countingItems_.AddEntriesFrom(input, _repeated_countingItems_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateReceiptLineRequestGrpc : pb::IMessage<UpdateReceiptLineRequestGrpc> {
    private static readonly pb::MessageParser<UpdateReceiptLineRequestGrpc> _parser = new pb::MessageParser<UpdateReceiptLineRequestGrpc>(() => new UpdateReceiptLineRequestGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateReceiptLineRequestGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Feedback.API.Protos.FeedbackandrequestReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateReceiptLineRequestGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateReceiptLineRequestGrpc(UpdateReceiptLineRequestGrpc other) : this() {
      Ids = other.Ids;
      ReceiptLineId = other.ReceiptLineId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateReceiptLineRequestGrpc Clone() {
      return new UpdateReceiptLineRequestGrpc(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_ids_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string ids_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ids {
      get { return ids_; }
      set {
        ids_ = value;
      }
    }


    /// <summary>Field number for the "receiptLineId" field.</summary>
    public const int ReceiptLineIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_receiptLineId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? receiptLineId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ReceiptLineId {
      get { return receiptLineId_; }
      set {
        receiptLineId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateReceiptLineRequestGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateReceiptLineRequestGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ids != other.Ids) return false;
      if (ReceiptLineId != other.ReceiptLineId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ids_ != null) hash ^= Ids.GetHashCode();
      if (receiptLineId_ != null) hash ^= ReceiptLineId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ids_ != null) {
        _single_ids_codec.WriteTagAndValue(output, Ids);
      }
      if (receiptLineId_ != null) {
        _single_receiptLineId_codec.WriteTagAndValue(output, ReceiptLineId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ids_ != null) {
        size += _single_ids_codec.CalculateSizeWithTag(Ids);
      }
      if (receiptLineId_ != null) {
        size += _single_receiptLineId_codec.CalculateSizeWithTag(ReceiptLineId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateReceiptLineRequestGrpc other) {
      if (other == null) {
        return;
      }
      if (other.ids_ != null) {
        if (ids_ == null || other.Ids != "") {
          Ids = other.Ids;
        }
      }
      if (other.receiptLineId_ != null) {
        if (receiptLineId_ == null || other.ReceiptLineId != 0) {
          ReceiptLineId = other.ReceiptLineId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_ids_codec.Read(input);
            if (ids_ == null || value != "") {
              Ids = value;
            }
            break;
          }
          case 18: {
            int? value = _single_receiptLineId_codec.Read(input);
            if (receiptLineId_ == null || value != 0) {
              ReceiptLineId = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeedbackAndRequestFilterGrpc : pb::IMessage<FeedbackAndRequestFilterGrpc> {
    private static readonly pb::MessageParser<FeedbackAndRequestFilterGrpc> _parser = new pb::MessageParser<FeedbackAndRequestFilterGrpc>(() => new FeedbackAndRequestFilterGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedbackAndRequestFilterGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Feedback.API.Protos.FeedbackandrequestReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestFilterGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestFilterGrpc(FeedbackAndRequestFilterGrpc other) : this() {
      OrderBy = other.OrderBy;
      Dir = other.Dir;
      Skip = other.Skip;
      Take = other.Take;
      Filters = other.Filters;
      paging_ = other.paging_;
      Keywords = other.Keywords;
      CustomerId = other.CustomerId;
      Source = other.Source;
      CreatedBy = other.CreatedBy;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestFilterGrpc Clone() {
      return new FeedbackAndRequestFilterGrpc(this);
    }

    /// <summary>Field number for the "orderBy" field.</summary>
    public const int OrderByFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_orderBy_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string orderBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = value;
      }
    }


    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_dir_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_filters_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string filters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }


    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 6;
    private bool paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "keywords" field.</summary>
    public const int KeywordsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_keywords_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string keywords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Keywords {
      get { return keywords_; }
      set {
        keywords_ = value;
      }
    }


    /// <summary>Field number for the "customerId" field.</summary>
    public const int CustomerIdFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_customerId_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string customerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = value;
      }
    }


    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_source_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }


    /// <summary>Field number for the "createdBy" field.</summary>
    public const int CreatedByFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_createdBy_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string createdBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedbackAndRequestFilterGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedbackAndRequestFilterGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderBy != other.OrderBy) return false;
      if (Dir != other.Dir) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (Filters != other.Filters) return false;
      if (Paging != other.Paging) return false;
      if (Keywords != other.Keywords) return false;
      if (CustomerId != other.CustomerId) return false;
      if (Source != other.Source) return false;
      if (CreatedBy != other.CreatedBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (orderBy_ != null) hash ^= OrderBy.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (filters_ != null) hash ^= Filters.GetHashCode();
      if (Paging != false) hash ^= Paging.GetHashCode();
      if (keywords_ != null) hash ^= Keywords.GetHashCode();
      if (customerId_ != null) hash ^= CustomerId.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      if (createdBy_ != null) hash ^= CreatedBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (orderBy_ != null) {
        _single_orderBy_codec.WriteTagAndValue(output, OrderBy);
      }
      if (dir_ != null) {
        _single_dir_codec.WriteTagAndValue(output, Dir);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (filters_ != null) {
        _single_filters_codec.WriteTagAndValue(output, Filters);
      }
      if (Paging != false) {
        output.WriteRawTag(48);
        output.WriteBool(Paging);
      }
      if (keywords_ != null) {
        _single_keywords_codec.WriteTagAndValue(output, Keywords);
      }
      if (customerId_ != null) {
        _single_customerId_codec.WriteTagAndValue(output, CustomerId);
      }
      if (source_ != null) {
        _single_source_codec.WriteTagAndValue(output, Source);
      }
      if (createdBy_ != null) {
        _single_createdBy_codec.WriteTagAndValue(output, CreatedBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (orderBy_ != null) {
        size += _single_orderBy_codec.CalculateSizeWithTag(OrderBy);
      }
      if (dir_ != null) {
        size += _single_dir_codec.CalculateSizeWithTag(Dir);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (filters_ != null) {
        size += _single_filters_codec.CalculateSizeWithTag(Filters);
      }
      if (Paging != false) {
        size += 1 + 1;
      }
      if (keywords_ != null) {
        size += _single_keywords_codec.CalculateSizeWithTag(Keywords);
      }
      if (customerId_ != null) {
        size += _single_customerId_codec.CalculateSizeWithTag(CustomerId);
      }
      if (source_ != null) {
        size += _single_source_codec.CalculateSizeWithTag(Source);
      }
      if (createdBy_ != null) {
        size += _single_createdBy_codec.CalculateSizeWithTag(CreatedBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedbackAndRequestFilterGrpc other) {
      if (other == null) {
        return;
      }
      if (other.orderBy_ != null) {
        if (orderBy_ == null || other.OrderBy != "") {
          OrderBy = other.OrderBy;
        }
      }
      if (other.dir_ != null) {
        if (dir_ == null || other.Dir != "") {
          Dir = other.Dir;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.filters_ != null) {
        if (filters_ == null || other.Filters != "") {
          Filters = other.Filters;
        }
      }
      if (other.Paging != false) {
        Paging = other.Paging;
      }
      if (other.keywords_ != null) {
        if (keywords_ == null || other.Keywords != "") {
          Keywords = other.Keywords;
        }
      }
      if (other.customerId_ != null) {
        if (customerId_ == null || other.CustomerId != "") {
          CustomerId = other.CustomerId;
        }
      }
      if (other.source_ != null) {
        if (source_ == null || other.Source != "") {
          Source = other.Source;
        }
      }
      if (other.createdBy_ != null) {
        if (createdBy_ == null || other.CreatedBy != "") {
          CreatedBy = other.CreatedBy;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_orderBy_codec.Read(input);
            if (orderBy_ == null || value != "") {
              OrderBy = value;
            }
            break;
          }
          case 18: {
            string value = _single_dir_codec.Read(input);
            if (dir_ == null || value != "") {
              Dir = value;
            }
            break;
          }
          case 26: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 34: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 42: {
            string value = _single_filters_codec.Read(input);
            if (filters_ == null || value != "") {
              Filters = value;
            }
            break;
          }
          case 48: {
            Paging = input.ReadBool();
            break;
          }
          case 58: {
            string value = _single_keywords_codec.Read(input);
            if (keywords_ == null || value != "") {
              Keywords = value;
            }
            break;
          }
          case 66: {
            string value = _single_customerId_codec.Read(input);
            if (customerId_ == null || value != "") {
              CustomerId = value;
            }
            break;
          }
          case 74: {
            string value = _single_source_codec.Read(input);
            if (source_ == null || value != "") {
              Source = value;
            }
            break;
          }
          case 82: {
            string value = _single_createdBy_codec.Read(input);
            if (createdBy_ == null || value != "") {
              CreatedBy = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateFeedbackAndRequestGrpc : pb::IMessage<CreateFeedbackAndRequestGrpc> {
    private static readonly pb::MessageParser<CreateFeedbackAndRequestGrpc> _parser = new pb::MessageParser<CreateFeedbackAndRequestGrpc>(() => new CreateFeedbackAndRequestGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFeedbackAndRequestGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Feedback.API.Protos.FeedbackandrequestReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFeedbackAndRequestGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFeedbackAndRequestGrpc(CreateFeedbackAndRequestGrpc other) : this() {
      Id = other.Id;
      Status = other.Status;
      CustomerId = other.CustomerId;
      CustomerName = other.CustomerName;
      CustomerPhone = other.CustomerPhone;
      CustomerEmail = other.CustomerEmail;
      CId = other.CId;
      ContractId = other.ContractId;
      CustomerCode = other.CustomerCode;
      Service = other.Service;
      ServicePackage = other.ServicePackage;
      Address = other.Address;
      IPAddress = other.IPAddress;
      Title = other.Title;
      Content = other.Content;
      Note = other.Note;
      dateCreated_ = other.dateCreated_ != null ? other.dateCreated_.Clone() : null;
      dateUpdated_ = other.dateUpdated_ != null ? other.dateUpdated_.Clone() : null;
      Source = other.Source;
      OutContractServicePackageId = other.OutContractServicePackageId;
      ContractCode = other.ContractCode;
      handled_ = other.handled_;
      CustomerRate = other.CustomerRate;
      CustomerComment = other.CustomerComment;
      dateRequested_ = other.dateRequested_ != null ? other.dateRequested_.Clone() : null;
      Description = other.Description;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      stopTime_ = other.stopTime_ != null ? other.stopTime_.Clone() : null;
      GlobalId = other.GlobalId;
      RequestCode = other.RequestCode;
      City = other.City;
      District = other.District;
      Duration = other.Duration;
      UpdateFrom = other.UpdateFrom;
      CreatedBy = other.CreatedBy;
      CustomerIdentityGuid = other.CustomerIdentityGuid;
      ContractorId = other.ContractorId;
      ChannelText = other.ChannelText;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFeedbackAndRequestGrpc Clone() {
      return new CreateFeedbackAndRequestGrpc(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_status_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }


    /// <summary>Field number for the "customerId" field.</summary>
    public const int CustomerIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_customerId_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string customerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = value;
      }
    }


    /// <summary>Field number for the "customerName" field.</summary>
    public const int CustomerNameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_customerName_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string customerName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerName {
      get { return customerName_; }
      set {
        customerName_ = value;
      }
    }


    /// <summary>Field number for the "customerPhone" field.</summary>
    public const int CustomerPhoneFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_customerPhone_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string customerPhone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerPhone {
      get { return customerPhone_; }
      set {
        customerPhone_ = value;
      }
    }


    /// <summary>Field number for the "customerEmail" field.</summary>
    public const int CustomerEmailFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_customerEmail_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string customerEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerEmail {
      get { return customerEmail_; }
      set {
        customerEmail_ = value;
      }
    }


    /// <summary>Field number for the "cId" field.</summary>
    public const int CIdFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_cId_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string cId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CId {
      get { return cId_; }
      set {
        cId_ = value;
      }
    }


    /// <summary>Field number for the "contractId" field.</summary>
    public const int ContractIdFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_contractId_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string contractId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = value;
      }
    }


    /// <summary>Field number for the "customerCode" field.</summary>
    public const int CustomerCodeFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_customerCode_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string customerCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerCode {
      get { return customerCode_; }
      set {
        customerCode_ = value;
      }
    }


    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_service_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string service_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = value;
      }
    }


    /// <summary>Field number for the "servicePackage" field.</summary>
    public const int ServicePackageFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_servicePackage_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string servicePackage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePackage {
      get { return servicePackage_; }
      set {
        servicePackage_ = value;
      }
    }


    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_address_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }


    /// <summary>Field number for the "iPAddress" field.</summary>
    public const int IPAddressFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_iPAddress_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string iPAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IPAddress {
      get { return iPAddress_; }
      set {
        iPAddress_ = value;
      }
    }


    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_title_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }


    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_content_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }


    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_note_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string note_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Note {
      get { return note_; }
      set {
        note_ = value;
      }
    }


    /// <summary>Field number for the "dateCreated" field.</summary>
    public const int DateCreatedFieldNumber = 17;
    private global::Google.Protobuf.WellKnownTypes.Timestamp dateCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DateCreated {
      get { return dateCreated_; }
      set {
        dateCreated_ = value;
      }
    }

    /// <summary>Field number for the "dateUpdated" field.</summary>
    public const int DateUpdatedFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Timestamp dateUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DateUpdated {
      get { return dateUpdated_; }
      set {
        dateUpdated_ = value;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _single_source_codec = pb::FieldCodec.ForClassWrapper<string>(154);
    private string source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }


    /// <summary>Field number for the "outContractServicePackageId" field.</summary>
    public const int OutContractServicePackageIdFieldNumber = 20;
    private static readonly pb::FieldCodec<int?> _single_outContractServicePackageId_codec = pb::FieldCodec.ForStructWrapper<int>(162);
    private int? outContractServicePackageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? OutContractServicePackageId {
      get { return outContractServicePackageId_; }
      set {
        outContractServicePackageId_ = value;
      }
    }


    /// <summary>Field number for the "contractCode" field.</summary>
    public const int ContractCodeFieldNumber = 21;
    private static readonly pb::FieldCodec<string> _single_contractCode_codec = pb::FieldCodec.ForClassWrapper<string>(170);
    private string contractCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = value;
      }
    }


    /// <summary>Field number for the "handled" field.</summary>
    public const int HandledFieldNumber = 22;
    private bool handled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Handled {
      get { return handled_; }
      set {
        handled_ = value;
      }
    }

    /// <summary>Field number for the "customerRate" field.</summary>
    public const int CustomerRateFieldNumber = 23;
    private static readonly pb::FieldCodec<double?> _single_customerRate_codec = pb::FieldCodec.ForStructWrapper<double>(186);
    private double? customerRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? CustomerRate {
      get { return customerRate_; }
      set {
        customerRate_ = value;
      }
    }


    /// <summary>Field number for the "customerComment" field.</summary>
    public const int CustomerCommentFieldNumber = 24;
    private static readonly pb::FieldCodec<string> _single_customerComment_codec = pb::FieldCodec.ForClassWrapper<string>(194);
    private string customerComment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerComment {
      get { return customerComment_; }
      set {
        customerComment_ = value;
      }
    }


    /// <summary>Field number for the "dateRequested" field.</summary>
    public const int DateRequestedFieldNumber = 25;
    private global::Google.Protobuf.WellKnownTypes.Timestamp dateRequested_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DateRequested {
      get { return dateRequested_; }
      set {
        dateRequested_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 26;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(210);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 27;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "stopTime" field.</summary>
    public const int StopTimeFieldNumber = 28;
    private global::Google.Protobuf.WellKnownTypes.Timestamp stopTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StopTime {
      get { return stopTime_; }
      set {
        stopTime_ = value;
      }
    }

    /// <summary>Field number for the "globalId" field.</summary>
    public const int GlobalIdFieldNumber = 29;
    private static readonly pb::FieldCodec<string> _single_globalId_codec = pb::FieldCodec.ForClassWrapper<string>(234);
    private string globalId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GlobalId {
      get { return globalId_; }
      set {
        globalId_ = value;
      }
    }


    /// <summary>Field number for the "requestCode" field.</summary>
    public const int RequestCodeFieldNumber = 30;
    private static readonly pb::FieldCodec<string> _single_requestCode_codec = pb::FieldCodec.ForClassWrapper<string>(242);
    private string requestCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestCode {
      get { return requestCode_; }
      set {
        requestCode_ = value;
      }
    }


    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 31;
    private static readonly pb::FieldCodec<string> _single_city_codec = pb::FieldCodec.ForClassWrapper<string>(250);
    private string city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = value;
      }
    }


    /// <summary>Field number for the "district" field.</summary>
    public const int DistrictFieldNumber = 32;
    private static readonly pb::FieldCodec<string> _single_district_codec = pb::FieldCodec.ForClassWrapper<string>(258);
    private string district_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string District {
      get { return district_; }
      set {
        district_ = value;
      }
    }


    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 33;
    private static readonly pb::FieldCodec<long?> _single_duration_codec = pb::FieldCodec.ForStructWrapper<long>(266);
    private long? duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }


    /// <summary>Field number for the "updateFrom" field.</summary>
    public const int UpdateFromFieldNumber = 34;
    private static readonly pb::FieldCodec<string> _single_updateFrom_codec = pb::FieldCodec.ForClassWrapper<string>(274);
    private string updateFrom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdateFrom {
      get { return updateFrom_; }
      set {
        updateFrom_ = value;
      }
    }


    /// <summary>Field number for the "createdBy" field.</summary>
    public const int CreatedByFieldNumber = 35;
    private static readonly pb::FieldCodec<string> _single_createdBy_codec = pb::FieldCodec.ForClassWrapper<string>(282);
    private string createdBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedBy {
      get { return createdBy_; }
      set {
        createdBy_ = value;
      }
    }


    /// <summary>Field number for the "customerIdentityGuid" field.</summary>
    public const int CustomerIdentityGuidFieldNumber = 36;
    private static readonly pb::FieldCodec<string> _single_customerIdentityGuid_codec = pb::FieldCodec.ForClassWrapper<string>(290);
    private string customerIdentityGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerIdentityGuid {
      get { return customerIdentityGuid_; }
      set {
        customerIdentityGuid_ = value;
      }
    }


    /// <summary>Field number for the "contractorId" field.</summary>
    public const int ContractorIdFieldNumber = 37;
    private static readonly pb::FieldCodec<int?> _single_contractorId_codec = pb::FieldCodec.ForStructWrapper<int>(298);
    private int? contractorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractorId {
      get { return contractorId_; }
      set {
        contractorId_ = value;
      }
    }


    /// <summary>Field number for the "channelText" field.</summary>
    public const int ChannelTextFieldNumber = 38;
    private static readonly pb::FieldCodec<string> _single_channelText_codec = pb::FieldCodec.ForClassWrapper<string>(306);
    private string channelText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelText {
      get { return channelText_; }
      set {
        channelText_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFeedbackAndRequestGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFeedbackAndRequestGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Status != other.Status) return false;
      if (CustomerId != other.CustomerId) return false;
      if (CustomerName != other.CustomerName) return false;
      if (CustomerPhone != other.CustomerPhone) return false;
      if (CustomerEmail != other.CustomerEmail) return false;
      if (CId != other.CId) return false;
      if (ContractId != other.ContractId) return false;
      if (CustomerCode != other.CustomerCode) return false;
      if (Service != other.Service) return false;
      if (ServicePackage != other.ServicePackage) return false;
      if (Address != other.Address) return false;
      if (IPAddress != other.IPAddress) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if (Note != other.Note) return false;
      if (!object.Equals(DateCreated, other.DateCreated)) return false;
      if (!object.Equals(DateUpdated, other.DateUpdated)) return false;
      if (Source != other.Source) return false;
      if (OutContractServicePackageId != other.OutContractServicePackageId) return false;
      if (ContractCode != other.ContractCode) return false;
      if (Handled != other.Handled) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(CustomerRate, other.CustomerRate)) return false;
      if (CustomerComment != other.CustomerComment) return false;
      if (!object.Equals(DateRequested, other.DateRequested)) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(StopTime, other.StopTime)) return false;
      if (GlobalId != other.GlobalId) return false;
      if (RequestCode != other.RequestCode) return false;
      if (City != other.City) return false;
      if (District != other.District) return false;
      if (Duration != other.Duration) return false;
      if (UpdateFrom != other.UpdateFrom) return false;
      if (CreatedBy != other.CreatedBy) return false;
      if (CustomerIdentityGuid != other.CustomerIdentityGuid) return false;
      if (ContractorId != other.ContractorId) return false;
      if (ChannelText != other.ChannelText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (customerId_ != null) hash ^= CustomerId.GetHashCode();
      if (customerName_ != null) hash ^= CustomerName.GetHashCode();
      if (customerPhone_ != null) hash ^= CustomerPhone.GetHashCode();
      if (customerEmail_ != null) hash ^= CustomerEmail.GetHashCode();
      if (cId_ != null) hash ^= CId.GetHashCode();
      if (contractId_ != null) hash ^= ContractId.GetHashCode();
      if (customerCode_ != null) hash ^= CustomerCode.GetHashCode();
      if (service_ != null) hash ^= Service.GetHashCode();
      if (servicePackage_ != null) hash ^= ServicePackage.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (iPAddress_ != null) hash ^= IPAddress.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (note_ != null) hash ^= Note.GetHashCode();
      if (dateCreated_ != null) hash ^= DateCreated.GetHashCode();
      if (dateUpdated_ != null) hash ^= DateUpdated.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      if (outContractServicePackageId_ != null) hash ^= OutContractServicePackageId.GetHashCode();
      if (contractCode_ != null) hash ^= ContractCode.GetHashCode();
      if (Handled != false) hash ^= Handled.GetHashCode();
      if (customerRate_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(CustomerRate);
      if (customerComment_ != null) hash ^= CustomerComment.GetHashCode();
      if (dateRequested_ != null) hash ^= DateRequested.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (stopTime_ != null) hash ^= StopTime.GetHashCode();
      if (globalId_ != null) hash ^= GlobalId.GetHashCode();
      if (requestCode_ != null) hash ^= RequestCode.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      if (district_ != null) hash ^= District.GetHashCode();
      if (duration_ != null) hash ^= Duration.GetHashCode();
      if (updateFrom_ != null) hash ^= UpdateFrom.GetHashCode();
      if (createdBy_ != null) hash ^= CreatedBy.GetHashCode();
      if (customerIdentityGuid_ != null) hash ^= CustomerIdentityGuid.GetHashCode();
      if (contractorId_ != null) hash ^= ContractorId.GetHashCode();
      if (channelText_ != null) hash ^= ChannelText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (status_ != null) {
        _single_status_codec.WriteTagAndValue(output, Status);
      }
      if (customerId_ != null) {
        _single_customerId_codec.WriteTagAndValue(output, CustomerId);
      }
      if (customerName_ != null) {
        _single_customerName_codec.WriteTagAndValue(output, CustomerName);
      }
      if (customerPhone_ != null) {
        _single_customerPhone_codec.WriteTagAndValue(output, CustomerPhone);
      }
      if (customerEmail_ != null) {
        _single_customerEmail_codec.WriteTagAndValue(output, CustomerEmail);
      }
      if (cId_ != null) {
        _single_cId_codec.WriteTagAndValue(output, CId);
      }
      if (contractId_ != null) {
        _single_contractId_codec.WriteTagAndValue(output, ContractId);
      }
      if (customerCode_ != null) {
        _single_customerCode_codec.WriteTagAndValue(output, CustomerCode);
      }
      if (service_ != null) {
        _single_service_codec.WriteTagAndValue(output, Service);
      }
      if (servicePackage_ != null) {
        _single_servicePackage_codec.WriteTagAndValue(output, ServicePackage);
      }
      if (address_ != null) {
        _single_address_codec.WriteTagAndValue(output, Address);
      }
      if (iPAddress_ != null) {
        _single_iPAddress_codec.WriteTagAndValue(output, IPAddress);
      }
      if (title_ != null) {
        _single_title_codec.WriteTagAndValue(output, Title);
      }
      if (content_ != null) {
        _single_content_codec.WriteTagAndValue(output, Content);
      }
      if (note_ != null) {
        _single_note_codec.WriteTagAndValue(output, Note);
      }
      if (dateCreated_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(DateCreated);
      }
      if (dateUpdated_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(DateUpdated);
      }
      if (source_ != null) {
        _single_source_codec.WriteTagAndValue(output, Source);
      }
      if (outContractServicePackageId_ != null) {
        _single_outContractServicePackageId_codec.WriteTagAndValue(output, OutContractServicePackageId);
      }
      if (contractCode_ != null) {
        _single_contractCode_codec.WriteTagAndValue(output, ContractCode);
      }
      if (Handled != false) {
        output.WriteRawTag(176, 1);
        output.WriteBool(Handled);
      }
      if (customerRate_ != null) {
        _single_customerRate_codec.WriteTagAndValue(output, CustomerRate);
      }
      if (customerComment_ != null) {
        _single_customerComment_codec.WriteTagAndValue(output, CustomerComment);
      }
      if (dateRequested_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(DateRequested);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (startTime_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(StartTime);
      }
      if (stopTime_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(StopTime);
      }
      if (globalId_ != null) {
        _single_globalId_codec.WriteTagAndValue(output, GlobalId);
      }
      if (requestCode_ != null) {
        _single_requestCode_codec.WriteTagAndValue(output, RequestCode);
      }
      if (city_ != null) {
        _single_city_codec.WriteTagAndValue(output, City);
      }
      if (district_ != null) {
        _single_district_codec.WriteTagAndValue(output, District);
      }
      if (duration_ != null) {
        _single_duration_codec.WriteTagAndValue(output, Duration);
      }
      if (updateFrom_ != null) {
        _single_updateFrom_codec.WriteTagAndValue(output, UpdateFrom);
      }
      if (createdBy_ != null) {
        _single_createdBy_codec.WriteTagAndValue(output, CreatedBy);
      }
      if (customerIdentityGuid_ != null) {
        _single_customerIdentityGuid_codec.WriteTagAndValue(output, CustomerIdentityGuid);
      }
      if (contractorId_ != null) {
        _single_contractorId_codec.WriteTagAndValue(output, ContractorId);
      }
      if (channelText_ != null) {
        _single_channelText_codec.WriteTagAndValue(output, ChannelText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (status_ != null) {
        size += _single_status_codec.CalculateSizeWithTag(Status);
      }
      if (customerId_ != null) {
        size += _single_customerId_codec.CalculateSizeWithTag(CustomerId);
      }
      if (customerName_ != null) {
        size += _single_customerName_codec.CalculateSizeWithTag(CustomerName);
      }
      if (customerPhone_ != null) {
        size += _single_customerPhone_codec.CalculateSizeWithTag(CustomerPhone);
      }
      if (customerEmail_ != null) {
        size += _single_customerEmail_codec.CalculateSizeWithTag(CustomerEmail);
      }
      if (cId_ != null) {
        size += _single_cId_codec.CalculateSizeWithTag(CId);
      }
      if (contractId_ != null) {
        size += _single_contractId_codec.CalculateSizeWithTag(ContractId);
      }
      if (customerCode_ != null) {
        size += _single_customerCode_codec.CalculateSizeWithTag(CustomerCode);
      }
      if (service_ != null) {
        size += _single_service_codec.CalculateSizeWithTag(Service);
      }
      if (servicePackage_ != null) {
        size += _single_servicePackage_codec.CalculateSizeWithTag(ServicePackage);
      }
      if (address_ != null) {
        size += _single_address_codec.CalculateSizeWithTag(Address);
      }
      if (iPAddress_ != null) {
        size += _single_iPAddress_codec.CalculateSizeWithTag(IPAddress);
      }
      if (title_ != null) {
        size += _single_title_codec.CalculateSizeWithTag(Title);
      }
      if (content_ != null) {
        size += _single_content_codec.CalculateSizeWithTag(Content);
      }
      if (note_ != null) {
        size += _single_note_codec.CalculateSizeWithTag(Note);
      }
      if (dateCreated_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DateCreated);
      }
      if (dateUpdated_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DateUpdated);
      }
      if (source_ != null) {
        size += _single_source_codec.CalculateSizeWithTag(Source);
      }
      if (outContractServicePackageId_ != null) {
        size += _single_outContractServicePackageId_codec.CalculateSizeWithTag(OutContractServicePackageId);
      }
      if (contractCode_ != null) {
        size += _single_contractCode_codec.CalculateSizeWithTag(ContractCode);
      }
      if (Handled != false) {
        size += 2 + 1;
      }
      if (customerRate_ != null) {
        size += _single_customerRate_codec.CalculateSizeWithTag(CustomerRate);
      }
      if (customerComment_ != null) {
        size += _single_customerComment_codec.CalculateSizeWithTag(CustomerComment);
      }
      if (dateRequested_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DateRequested);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (startTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (stopTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StopTime);
      }
      if (globalId_ != null) {
        size += _single_globalId_codec.CalculateSizeWithTag(GlobalId);
      }
      if (requestCode_ != null) {
        size += _single_requestCode_codec.CalculateSizeWithTag(RequestCode);
      }
      if (city_ != null) {
        size += _single_city_codec.CalculateSizeWithTag(City);
      }
      if (district_ != null) {
        size += _single_district_codec.CalculateSizeWithTag(District);
      }
      if (duration_ != null) {
        size += _single_duration_codec.CalculateSizeWithTag(Duration);
      }
      if (updateFrom_ != null) {
        size += _single_updateFrom_codec.CalculateSizeWithTag(UpdateFrom);
      }
      if (createdBy_ != null) {
        size += _single_createdBy_codec.CalculateSizeWithTag(CreatedBy);
      }
      if (customerIdentityGuid_ != null) {
        size += _single_customerIdentityGuid_codec.CalculateSizeWithTag(CustomerIdentityGuid);
      }
      if (contractorId_ != null) {
        size += _single_contractorId_codec.CalculateSizeWithTag(ContractorId);
      }
      if (channelText_ != null) {
        size += _single_channelText_codec.CalculateSizeWithTag(ChannelText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFeedbackAndRequestGrpc other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.status_ != null) {
        if (status_ == null || other.Status != 0) {
          Status = other.Status;
        }
      }
      if (other.customerId_ != null) {
        if (customerId_ == null || other.CustomerId != "") {
          CustomerId = other.CustomerId;
        }
      }
      if (other.customerName_ != null) {
        if (customerName_ == null || other.CustomerName != "") {
          CustomerName = other.CustomerName;
        }
      }
      if (other.customerPhone_ != null) {
        if (customerPhone_ == null || other.CustomerPhone != "") {
          CustomerPhone = other.CustomerPhone;
        }
      }
      if (other.customerEmail_ != null) {
        if (customerEmail_ == null || other.CustomerEmail != "") {
          CustomerEmail = other.CustomerEmail;
        }
      }
      if (other.cId_ != null) {
        if (cId_ == null || other.CId != "") {
          CId = other.CId;
        }
      }
      if (other.contractId_ != null) {
        if (contractId_ == null || other.ContractId != "") {
          ContractId = other.ContractId;
        }
      }
      if (other.customerCode_ != null) {
        if (customerCode_ == null || other.CustomerCode != "") {
          CustomerCode = other.CustomerCode;
        }
      }
      if (other.service_ != null) {
        if (service_ == null || other.Service != "") {
          Service = other.Service;
        }
      }
      if (other.servicePackage_ != null) {
        if (servicePackage_ == null || other.ServicePackage != "") {
          ServicePackage = other.ServicePackage;
        }
      }
      if (other.address_ != null) {
        if (address_ == null || other.Address != "") {
          Address = other.Address;
        }
      }
      if (other.iPAddress_ != null) {
        if (iPAddress_ == null || other.IPAddress != "") {
          IPAddress = other.IPAddress;
        }
      }
      if (other.title_ != null) {
        if (title_ == null || other.Title != "") {
          Title = other.Title;
        }
      }
      if (other.content_ != null) {
        if (content_ == null || other.Content != "") {
          Content = other.Content;
        }
      }
      if (other.note_ != null) {
        if (note_ == null || other.Note != "") {
          Note = other.Note;
        }
      }
      if (other.dateCreated_ != null) {
        if (dateCreated_ == null) {
          DateCreated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DateCreated.MergeFrom(other.DateCreated);
      }
      if (other.dateUpdated_ != null) {
        if (dateUpdated_ == null) {
          DateUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DateUpdated.MergeFrom(other.DateUpdated);
      }
      if (other.source_ != null) {
        if (source_ == null || other.Source != "") {
          Source = other.Source;
        }
      }
      if (other.outContractServicePackageId_ != null) {
        if (outContractServicePackageId_ == null || other.OutContractServicePackageId != 0) {
          OutContractServicePackageId = other.OutContractServicePackageId;
        }
      }
      if (other.contractCode_ != null) {
        if (contractCode_ == null || other.ContractCode != "") {
          ContractCode = other.ContractCode;
        }
      }
      if (other.Handled != false) {
        Handled = other.Handled;
      }
      if (other.customerRate_ != null) {
        if (customerRate_ == null || other.CustomerRate != 0D) {
          CustomerRate = other.CustomerRate;
        }
      }
      if (other.customerComment_ != null) {
        if (customerComment_ == null || other.CustomerComment != "") {
          CustomerComment = other.CustomerComment;
        }
      }
      if (other.dateRequested_ != null) {
        if (dateRequested_ == null) {
          DateRequested = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DateRequested.MergeFrom(other.DateRequested);
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.stopTime_ != null) {
        if (stopTime_ == null) {
          StopTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StopTime.MergeFrom(other.StopTime);
      }
      if (other.globalId_ != null) {
        if (globalId_ == null || other.GlobalId != "") {
          GlobalId = other.GlobalId;
        }
      }
      if (other.requestCode_ != null) {
        if (requestCode_ == null || other.RequestCode != "") {
          RequestCode = other.RequestCode;
        }
      }
      if (other.city_ != null) {
        if (city_ == null || other.City != "") {
          City = other.City;
        }
      }
      if (other.district_ != null) {
        if (district_ == null || other.District != "") {
          District = other.District;
        }
      }
      if (other.duration_ != null) {
        if (duration_ == null || other.Duration != 0L) {
          Duration = other.Duration;
        }
      }
      if (other.updateFrom_ != null) {
        if (updateFrom_ == null || other.UpdateFrom != "") {
          UpdateFrom = other.UpdateFrom;
        }
      }
      if (other.createdBy_ != null) {
        if (createdBy_ == null || other.CreatedBy != "") {
          CreatedBy = other.CreatedBy;
        }
      }
      if (other.customerIdentityGuid_ != null) {
        if (customerIdentityGuid_ == null || other.CustomerIdentityGuid != "") {
          CustomerIdentityGuid = other.CustomerIdentityGuid;
        }
      }
      if (other.contractorId_ != null) {
        if (contractorId_ == null || other.ContractorId != 0) {
          ContractorId = other.ContractorId;
        }
      }
      if (other.channelText_ != null) {
        if (channelText_ == null || other.ChannelText != "") {
          ChannelText = other.ChannelText;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            int? value = _single_status_codec.Read(input);
            if (status_ == null || value != 0) {
              Status = value;
            }
            break;
          }
          case 26: {
            string value = _single_customerId_codec.Read(input);
            if (customerId_ == null || value != "") {
              CustomerId = value;
            }
            break;
          }
          case 34: {
            string value = _single_customerName_codec.Read(input);
            if (customerName_ == null || value != "") {
              CustomerName = value;
            }
            break;
          }
          case 42: {
            string value = _single_customerPhone_codec.Read(input);
            if (customerPhone_ == null || value != "") {
              CustomerPhone = value;
            }
            break;
          }
          case 50: {
            string value = _single_customerEmail_codec.Read(input);
            if (customerEmail_ == null || value != "") {
              CustomerEmail = value;
            }
            break;
          }
          case 58: {
            string value = _single_cId_codec.Read(input);
            if (cId_ == null || value != "") {
              CId = value;
            }
            break;
          }
          case 66: {
            string value = _single_contractId_codec.Read(input);
            if (contractId_ == null || value != "") {
              ContractId = value;
            }
            break;
          }
          case 74: {
            string value = _single_customerCode_codec.Read(input);
            if (customerCode_ == null || value != "") {
              CustomerCode = value;
            }
            break;
          }
          case 82: {
            string value = _single_service_codec.Read(input);
            if (service_ == null || value != "") {
              Service = value;
            }
            break;
          }
          case 90: {
            string value = _single_servicePackage_codec.Read(input);
            if (servicePackage_ == null || value != "") {
              ServicePackage = value;
            }
            break;
          }
          case 98: {
            string value = _single_address_codec.Read(input);
            if (address_ == null || value != "") {
              Address = value;
            }
            break;
          }
          case 106: {
            string value = _single_iPAddress_codec.Read(input);
            if (iPAddress_ == null || value != "") {
              IPAddress = value;
            }
            break;
          }
          case 114: {
            string value = _single_title_codec.Read(input);
            if (title_ == null || value != "") {
              Title = value;
            }
            break;
          }
          case 122: {
            string value = _single_content_codec.Read(input);
            if (content_ == null || value != "") {
              Content = value;
            }
            break;
          }
          case 130: {
            string value = _single_note_codec.Read(input);
            if (note_ == null || value != "") {
              Note = value;
            }
            break;
          }
          case 138: {
            if (dateCreated_ == null) {
              DateCreated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DateCreated);
            break;
          }
          case 146: {
            if (dateUpdated_ == null) {
              DateUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DateUpdated);
            break;
          }
          case 154: {
            string value = _single_source_codec.Read(input);
            if (source_ == null || value != "") {
              Source = value;
            }
            break;
          }
          case 162: {
            int? value = _single_outContractServicePackageId_codec.Read(input);
            if (outContractServicePackageId_ == null || value != 0) {
              OutContractServicePackageId = value;
            }
            break;
          }
          case 170: {
            string value = _single_contractCode_codec.Read(input);
            if (contractCode_ == null || value != "") {
              ContractCode = value;
            }
            break;
          }
          case 176: {
            Handled = input.ReadBool();
            break;
          }
          case 186: {
            double? value = _single_customerRate_codec.Read(input);
            if (customerRate_ == null || value != 0D) {
              CustomerRate = value;
            }
            break;
          }
          case 194: {
            string value = _single_customerComment_codec.Read(input);
            if (customerComment_ == null || value != "") {
              CustomerComment = value;
            }
            break;
          }
          case 202: {
            if (dateRequested_ == null) {
              DateRequested = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DateRequested);
            break;
          }
          case 210: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 218: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 226: {
            if (stopTime_ == null) {
              StopTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StopTime);
            break;
          }
          case 234: {
            string value = _single_globalId_codec.Read(input);
            if (globalId_ == null || value != "") {
              GlobalId = value;
            }
            break;
          }
          case 242: {
            string value = _single_requestCode_codec.Read(input);
            if (requestCode_ == null || value != "") {
              RequestCode = value;
            }
            break;
          }
          case 250: {
            string value = _single_city_codec.Read(input);
            if (city_ == null || value != "") {
              City = value;
            }
            break;
          }
          case 258: {
            string value = _single_district_codec.Read(input);
            if (district_ == null || value != "") {
              District = value;
            }
            break;
          }
          case 266: {
            long? value = _single_duration_codec.Read(input);
            if (duration_ == null || value != 0L) {
              Duration = value;
            }
            break;
          }
          case 274: {
            string value = _single_updateFrom_codec.Read(input);
            if (updateFrom_ == null || value != "") {
              UpdateFrom = value;
            }
            break;
          }
          case 282: {
            string value = _single_createdBy_codec.Read(input);
            if (createdBy_ == null || value != "") {
              CreatedBy = value;
            }
            break;
          }
          case 290: {
            string value = _single_customerIdentityGuid_codec.Read(input);
            if (customerIdentityGuid_ == null || value != "") {
              CustomerIdentityGuid = value;
            }
            break;
          }
          case 298: {
            int? value = _single_contractorId_codec.Read(input);
            if (contractorId_ == null || value != 0) {
              ContractorId = value;
            }
            break;
          }
          case 306: {
            string value = _single_channelText_codec.Read(input);
            if (channelText_ == null || value != "") {
              ChannelText = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeedbackAndRequestAllGrpc : pb::IMessage<FeedbackAndRequestAllGrpc> {
    private static readonly pb::MessageParser<FeedbackAndRequestAllGrpc> _parser = new pb::MessageParser<FeedbackAndRequestAllGrpc>(() => new FeedbackAndRequestAllGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedbackAndRequestAllGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Feedback.API.Protos.FeedbackandrequestReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestAllGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestAllGrpc(FeedbackAndRequestAllGrpc other) : this() {
      result_ = other.result_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestAllGrpc Clone() {
      return new FeedbackAndRequestAllGrpc(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc> _repeated_result_codec
        = pb::FieldCodec.ForMessage(10, global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc.Parser);
    private readonly pbc::RepeatedField<global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc> result_ = new pbc::RepeatedField<global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc> Result {
      get { return result_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedbackAndRequestAllGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedbackAndRequestAllGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!result_.Equals(other.result_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= result_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      result_.WriteTo(output, _repeated_result_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += result_.CalculateSize(_repeated_result_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedbackAndRequestAllGrpc other) {
      if (other == null) {
        return;
      }
      result_.Add(other.result_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            result_.AddEntriesFrom(input, _repeated_result_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeedbackAndRequestPageListGrpcDTO : pb::IMessage<FeedbackAndRequestPageListGrpcDTO> {
    private static readonly pb::MessageParser<FeedbackAndRequestPageListGrpcDTO> _parser = new pb::MessageParser<FeedbackAndRequestPageListGrpcDTO>(() => new FeedbackAndRequestPageListGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedbackAndRequestPageListGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Feedback.API.Protos.FeedbackandrequestReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestPageListGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestPageListGrpcDTO(FeedbackAndRequestPageListGrpcDTO other) : this() {
      subset_ = other.subset_.Clone();
      Count = other.Count;
      PageCount = other.PageCount;
      TotalItemCount = other.TotalItemCount;
      Skip = other.Skip;
      Take = other.Take;
      hasPreviousPage_ = other.hasPreviousPage_;
      hasNextPage_ = other.hasNextPage_;
      isFirstPage_ = other.isFirstPage_;
      isLastPage_ = other.isLastPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestPageListGrpcDTO Clone() {
      return new FeedbackAndRequestPageListGrpcDTO(this);
    }

    /// <summary>Field number for the "subset" field.</summary>
    public const int SubsetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc> _repeated_subset_codec
        = pb::FieldCodec.ForMessage(10, global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc.Parser);
    private readonly pbc::RepeatedField<global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc> subset_ = new pbc::RepeatedField<global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Feedback.API.Protos.FeedbackAndRequestDTOGrpc> Subset {
      get { return subset_; }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_count_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }


    /// <summary>Field number for the "pageCount" field.</summary>
    public const int PageCountFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_pageCount_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? pageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PageCount {
      get { return pageCount_; }
      set {
        pageCount_ = value;
      }
    }


    /// <summary>Field number for the "totalItemCount" field.</summary>
    public const int TotalItemCountFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_totalItemCount_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? totalItemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TotalItemCount {
      get { return totalItemCount_; }
      set {
        totalItemCount_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "hasPreviousPage" field.</summary>
    public const int HasPreviousPageFieldNumber = 7;
    private bool hasPreviousPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreviousPage {
      get { return hasPreviousPage_; }
      set {
        hasPreviousPage_ = value;
      }
    }

    /// <summary>Field number for the "hasNextPage" field.</summary>
    public const int HasNextPageFieldNumber = 8;
    private bool hasNextPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPage {
      get { return hasNextPage_; }
      set {
        hasNextPage_ = value;
      }
    }

    /// <summary>Field number for the "isFirstPage" field.</summary>
    public const int IsFirstPageFieldNumber = 9;
    private bool isFirstPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirstPage {
      get { return isFirstPage_; }
      set {
        isFirstPage_ = value;
      }
    }

    /// <summary>Field number for the "isLastPage" field.</summary>
    public const int IsLastPageFieldNumber = 10;
    private bool isLastPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastPage {
      get { return isLastPage_; }
      set {
        isLastPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedbackAndRequestPageListGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedbackAndRequestPageListGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subset_.Equals(other.subset_)) return false;
      if (Count != other.Count) return false;
      if (PageCount != other.PageCount) return false;
      if (TotalItemCount != other.TotalItemCount) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (HasPreviousPage != other.HasPreviousPage) return false;
      if (HasNextPage != other.HasNextPage) return false;
      if (IsFirstPage != other.IsFirstPage) return false;
      if (IsLastPage != other.IsLastPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subset_.GetHashCode();
      if (count_ != null) hash ^= Count.GetHashCode();
      if (pageCount_ != null) hash ^= PageCount.GetHashCode();
      if (totalItemCount_ != null) hash ^= TotalItemCount.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (HasPreviousPage != false) hash ^= HasPreviousPage.GetHashCode();
      if (HasNextPage != false) hash ^= HasNextPage.GetHashCode();
      if (IsFirstPage != false) hash ^= IsFirstPage.GetHashCode();
      if (IsLastPage != false) hash ^= IsLastPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subset_.WriteTo(output, _repeated_subset_codec);
      if (count_ != null) {
        _single_count_codec.WriteTagAndValue(output, Count);
      }
      if (pageCount_ != null) {
        _single_pageCount_codec.WriteTagAndValue(output, PageCount);
      }
      if (totalItemCount_ != null) {
        _single_totalItemCount_codec.WriteTagAndValue(output, TotalItemCount);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (HasPreviousPage != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasPreviousPage);
      }
      if (HasNextPage != false) {
        output.WriteRawTag(64);
        output.WriteBool(HasNextPage);
      }
      if (IsFirstPage != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsFirstPage);
      }
      if (IsLastPage != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsLastPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subset_.CalculateSize(_repeated_subset_codec);
      if (count_ != null) {
        size += _single_count_codec.CalculateSizeWithTag(Count);
      }
      if (pageCount_ != null) {
        size += _single_pageCount_codec.CalculateSizeWithTag(PageCount);
      }
      if (totalItemCount_ != null) {
        size += _single_totalItemCount_codec.CalculateSizeWithTag(TotalItemCount);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (HasPreviousPage != false) {
        size += 1 + 1;
      }
      if (HasNextPage != false) {
        size += 1 + 1;
      }
      if (IsFirstPage != false) {
        size += 1 + 1;
      }
      if (IsLastPage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedbackAndRequestPageListGrpcDTO other) {
      if (other == null) {
        return;
      }
      subset_.Add(other.subset_);
      if (other.count_ != null) {
        if (count_ == null || other.Count != 0) {
          Count = other.Count;
        }
      }
      if (other.pageCount_ != null) {
        if (pageCount_ == null || other.PageCount != 0) {
          PageCount = other.PageCount;
        }
      }
      if (other.totalItemCount_ != null) {
        if (totalItemCount_ == null || other.TotalItemCount != 0) {
          TotalItemCount = other.TotalItemCount;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.HasPreviousPage != false) {
        HasPreviousPage = other.HasPreviousPage;
      }
      if (other.HasNextPage != false) {
        HasNextPage = other.HasNextPage;
      }
      if (other.IsFirstPage != false) {
        IsFirstPage = other.IsFirstPage;
      }
      if (other.IsLastPage != false) {
        IsLastPage = other.IsLastPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subset_.AddEntriesFrom(input, _repeated_subset_codec);
            break;
          }
          case 18: {
            int? value = _single_count_codec.Read(input);
            if (count_ == null || value != 0) {
              Count = value;
            }
            break;
          }
          case 26: {
            int? value = _single_pageCount_codec.Read(input);
            if (pageCount_ == null || value != 0) {
              PageCount = value;
            }
            break;
          }
          case 34: {
            int? value = _single_totalItemCount_codec.Read(input);
            if (totalItemCount_ == null || value != 0) {
              TotalItemCount = value;
            }
            break;
          }
          case 42: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 50: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 56: {
            HasPreviousPage = input.ReadBool();
            break;
          }
          case 64: {
            HasNextPage = input.ReadBool();
            break;
          }
          case 72: {
            IsFirstPage = input.ReadBool();
            break;
          }
          case 80: {
            IsLastPage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeedbackAndRequestDTOGrpc : pb::IMessage<FeedbackAndRequestDTOGrpc> {
    private static readonly pb::MessageParser<FeedbackAndRequestDTOGrpc> _parser = new pb::MessageParser<FeedbackAndRequestDTOGrpc>(() => new FeedbackAndRequestDTOGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedbackAndRequestDTOGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Feedback.API.Protos.FeedbackandrequestReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestDTOGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestDTOGrpc(FeedbackAndRequestDTOGrpc other) : this() {
      Id = other.Id;
      Status = other.Status;
      CustomerId = other.CustomerId;
      CustomerName = other.CustomerName;
      CustomerPhone = other.CustomerPhone;
      CustomerEmail = other.CustomerEmail;
      CId = other.CId;
      ContractId = other.ContractId;
      CustomerCode = other.CustomerCode;
      Service = other.Service;
      ServicePackage = other.ServicePackage;
      Address = other.Address;
      IPAddress = other.IPAddress;
      Title = other.Title;
      Content = other.Content;
      Note = other.Note;
      dateCreated_ = other.dateCreated_ != null ? other.dateCreated_.Clone() : null;
      dateUpdated_ = other.dateUpdated_ != null ? other.dateUpdated_.Clone() : null;
      dateRequested_ = other.dateRequested_ != null ? other.dateRequested_.Clone() : null;
      Source = other.Source;
      OutContractServicePackageId = other.OutContractServicePackageId;
      ContractCode = other.ContractCode;
      handled_ = other.handled_;
      CustomerRate = other.CustomerRate;
      CustomerComment = other.CustomerComment;
      Description = other.Description;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      stopTime_ = other.stopTime_ != null ? other.stopTime_.Clone() : null;
      GlobalId = other.GlobalId;
      Duration = other.Duration;
      RequestCode = other.RequestCode;
      City = other.City;
      District = other.District;
      UpdateFrom = other.UpdateFrom;
      CustomerIdentityGuid = other.CustomerIdentityGuid;
      ContractorId = other.ContractorId;
      ChannelText = other.ChannelText;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedbackAndRequestDTOGrpc Clone() {
      return new FeedbackAndRequestDTOGrpc(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_id_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_status_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }


    /// <summary>Field number for the "customerId" field.</summary>
    public const int CustomerIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_customerId_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string customerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerId {
      get { return customerId_; }
      set {
        customerId_ = value;
      }
    }


    /// <summary>Field number for the "customerName" field.</summary>
    public const int CustomerNameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_customerName_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string customerName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerName {
      get { return customerName_; }
      set {
        customerName_ = value;
      }
    }


    /// <summary>Field number for the "customerPhone" field.</summary>
    public const int CustomerPhoneFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_customerPhone_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string customerPhone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerPhone {
      get { return customerPhone_; }
      set {
        customerPhone_ = value;
      }
    }


    /// <summary>Field number for the "customerEmail" field.</summary>
    public const int CustomerEmailFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_customerEmail_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string customerEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerEmail {
      get { return customerEmail_; }
      set {
        customerEmail_ = value;
      }
    }


    /// <summary>Field number for the "cId" field.</summary>
    public const int CIdFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_cId_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string cId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CId {
      get { return cId_; }
      set {
        cId_ = value;
      }
    }


    /// <summary>Field number for the "contractId" field.</summary>
    public const int ContractIdFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_contractId_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string contractId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractId {
      get { return contractId_; }
      set {
        contractId_ = value;
      }
    }


    /// <summary>Field number for the "customerCode" field.</summary>
    public const int CustomerCodeFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_customerCode_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string customerCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerCode {
      get { return customerCode_; }
      set {
        customerCode_ = value;
      }
    }


    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_service_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string service_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = value;
      }
    }


    /// <summary>Field number for the "servicePackage" field.</summary>
    public const int ServicePackageFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_servicePackage_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string servicePackage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePackage {
      get { return servicePackage_; }
      set {
        servicePackage_ = value;
      }
    }


    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_address_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }


    /// <summary>Field number for the "iPAddress" field.</summary>
    public const int IPAddressFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_iPAddress_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string iPAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IPAddress {
      get { return iPAddress_; }
      set {
        iPAddress_ = value;
      }
    }


    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_title_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }


    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_content_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }


    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_note_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string note_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Note {
      get { return note_; }
      set {
        note_ = value;
      }
    }


    /// <summary>Field number for the "dateCreated" field.</summary>
    public const int DateCreatedFieldNumber = 17;
    private global::Google.Protobuf.WellKnownTypes.Timestamp dateCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DateCreated {
      get { return dateCreated_; }
      set {
        dateCreated_ = value;
      }
    }

    /// <summary>Field number for the "dateUpdated" field.</summary>
    public const int DateUpdatedFieldNumber = 18;
    private global::Google.Protobuf.WellKnownTypes.Timestamp dateUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DateUpdated {
      get { return dateUpdated_; }
      set {
        dateUpdated_ = value;
      }
    }

    /// <summary>Field number for the "dateRequested" field.</summary>
    public const int DateRequestedFieldNumber = 19;
    private global::Google.Protobuf.WellKnownTypes.Timestamp dateRequested_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DateRequested {
      get { return dateRequested_; }
      set {
        dateRequested_ = value;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 21;
    private static readonly pb::FieldCodec<string> _single_source_codec = pb::FieldCodec.ForClassWrapper<string>(170);
    private string source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }


    /// <summary>Field number for the "outContractServicePackageId" field.</summary>
    public const int OutContractServicePackageIdFieldNumber = 22;
    private static readonly pb::FieldCodec<int?> _single_outContractServicePackageId_codec = pb::FieldCodec.ForStructWrapper<int>(178);
    private int? outContractServicePackageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? OutContractServicePackageId {
      get { return outContractServicePackageId_; }
      set {
        outContractServicePackageId_ = value;
      }
    }


    /// <summary>Field number for the "contractCode" field.</summary>
    public const int ContractCodeFieldNumber = 23;
    private static readonly pb::FieldCodec<string> _single_contractCode_codec = pb::FieldCodec.ForClassWrapper<string>(186);
    private string contractCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = value;
      }
    }


    /// <summary>Field number for the "handled" field.</summary>
    public const int HandledFieldNumber = 24;
    private bool handled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Handled {
      get { return handled_; }
      set {
        handled_ = value;
      }
    }

    /// <summary>Field number for the "customerRate" field.</summary>
    public const int CustomerRateFieldNumber = 25;
    private static readonly pb::FieldCodec<double?> _single_customerRate_codec = pb::FieldCodec.ForStructWrapper<double>(202);
    private double? customerRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? CustomerRate {
      get { return customerRate_; }
      set {
        customerRate_ = value;
      }
    }


    /// <summary>Field number for the "customerComment" field.</summary>
    public const int CustomerCommentFieldNumber = 26;
    private static readonly pb::FieldCodec<string> _single_customerComment_codec = pb::FieldCodec.ForClassWrapper<string>(210);
    private string customerComment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerComment {
      get { return customerComment_; }
      set {
        customerComment_ = value;
      }
    }


    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 27;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(218);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 28;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "stopTime" field.</summary>
    public const int StopTimeFieldNumber = 29;
    private global::Google.Protobuf.WellKnownTypes.Timestamp stopTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StopTime {
      get { return stopTime_; }
      set {
        stopTime_ = value;
      }
    }

    /// <summary>Field number for the "globalId" field.</summary>
    public const int GlobalIdFieldNumber = 30;
    private static readonly pb::FieldCodec<string> _single_globalId_codec = pb::FieldCodec.ForClassWrapper<string>(242);
    private string globalId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GlobalId {
      get { return globalId_; }
      set {
        globalId_ = value;
      }
    }


    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 31;
    private static readonly pb::FieldCodec<long?> _single_duration_codec = pb::FieldCodec.ForStructWrapper<long>(250);
    private long? duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }


    /// <summary>Field number for the "requestCode" field.</summary>
    public const int RequestCodeFieldNumber = 32;
    private static readonly pb::FieldCodec<string> _single_requestCode_codec = pb::FieldCodec.ForClassWrapper<string>(258);
    private string requestCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestCode {
      get { return requestCode_; }
      set {
        requestCode_ = value;
      }
    }


    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 33;
    private static readonly pb::FieldCodec<string> _single_city_codec = pb::FieldCodec.ForClassWrapper<string>(266);
    private string city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = value;
      }
    }


    /// <summary>Field number for the "district" field.</summary>
    public const int DistrictFieldNumber = 34;
    private static readonly pb::FieldCodec<string> _single_district_codec = pb::FieldCodec.ForClassWrapper<string>(274);
    private string district_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string District {
      get { return district_; }
      set {
        district_ = value;
      }
    }


    /// <summary>Field number for the "updateFrom" field.</summary>
    public const int UpdateFromFieldNumber = 35;
    private static readonly pb::FieldCodec<string> _single_updateFrom_codec = pb::FieldCodec.ForClassWrapper<string>(282);
    private string updateFrom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdateFrom {
      get { return updateFrom_; }
      set {
        updateFrom_ = value;
      }
    }


    /// <summary>Field number for the "customerIdentityGuid" field.</summary>
    public const int CustomerIdentityGuidFieldNumber = 36;
    private static readonly pb::FieldCodec<string> _single_customerIdentityGuid_codec = pb::FieldCodec.ForClassWrapper<string>(290);
    private string customerIdentityGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerIdentityGuid {
      get { return customerIdentityGuid_; }
      set {
        customerIdentityGuid_ = value;
      }
    }


    /// <summary>Field number for the "contractorId" field.</summary>
    public const int ContractorIdFieldNumber = 37;
    private static readonly pb::FieldCodec<int?> _single_contractorId_codec = pb::FieldCodec.ForStructWrapper<int>(298);
    private int? contractorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractorId {
      get { return contractorId_; }
      set {
        contractorId_ = value;
      }
    }


    /// <summary>Field number for the "channelText" field.</summary>
    public const int ChannelTextFieldNumber = 38;
    private static readonly pb::FieldCodec<string> _single_channelText_codec = pb::FieldCodec.ForClassWrapper<string>(306);
    private string channelText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelText {
      get { return channelText_; }
      set {
        channelText_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedbackAndRequestDTOGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedbackAndRequestDTOGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Status != other.Status) return false;
      if (CustomerId != other.CustomerId) return false;
      if (CustomerName != other.CustomerName) return false;
      if (CustomerPhone != other.CustomerPhone) return false;
      if (CustomerEmail != other.CustomerEmail) return false;
      if (CId != other.CId) return false;
      if (ContractId != other.ContractId) return false;
      if (CustomerCode != other.CustomerCode) return false;
      if (Service != other.Service) return false;
      if (ServicePackage != other.ServicePackage) return false;
      if (Address != other.Address) return false;
      if (IPAddress != other.IPAddress) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if (Note != other.Note) return false;
      if (!object.Equals(DateCreated, other.DateCreated)) return false;
      if (!object.Equals(DateUpdated, other.DateUpdated)) return false;
      if (!object.Equals(DateRequested, other.DateRequested)) return false;
      if (Source != other.Source) return false;
      if (OutContractServicePackageId != other.OutContractServicePackageId) return false;
      if (ContractCode != other.ContractCode) return false;
      if (Handled != other.Handled) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(CustomerRate, other.CustomerRate)) return false;
      if (CustomerComment != other.CustomerComment) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(StopTime, other.StopTime)) return false;
      if (GlobalId != other.GlobalId) return false;
      if (Duration != other.Duration) return false;
      if (RequestCode != other.RequestCode) return false;
      if (City != other.City) return false;
      if (District != other.District) return false;
      if (UpdateFrom != other.UpdateFrom) return false;
      if (CustomerIdentityGuid != other.CustomerIdentityGuid) return false;
      if (ContractorId != other.ContractorId) return false;
      if (ChannelText != other.ChannelText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (customerId_ != null) hash ^= CustomerId.GetHashCode();
      if (customerName_ != null) hash ^= CustomerName.GetHashCode();
      if (customerPhone_ != null) hash ^= CustomerPhone.GetHashCode();
      if (customerEmail_ != null) hash ^= CustomerEmail.GetHashCode();
      if (cId_ != null) hash ^= CId.GetHashCode();
      if (contractId_ != null) hash ^= ContractId.GetHashCode();
      if (customerCode_ != null) hash ^= CustomerCode.GetHashCode();
      if (service_ != null) hash ^= Service.GetHashCode();
      if (servicePackage_ != null) hash ^= ServicePackage.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (iPAddress_ != null) hash ^= IPAddress.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (note_ != null) hash ^= Note.GetHashCode();
      if (dateCreated_ != null) hash ^= DateCreated.GetHashCode();
      if (dateUpdated_ != null) hash ^= DateUpdated.GetHashCode();
      if (dateRequested_ != null) hash ^= DateRequested.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      if (outContractServicePackageId_ != null) hash ^= OutContractServicePackageId.GetHashCode();
      if (contractCode_ != null) hash ^= ContractCode.GetHashCode();
      if (Handled != false) hash ^= Handled.GetHashCode();
      if (customerRate_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(CustomerRate);
      if (customerComment_ != null) hash ^= CustomerComment.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (stopTime_ != null) hash ^= StopTime.GetHashCode();
      if (globalId_ != null) hash ^= GlobalId.GetHashCode();
      if (duration_ != null) hash ^= Duration.GetHashCode();
      if (requestCode_ != null) hash ^= RequestCode.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      if (district_ != null) hash ^= District.GetHashCode();
      if (updateFrom_ != null) hash ^= UpdateFrom.GetHashCode();
      if (customerIdentityGuid_ != null) hash ^= CustomerIdentityGuid.GetHashCode();
      if (contractorId_ != null) hash ^= ContractorId.GetHashCode();
      if (channelText_ != null) hash ^= ChannelText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (status_ != null) {
        _single_status_codec.WriteTagAndValue(output, Status);
      }
      if (customerId_ != null) {
        _single_customerId_codec.WriteTagAndValue(output, CustomerId);
      }
      if (customerName_ != null) {
        _single_customerName_codec.WriteTagAndValue(output, CustomerName);
      }
      if (customerPhone_ != null) {
        _single_customerPhone_codec.WriteTagAndValue(output, CustomerPhone);
      }
      if (customerEmail_ != null) {
        _single_customerEmail_codec.WriteTagAndValue(output, CustomerEmail);
      }
      if (cId_ != null) {
        _single_cId_codec.WriteTagAndValue(output, CId);
      }
      if (contractId_ != null) {
        _single_contractId_codec.WriteTagAndValue(output, ContractId);
      }
      if (customerCode_ != null) {
        _single_customerCode_codec.WriteTagAndValue(output, CustomerCode);
      }
      if (service_ != null) {
        _single_service_codec.WriteTagAndValue(output, Service);
      }
      if (servicePackage_ != null) {
        _single_servicePackage_codec.WriteTagAndValue(output, ServicePackage);
      }
      if (address_ != null) {
        _single_address_codec.WriteTagAndValue(output, Address);
      }
      if (iPAddress_ != null) {
        _single_iPAddress_codec.WriteTagAndValue(output, IPAddress);
      }
      if (title_ != null) {
        _single_title_codec.WriteTagAndValue(output, Title);
      }
      if (content_ != null) {
        _single_content_codec.WriteTagAndValue(output, Content);
      }
      if (note_ != null) {
        _single_note_codec.WriteTagAndValue(output, Note);
      }
      if (dateCreated_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(DateCreated);
      }
      if (dateUpdated_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(DateUpdated);
      }
      if (dateRequested_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(DateRequested);
      }
      if (source_ != null) {
        _single_source_codec.WriteTagAndValue(output, Source);
      }
      if (outContractServicePackageId_ != null) {
        _single_outContractServicePackageId_codec.WriteTagAndValue(output, OutContractServicePackageId);
      }
      if (contractCode_ != null) {
        _single_contractCode_codec.WriteTagAndValue(output, ContractCode);
      }
      if (Handled != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(Handled);
      }
      if (customerRate_ != null) {
        _single_customerRate_codec.WriteTagAndValue(output, CustomerRate);
      }
      if (customerComment_ != null) {
        _single_customerComment_codec.WriteTagAndValue(output, CustomerComment);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (startTime_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(StartTime);
      }
      if (stopTime_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(StopTime);
      }
      if (globalId_ != null) {
        _single_globalId_codec.WriteTagAndValue(output, GlobalId);
      }
      if (duration_ != null) {
        _single_duration_codec.WriteTagAndValue(output, Duration);
      }
      if (requestCode_ != null) {
        _single_requestCode_codec.WriteTagAndValue(output, RequestCode);
      }
      if (city_ != null) {
        _single_city_codec.WriteTagAndValue(output, City);
      }
      if (district_ != null) {
        _single_district_codec.WriteTagAndValue(output, District);
      }
      if (updateFrom_ != null) {
        _single_updateFrom_codec.WriteTagAndValue(output, UpdateFrom);
      }
      if (customerIdentityGuid_ != null) {
        _single_customerIdentityGuid_codec.WriteTagAndValue(output, CustomerIdentityGuid);
      }
      if (contractorId_ != null) {
        _single_contractorId_codec.WriteTagAndValue(output, ContractorId);
      }
      if (channelText_ != null) {
        _single_channelText_codec.WriteTagAndValue(output, ChannelText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (status_ != null) {
        size += _single_status_codec.CalculateSizeWithTag(Status);
      }
      if (customerId_ != null) {
        size += _single_customerId_codec.CalculateSizeWithTag(CustomerId);
      }
      if (customerName_ != null) {
        size += _single_customerName_codec.CalculateSizeWithTag(CustomerName);
      }
      if (customerPhone_ != null) {
        size += _single_customerPhone_codec.CalculateSizeWithTag(CustomerPhone);
      }
      if (customerEmail_ != null) {
        size += _single_customerEmail_codec.CalculateSizeWithTag(CustomerEmail);
      }
      if (cId_ != null) {
        size += _single_cId_codec.CalculateSizeWithTag(CId);
      }
      if (contractId_ != null) {
        size += _single_contractId_codec.CalculateSizeWithTag(ContractId);
      }
      if (customerCode_ != null) {
        size += _single_customerCode_codec.CalculateSizeWithTag(CustomerCode);
      }
      if (service_ != null) {
        size += _single_service_codec.CalculateSizeWithTag(Service);
      }
      if (servicePackage_ != null) {
        size += _single_servicePackage_codec.CalculateSizeWithTag(ServicePackage);
      }
      if (address_ != null) {
        size += _single_address_codec.CalculateSizeWithTag(Address);
      }
      if (iPAddress_ != null) {
        size += _single_iPAddress_codec.CalculateSizeWithTag(IPAddress);
      }
      if (title_ != null) {
        size += _single_title_codec.CalculateSizeWithTag(Title);
      }
      if (content_ != null) {
        size += _single_content_codec.CalculateSizeWithTag(Content);
      }
      if (note_ != null) {
        size += _single_note_codec.CalculateSizeWithTag(Note);
      }
      if (dateCreated_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DateCreated);
      }
      if (dateUpdated_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DateUpdated);
      }
      if (dateRequested_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DateRequested);
      }
      if (source_ != null) {
        size += _single_source_codec.CalculateSizeWithTag(Source);
      }
      if (outContractServicePackageId_ != null) {
        size += _single_outContractServicePackageId_codec.CalculateSizeWithTag(OutContractServicePackageId);
      }
      if (contractCode_ != null) {
        size += _single_contractCode_codec.CalculateSizeWithTag(ContractCode);
      }
      if (Handled != false) {
        size += 2 + 1;
      }
      if (customerRate_ != null) {
        size += _single_customerRate_codec.CalculateSizeWithTag(CustomerRate);
      }
      if (customerComment_ != null) {
        size += _single_customerComment_codec.CalculateSizeWithTag(CustomerComment);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (startTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (stopTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StopTime);
      }
      if (globalId_ != null) {
        size += _single_globalId_codec.CalculateSizeWithTag(GlobalId);
      }
      if (duration_ != null) {
        size += _single_duration_codec.CalculateSizeWithTag(Duration);
      }
      if (requestCode_ != null) {
        size += _single_requestCode_codec.CalculateSizeWithTag(RequestCode);
      }
      if (city_ != null) {
        size += _single_city_codec.CalculateSizeWithTag(City);
      }
      if (district_ != null) {
        size += _single_district_codec.CalculateSizeWithTag(District);
      }
      if (updateFrom_ != null) {
        size += _single_updateFrom_codec.CalculateSizeWithTag(UpdateFrom);
      }
      if (customerIdentityGuid_ != null) {
        size += _single_customerIdentityGuid_codec.CalculateSizeWithTag(CustomerIdentityGuid);
      }
      if (contractorId_ != null) {
        size += _single_contractorId_codec.CalculateSizeWithTag(ContractorId);
      }
      if (channelText_ != null) {
        size += _single_channelText_codec.CalculateSizeWithTag(ChannelText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedbackAndRequestDTOGrpc other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != "") {
          Id = other.Id;
        }
      }
      if (other.status_ != null) {
        if (status_ == null || other.Status != 0) {
          Status = other.Status;
        }
      }
      if (other.customerId_ != null) {
        if (customerId_ == null || other.CustomerId != "") {
          CustomerId = other.CustomerId;
        }
      }
      if (other.customerName_ != null) {
        if (customerName_ == null || other.CustomerName != "") {
          CustomerName = other.CustomerName;
        }
      }
      if (other.customerPhone_ != null) {
        if (customerPhone_ == null || other.CustomerPhone != "") {
          CustomerPhone = other.CustomerPhone;
        }
      }
      if (other.customerEmail_ != null) {
        if (customerEmail_ == null || other.CustomerEmail != "") {
          CustomerEmail = other.CustomerEmail;
        }
      }
      if (other.cId_ != null) {
        if (cId_ == null || other.CId != "") {
          CId = other.CId;
        }
      }
      if (other.contractId_ != null) {
        if (contractId_ == null || other.ContractId != "") {
          ContractId = other.ContractId;
        }
      }
      if (other.customerCode_ != null) {
        if (customerCode_ == null || other.CustomerCode != "") {
          CustomerCode = other.CustomerCode;
        }
      }
      if (other.service_ != null) {
        if (service_ == null || other.Service != "") {
          Service = other.Service;
        }
      }
      if (other.servicePackage_ != null) {
        if (servicePackage_ == null || other.ServicePackage != "") {
          ServicePackage = other.ServicePackage;
        }
      }
      if (other.address_ != null) {
        if (address_ == null || other.Address != "") {
          Address = other.Address;
        }
      }
      if (other.iPAddress_ != null) {
        if (iPAddress_ == null || other.IPAddress != "") {
          IPAddress = other.IPAddress;
        }
      }
      if (other.title_ != null) {
        if (title_ == null || other.Title != "") {
          Title = other.Title;
        }
      }
      if (other.content_ != null) {
        if (content_ == null || other.Content != "") {
          Content = other.Content;
        }
      }
      if (other.note_ != null) {
        if (note_ == null || other.Note != "") {
          Note = other.Note;
        }
      }
      if (other.dateCreated_ != null) {
        if (dateCreated_ == null) {
          DateCreated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DateCreated.MergeFrom(other.DateCreated);
      }
      if (other.dateUpdated_ != null) {
        if (dateUpdated_ == null) {
          DateUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DateUpdated.MergeFrom(other.DateUpdated);
      }
      if (other.dateRequested_ != null) {
        if (dateRequested_ == null) {
          DateRequested = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DateRequested.MergeFrom(other.DateRequested);
      }
      if (other.source_ != null) {
        if (source_ == null || other.Source != "") {
          Source = other.Source;
        }
      }
      if (other.outContractServicePackageId_ != null) {
        if (outContractServicePackageId_ == null || other.OutContractServicePackageId != 0) {
          OutContractServicePackageId = other.OutContractServicePackageId;
        }
      }
      if (other.contractCode_ != null) {
        if (contractCode_ == null || other.ContractCode != "") {
          ContractCode = other.ContractCode;
        }
      }
      if (other.Handled != false) {
        Handled = other.Handled;
      }
      if (other.customerRate_ != null) {
        if (customerRate_ == null || other.CustomerRate != 0D) {
          CustomerRate = other.CustomerRate;
        }
      }
      if (other.customerComment_ != null) {
        if (customerComment_ == null || other.CustomerComment != "") {
          CustomerComment = other.CustomerComment;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.stopTime_ != null) {
        if (stopTime_ == null) {
          StopTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StopTime.MergeFrom(other.StopTime);
      }
      if (other.globalId_ != null) {
        if (globalId_ == null || other.GlobalId != "") {
          GlobalId = other.GlobalId;
        }
      }
      if (other.duration_ != null) {
        if (duration_ == null || other.Duration != 0L) {
          Duration = other.Duration;
        }
      }
      if (other.requestCode_ != null) {
        if (requestCode_ == null || other.RequestCode != "") {
          RequestCode = other.RequestCode;
        }
      }
      if (other.city_ != null) {
        if (city_ == null || other.City != "") {
          City = other.City;
        }
      }
      if (other.district_ != null) {
        if (district_ == null || other.District != "") {
          District = other.District;
        }
      }
      if (other.updateFrom_ != null) {
        if (updateFrom_ == null || other.UpdateFrom != "") {
          UpdateFrom = other.UpdateFrom;
        }
      }
      if (other.customerIdentityGuid_ != null) {
        if (customerIdentityGuid_ == null || other.CustomerIdentityGuid != "") {
          CustomerIdentityGuid = other.CustomerIdentityGuid;
        }
      }
      if (other.contractorId_ != null) {
        if (contractorId_ == null || other.ContractorId != 0) {
          ContractorId = other.ContractorId;
        }
      }
      if (other.channelText_ != null) {
        if (channelText_ == null || other.ChannelText != "") {
          ChannelText = other.ChannelText;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_id_codec.Read(input);
            if (id_ == null || value != "") {
              Id = value;
            }
            break;
          }
          case 18: {
            int? value = _single_status_codec.Read(input);
            if (status_ == null || value != 0) {
              Status = value;
            }
            break;
          }
          case 26: {
            string value = _single_customerId_codec.Read(input);
            if (customerId_ == null || value != "") {
              CustomerId = value;
            }
            break;
          }
          case 34: {
            string value = _single_customerName_codec.Read(input);
            if (customerName_ == null || value != "") {
              CustomerName = value;
            }
            break;
          }
          case 42: {
            string value = _single_customerPhone_codec.Read(input);
            if (customerPhone_ == null || value != "") {
              CustomerPhone = value;
            }
            break;
          }
          case 50: {
            string value = _single_customerEmail_codec.Read(input);
            if (customerEmail_ == null || value != "") {
              CustomerEmail = value;
            }
            break;
          }
          case 58: {
            string value = _single_cId_codec.Read(input);
            if (cId_ == null || value != "") {
              CId = value;
            }
            break;
          }
          case 66: {
            string value = _single_contractId_codec.Read(input);
            if (contractId_ == null || value != "") {
              ContractId = value;
            }
            break;
          }
          case 74: {
            string value = _single_customerCode_codec.Read(input);
            if (customerCode_ == null || value != "") {
              CustomerCode = value;
            }
            break;
          }
          case 82: {
            string value = _single_service_codec.Read(input);
            if (service_ == null || value != "") {
              Service = value;
            }
            break;
          }
          case 90: {
            string value = _single_servicePackage_codec.Read(input);
            if (servicePackage_ == null || value != "") {
              ServicePackage = value;
            }
            break;
          }
          case 98: {
            string value = _single_address_codec.Read(input);
            if (address_ == null || value != "") {
              Address = value;
            }
            break;
          }
          case 106: {
            string value = _single_iPAddress_codec.Read(input);
            if (iPAddress_ == null || value != "") {
              IPAddress = value;
            }
            break;
          }
          case 114: {
            string value = _single_title_codec.Read(input);
            if (title_ == null || value != "") {
              Title = value;
            }
            break;
          }
          case 122: {
            string value = _single_content_codec.Read(input);
            if (content_ == null || value != "") {
              Content = value;
            }
            break;
          }
          case 130: {
            string value = _single_note_codec.Read(input);
            if (note_ == null || value != "") {
              Note = value;
            }
            break;
          }
          case 138: {
            if (dateCreated_ == null) {
              DateCreated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DateCreated);
            break;
          }
          case 146: {
            if (dateUpdated_ == null) {
              DateUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DateUpdated);
            break;
          }
          case 154: {
            if (dateRequested_ == null) {
              DateRequested = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DateRequested);
            break;
          }
          case 170: {
            string value = _single_source_codec.Read(input);
            if (source_ == null || value != "") {
              Source = value;
            }
            break;
          }
          case 178: {
            int? value = _single_outContractServicePackageId_codec.Read(input);
            if (outContractServicePackageId_ == null || value != 0) {
              OutContractServicePackageId = value;
            }
            break;
          }
          case 186: {
            string value = _single_contractCode_codec.Read(input);
            if (contractCode_ == null || value != "") {
              ContractCode = value;
            }
            break;
          }
          case 192: {
            Handled = input.ReadBool();
            break;
          }
          case 202: {
            double? value = _single_customerRate_codec.Read(input);
            if (customerRate_ == null || value != 0D) {
              CustomerRate = value;
            }
            break;
          }
          case 210: {
            string value = _single_customerComment_codec.Read(input);
            if (customerComment_ == null || value != "") {
              CustomerComment = value;
            }
            break;
          }
          case 218: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 226: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 234: {
            if (stopTime_ == null) {
              StopTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StopTime);
            break;
          }
          case 242: {
            string value = _single_globalId_codec.Read(input);
            if (globalId_ == null || value != "") {
              GlobalId = value;
            }
            break;
          }
          case 250: {
            long? value = _single_duration_codec.Read(input);
            if (duration_ == null || value != 0L) {
              Duration = value;
            }
            break;
          }
          case 258: {
            string value = _single_requestCode_codec.Read(input);
            if (requestCode_ == null || value != "") {
              RequestCode = value;
            }
            break;
          }
          case 266: {
            string value = _single_city_codec.Read(input);
            if (city_ == null || value != "") {
              City = value;
            }
            break;
          }
          case 274: {
            string value = _single_district_codec.Read(input);
            if (district_ == null || value != "") {
              District = value;
            }
            break;
          }
          case 282: {
            string value = _single_updateFrom_codec.Read(input);
            if (updateFrom_ == null || value != "") {
              UpdateFrom = value;
            }
            break;
          }
          case 290: {
            string value = _single_customerIdentityGuid_codec.Read(input);
            if (customerIdentityGuid_ == null || value != "") {
              CustomerIdentityGuid = value;
            }
            break;
          }
          case 298: {
            int? value = _single_contractorId_codec.Read(input);
            if (contractorId_ == null || value != 0) {
              ContractorId = value;
            }
            break;
          }
          case 306: {
            string value = _single_channelText_codec.Read(input);
            if (channelText_ == null || value != "") {
              ChannelText = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
