// <auto-generated />
using System;
using ContractManagement.RadiusDomain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContractManagement.RadiusDomain.Migrations
{
    [DbContext(typeof(RadiusContext))]
    [Migration("20201012042127_Initial_Database_Schema")]
    partial class Initial_Database_Schema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.Nas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(10)");

                    b.Property<string>("Apipassword")
                        .IsRequired()
                        .HasColumnName("apipassword")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Apiusername")
                        .IsRequired()
                        .HasColumnName("apiusername")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Ciscobwmode")
                        .HasColumnName("ciscobwmode")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Community")
                        .HasColumnName("community")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description")
                        .HasColumnType("varchar(200)")
                        .HasDefaultValueSql("'RADIUS Client'")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Enableapi")
                        .HasColumnName("enableapi")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nasname")
                        .IsRequired()
                        .HasColumnName("nasname")
                        .HasColumnType("varchar(128)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int?>("Ports")
                        .HasColumnName("ports")
                        .HasColumnType("int(5)");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("secret")
                        .HasColumnType("varchar(60)")
                        .HasDefaultValueSql("'secret'")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Shortname")
                        .HasColumnName("shortname")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Starospassword")
                        .IsRequired()
                        .HasColumnName("starospassword")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("type")
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("'other'")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Nasname")
                        .HasName("nasname");

                    b.ToTable("nas");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.Radacct", b =>
                {
                    b.Property<long>("Radacctid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("radacctid")
                        .HasColumnType("bigint(21)");

                    b.Property<string>("Acctauthentic")
                        .HasColumnName("acctauthentic")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<long?>("Acctinputoctets")
                        .HasColumnName("acctinputoctets")
                        .HasColumnType("bigint(20)");

                    b.Property<long?>("Acctoutputoctets")
                        .HasColumnName("acctoutputoctets")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Acctsessionid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("acctsessionid")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int?>("Acctsessiontime")
                        .HasColumnName("acctsessiontime")
                        .HasColumnType("int(12)");

                    b.Property<int?>("Acctstartdelay")
                        .HasColumnName("acctstartdelay")
                        .HasColumnType("int(12)");

                    b.Property<DateTime?>("Acctstarttime")
                        .HasColumnName("acctstarttime")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Acctstopdelay")
                        .HasColumnName("acctstopdelay")
                        .HasColumnType("int(12)");

                    b.Property<DateTime?>("Acctstoptime")
                        .HasColumnName("acctstoptime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Acctterminatecause")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("acctterminatecause")
                        .HasColumnType("varchar(32)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime?>("Accttime")
                        .HasColumnName("_accttime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Acctuniqueid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("acctuniqueid")
                        .HasColumnType("varchar(32)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int?>("Apid")
                        .HasColumnName("_apid")
                        .HasColumnType("int(11)");

                    b.Property<string>("Calledstationid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("calledstationid")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Callingstationid")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("callingstationid")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("ConnectinfoStart")
                        .HasColumnName("connectinfo_start")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("ConnectinfoStop")
                        .HasColumnName("connectinfo_stop")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte?>("Dailynextsrvactive")
                        .HasColumnName("_dailynextsrvactive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Framedipaddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("framedipaddress")
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Framedprotocol")
                        .HasColumnName("framedprotocol")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Groupname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("groupname")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Nasipaddress")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nasipaddress")
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Nasportid")
                        .HasColumnName("nasportid")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Nasporttype")
                        .HasColumnName("nasporttype")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Realm")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("realm")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Servicetype")
                        .HasColumnName("servicetype")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int?>("Srvid")
                        .HasColumnName("_srvid")
                        .HasColumnType("int(11)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Xascendsessionsvrkey")
                        .HasColumnName("xascendsessionsvrkey")
                        .HasColumnType("varchar(10)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Radacctid");

                    b.HasIndex("Acctsessionid")
                        .HasName("acctsessionid");

                    b.HasIndex("Acctsessiontime")
                        .HasName("acctsessiontime");

                    b.HasIndex("Acctstarttime")
                        .HasName("acctstarttime");

                    b.HasIndex("Acctstoptime")
                        .HasName("acctstoptime");

                    b.HasIndex("Accttime")
                        .HasName("_AcctTime");

                    b.HasIndex("Acctuniqueid")
                        .HasName("acctuniqueid");

                    b.HasIndex("Callingstationid")
                        .HasName("callingstationid");

                    b.HasIndex("Framedipaddress")
                        .HasName("framedipaddress");

                    b.HasIndex("Nasipaddress")
                        .HasName("nasipaddress");

                    b.HasIndex("Username")
                        .HasName("username");

                    b.ToTable("radacct");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.Radcheck", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11) unsigned");

                    b.Property<string>("Attribute")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("attribute")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Op")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("op")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("'=='")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Username")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Value")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("value")
                        .HasColumnType("varchar(253)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .HasName("username");

                    b.ToTable("radcheck");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.Radgroupcheck", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11) unsigned");

                    b.Property<string>("Attribute")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("attribute")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Groupname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("groupname")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Op")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("op")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("'=='")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Value")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("value")
                        .HasColumnType("varchar(253)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Groupname")
                        .HasName("groupname");

                    b.ToTable("radgroupcheck");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.Radgroupreply", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11) unsigned");

                    b.Property<string>("Attribute")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("attribute")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Groupname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("groupname")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Op")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("op")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("'='")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Value")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("value")
                        .HasColumnType("varchar(253)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Groupname")
                        .HasName("groupname");

                    b.ToTable("radgroupreply");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.Radippool", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11) unsigned");

                    b.Property<string>("Calledstationid")
                        .IsRequired()
                        .HasColumnName("calledstationid")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Callingstationid")
                        .IsRequired()
                        .HasColumnName("callingstationid")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime?>("ExpiryTime")
                        .HasColumnName("expiry_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Framedipaddress")
                        .IsRequired()
                        .HasColumnName("framedipaddress")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Nasipaddress")
                        .IsRequired()
                        .HasColumnName("nasipaddress")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("PoolKey")
                        .IsRequired()
                        .HasColumnName("pool_key")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("PoolName")
                        .IsRequired()
                        .HasColumnName("pool_name")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.ToTable("radippool");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.Radpostauth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("Authdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("authdate")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nasipaddress")
                        .IsRequired()
                        .HasColumnName("nasipaddress")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pass")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Reply")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reply")
                        .HasColumnType("varchar(32)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Username")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Authdate")
                        .HasName("authdate");

                    b.HasIndex("Nasipaddress")
                        .HasName("nasipaddress");

                    b.HasIndex("Username")
                        .HasName("username");

                    b.ToTable("radpostauth");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.Radreply", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11) unsigned");

                    b.Property<string>("Attribute")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("attribute")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Op")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("op")
                        .HasColumnType("char(2)")
                        .HasDefaultValueSql("'='")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Username")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Value")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("value")
                        .HasColumnType("varchar(253)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .HasName("username");

                    b.ToTable("radreply");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.Radusergroup", b =>
                {
                    b.Property<string>("Groupname")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("groupname")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("priority")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Username")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasIndex("Username")
                        .HasName("username");

                    b.ToTable("radusergroup");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmActsrv", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20)");

                    b.Property<sbyte>("Dailynextsrvactive")
                        .HasColumnName("dailynextsrvactive")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Datetime")
                        .HasColumnName("datetime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Srvid")
                        .HasColumnName("srvid")
                        .HasColumnType("int(11)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Datetime")
                        .HasName("datetime");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("id");

                    b.HasIndex("Username")
                        .HasName("username");

                    b.ToTable("rm_actsrv");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmAllowedmanagers", b =>
                {
                    b.Property<string>("Managername")
                        .IsRequired()
                        .HasColumnName("managername")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Srvid")
                        .HasColumnName("srvid")
                        .HasColumnType("int(11)");

                    b.HasIndex("Managername")
                        .HasName("managername");

                    b.HasIndex("Srvid")
                        .HasName("srvid");

                    b.ToTable("rm_allowedmanagers");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmAllowednases", b =>
                {
                    b.Property<int>("Nasid")
                        .HasColumnName("nasid")
                        .HasColumnType("int(11)");

                    b.Property<int>("Srvid")
                        .HasColumnName("srvid")
                        .HasColumnType("int(11)");

                    b.HasIndex("Nasid")
                        .HasName("nasid");

                    b.HasIndex("Srvid")
                        .HasName("srvid");

                    b.ToTable("rm_allowednases");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmAp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Accessmode")
                        .HasColumnName("accessmode")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Apipassword")
                        .IsRequired()
                        .HasColumnName("apipassword")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Apiusername")
                        .IsRequired()
                        .HasColumnName("apiusername")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Community")
                        .IsRequired()
                        .HasColumnName("community")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("varchar(200)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Enable")
                        .HasColumnName("enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnName("ip")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Ip")
                        .HasName("ip");

                    b.ToTable("rm_ap");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmCards", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint(20)");

                    b.Property<sbyte>("Active")
                        .HasColumnName("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cardnum")
                        .IsRequired()
                        .HasColumnName("cardnum")
                        .HasColumnType("varchar(16)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Cardtype")
                        .HasColumnName("cardtype")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Comblimit")
                        .HasColumnName("comblimit")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<long>("Downlimit")
                        .HasColumnName("downlimit")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnName("expiration")
                        .HasColumnType("date");

                    b.Property<long>("Expiretime")
                        .HasColumnName("expiretime")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnName("owner")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(8)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Revoked")
                        .HasColumnName("revoked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasColumnName("series")
                        .HasColumnType("varchar(16)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Srvid")
                        .HasColumnName("srvid")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Timebaseexp")
                        .HasColumnName("timebaseexp")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Timebaseonline")
                        .HasColumnName("timebaseonline")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Transid")
                        .IsRequired()
                        .HasColumnName("transid")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<long>("Uplimit")
                        .HasColumnName("uplimit")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("Uptimelimit")
                        .HasColumnName("uptimelimit")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Used")
                        .HasColumnName("used")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Value")
                        .HasColumnName("value")
                        .HasColumnType("decimal(22,2)");

                    b.HasKey("Id");

                    b.HasIndex("Cardnum")
                        .IsUnique()
                        .HasName("cardnum");

                    b.HasIndex("Owner")
                        .HasName("owner");

                    b.HasIndex("Series")
                        .HasName("series");

                    b.HasIndex("Used")
                        .HasName("used");

                    b.ToTable("rm_cards");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmChangesrv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("Newsrvid")
                        .HasColumnName("newsrvid")
                        .HasColumnType("int(11)");

                    b.Property<string>("Newsrvname")
                        .IsRequired()
                        .HasColumnName("newsrvname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("Requestdate")
                        .HasColumnName("requestdate")
                        .HasColumnType("date");

                    b.Property<string>("Requested")
                        .IsRequired()
                        .HasColumnName("requested")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("Scheduledate")
                        .HasColumnName("scheduledate")
                        .HasColumnType("date");

                    b.Property<sbyte>("Status")
                        .HasColumnName("status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Transid")
                        .IsRequired()
                        .HasColumnName("transid")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Requestdate")
                        .HasName("requestdate");

                    b.HasIndex("Scheduledate")
                        .HasName("scheduledate");

                    b.ToTable("rm_changesrv");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmCmts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Community")
                        .IsRequired()
                        .HasColumnName("community")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasColumnName("descr")
                        .HasColumnType("varchar(200)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnName("ip")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Ip")
                        .HasName("ip");

                    b.ToTable("rm_cmts");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmColsetlistdocsis", b =>
                {
                    b.Property<string>("Colname")
                        .IsRequired()
                        .HasColumnName("colname")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Managername")
                        .IsRequired()
                        .HasColumnName("managername")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasIndex("Managername")
                        .HasName("managername");

                    b.ToTable("rm_colsetlistdocsis");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmColsetlistradius", b =>
                {
                    b.Property<string>("Colname")
                        .IsRequired()
                        .HasColumnName("colname")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Managername")
                        .IsRequired()
                        .HasColumnName("managername")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasIndex("Managername")
                        .HasName("managername");

                    b.ToTable("rm_colsetlistradius");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmColsetlistusers", b =>
                {
                    b.Property<string>("Colname")
                        .IsRequired()
                        .HasColumnName("colname")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Managername")
                        .IsRequired()
                        .HasColumnName("managername")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasIndex("Managername")
                        .HasName("managername");

                    b.ToTable("rm_colsetlistusers");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmIas", b =>
                {
                    b.Property<int>("Iasid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iasid")
                        .HasColumnType("int(11)");

                    b.Property<long>("Comblimit")
                        .HasColumnName("comblimit")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("Downlimit")
                        .HasColumnName("downlimit")
                        .HasColumnType("bigint(20)");

                    b.Property<sbyte>("Enableias")
                        .HasColumnName("enableias")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnName("expiration")
                        .HasColumnType("date");

                    b.Property<sbyte>("Expiremode")
                        .HasColumnName("expiremode")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Expiretime")
                        .HasColumnName("expiretime")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Iasname")
                        .IsRequired()
                        .HasColumnName("iasname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(20,2)");

                    b.Property<int>("Simuse")
                        .HasColumnName("simuse")
                        .HasColumnType("int(11)");

                    b.Property<int>("Srvid")
                        .HasColumnName("srvid")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Timebaseexp")
                        .HasColumnName("timebaseexp")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Timebaseonline")
                        .HasColumnName("timebaseonline")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Uplimit")
                        .HasColumnName("uplimit")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("Uptimelimit")
                        .HasColumnName("uptimelimit")
                        .HasColumnType("bigint(20)");

                    b.HasKey("Iasid")
                        .HasName("PRIMARY");

                    b.ToTable("rm_ias");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmInvoices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("address")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<decimal>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("decimal(13,2)");

                    b.Property<decimal>("Balance")
                        .HasColumnName("balance")
                        .HasColumnType("decimal(20,2)");

                    b.Property<long>("Bytescomb")
                        .HasColumnName("bytescomb")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("Bytesdl")
                        .HasColumnName("bytesdl")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("Bytesul")
                        .HasColumnName("bytesul")
                        .HasColumnType("bigint(20)");

                    b.Property<sbyte>("Capdate")
                        .HasColumnName("capdate")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Capdl")
                        .HasColumnName("capdl")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Captime")
                        .HasColumnName("captime")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Captotal")
                        .HasColumnName("captotal")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Capul")
                        .HasColumnName("capul")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<long>("Comblimit")
                        .HasColumnName("comblimit")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnName("comment")
                        .HasColumnType("varchar(200)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("Date")
                        .HasColumnName("date")
                        .HasColumnType("date");

                    b.Property<int>("Days")
                        .HasColumnName("days")
                        .HasColumnType("int(6)");

                    b.Property<long>("Downlimit")
                        .HasColumnName("downlimit")
                        .HasColumnType("bigint(20)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnName("expiration")
                        .HasColumnType("date");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnName("fullname")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Gwtransid")
                        .IsRequired()
                        .HasColumnName("gwtransid")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Invgroup")
                        .HasColumnName("invgroup")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Invnum")
                        .IsRequired()
                        .HasColumnName("invnum")
                        .HasColumnType("varchar(16)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Invtype")
                        .HasColumnName("invtype")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Managername")
                        .IsRequired()
                        .HasColumnName("managername")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnName("mobile")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("Paid")
                        .HasColumnName("paid")
                        .HasColumnType("date");

                    b.Property<DateTime>("Paymentopt")
                        .HasColumnName("paymentopt")
                        .HasColumnType("date");

                    b.Property<sbyte>("Paymode")
                        .HasColumnName("paymode")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("phone")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(25,6)");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnName("remark")
                        .HasColumnType("varchar(400)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnName("service")
                        .HasColumnType("varchar(60)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("state")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<decimal>("Tax")
                        .HasColumnName("tax")
                        .HasColumnType("decimal(25,6)");

                    b.Property<string>("Taxid")
                        .IsRequired()
                        .HasColumnName("taxid")
                        .HasColumnType("varchar(40)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Time")
                        .HasColumnName("time")
                        .HasColumnType("int(11)");

                    b.Property<string>("Transid")
                        .IsRequired()
                        .HasColumnName("transid")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<long>("Uplimit")
                        .HasColumnName("uplimit")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("Uptimelimit")
                        .HasColumnName("uptimelimit")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<decimal>("Vatpercent")
                        .HasColumnName("vatpercent")
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnName("zip")
                        .HasColumnType("varchar(8)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Comment")
                        .HasName("comment");

                    b.HasIndex("Date")
                        .HasName("date");

                    b.HasIndex("Gwtransid")
                        .HasName("gwtransid");

                    b.HasIndex("Invgroup")
                        .HasName("invgroup");

                    b.HasIndex("Invnum")
                        .HasName("invnum");

                    b.HasIndex("Managername")
                        .HasName("managername");

                    b.HasIndex("Paid")
                        .HasName("paid");

                    b.HasIndex("Paymode")
                        .HasName("paymode");

                    b.HasIndex("Username")
                        .HasName("username");

                    b.ToTable("rm_invoices");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmIppools", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasColumnName("descr")
                        .HasColumnType("varchar(200)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Fromip")
                        .IsRequired()
                        .HasColumnName("fromip")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Nextpoolid")
                        .HasColumnName("nextpoolid")
                        .HasColumnType("int(11)");

                    b.Property<string>("Toip")
                        .IsRequired()
                        .HasColumnName("toip")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Type")
                        .HasColumnName("type")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasName("name");

                    b.HasIndex("Nextpoolid")
                        .HasName("nextid");

                    b.ToTable("rm_ippools");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmManagers", b =>
                {
                    b.Property<string>("Managername")
                        .HasColumnName("managername")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("address")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<decimal>("Balance")
                        .HasColumnName("balance")
                        .HasColumnType("decimal(20,2)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnName("comment")
                        .HasColumnType("varchar(200)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnName("company")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Enablemanager")
                        .HasColumnName("enablemanager")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnName("firstname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnName("lang")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnName("lastname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnName("mobile")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("PermAccessap")
                        .HasColumnName("perm_accessap")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermAddcredits")
                        .HasColumnName("perm_addcredits")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermAllowdiscount")
                        .HasColumnName("perm_allowdiscount")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermAllusers")
                        .HasColumnName("perm_allusers")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermCardsys")
                        .HasColumnName("perm_cardsys")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermCreatemanagers")
                        .HasColumnName("perm_createmanagers")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermCreateservices")
                        .HasColumnName("perm_createservices")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermCreateusers")
                        .HasColumnName("perm_createusers")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermCts")
                        .HasColumnName("perm_cts")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermDeletemanagers")
                        .HasColumnName("perm_deletemanagers")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermDeleteservices")
                        .HasColumnName("perm_deleteservices")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermDeleteusers")
                        .HasColumnName("perm_deleteusers")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermEditinvoice")
                        .HasColumnName("perm_editinvoice")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermEditmanagers")
                        .HasColumnName("perm_editmanagers")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermEditservices")
                        .HasColumnName("perm_editservices")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermEditusers")
                        .HasColumnName("perm_editusers")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermEdituserspriv")
                        .HasColumnName("perm_edituserspriv")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermEnwriteoff")
                        .HasColumnName("perm_enwriteoff")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermListallinvoices")
                        .HasColumnName("perm_listallinvoices")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermListinvoices")
                        .HasColumnName("perm_listinvoices")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermListmanagers")
                        .HasColumnName("perm_listmanagers")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermListonlineusers")
                        .HasColumnName("perm_listonlineusers")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermListservices")
                        .HasColumnName("perm_listservices")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermListusers")
                        .HasColumnName("perm_listusers")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermLogout")
                        .HasColumnName("perm_logout")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermNegbalance")
                        .HasColumnName("perm_negbalance")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermShowinvtotals")
                        .HasColumnName("perm_showinvtotals")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PermTrafficreport")
                        .HasColumnName("perm_trafficreport")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("phone")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("state")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Vatid")
                        .IsRequired()
                        .HasColumnName("vatid")
                        .HasColumnType("varchar(40)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnName("zip")
                        .HasColumnType("varchar(8)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Managername")
                        .HasName("PRIMARY");

                    b.ToTable("rm_managers");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmNewusers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Actcode")
                        .IsRequired()
                        .HasColumnName("actcode")
                        .HasColumnType("varchar(10)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Actcount")
                        .HasColumnName("actcount")
                        .HasColumnType("int(11)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("address")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnName("firstname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnName("lang")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnName("lastname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnName("mobile")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("phone")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Srvid")
                        .HasColumnName("srvid")
                        .HasColumnType("int(11)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("state")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Vatid")
                        .IsRequired()
                        .HasColumnName("vatid")
                        .HasColumnType("varchar(40)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnName("zip")
                        .HasColumnType("varchar(8)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.ToTable("rm_newusers");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmOnlinecm", b =>
                {
                    b.Property<string>("Username")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("''")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int?>("Cmtsid")
                        .HasColumnName("cmtsid")
                        .HasColumnType("int(11)");

                    b.Property<sbyte?>("Enableuser")
                        .HasColumnName("enableuser")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Groupid")
                        .HasColumnName("groupid")
                        .HasColumnType("int(11)");

                    b.Property<string>("Groupname")
                        .HasColumnName("groupname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int?>("Ifidx")
                        .HasColumnName("ifidx")
                        .HasColumnType("int(11)");

                    b.Property<string>("Ipcpe")
                        .HasColumnName("ipcpe")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte?>("Ipmodecpe")
                        .HasColumnName("ipmodecpe")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Maccm")
                        .HasColumnName("maccm")
                        .HasColumnType("varchar(17)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Maccpe")
                        .HasColumnName("maccpe")
                        .HasColumnType("varchar(17)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<decimal?>("Pingtime")
                        .HasColumnName("pingtime")
                        .HasColumnType("decimal(11,1)");

                    b.Property<decimal?>("Rxpwr")
                        .HasColumnName("rxpwr")
                        .HasColumnType("decimal(11,1)");

                    b.Property<decimal?>("Snrds")
                        .HasColumnName("snrds")
                        .HasColumnType("decimal(11,1)");

                    b.Property<decimal?>("Snrus")
                        .HasColumnName("snrus")
                        .HasColumnType("decimal(11,1)");

                    b.Property<string>("Staticipcm")
                        .HasColumnName("staticipcm")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal?>("Txpwr")
                        .HasColumnName("txpwr")
                        .HasColumnType("decimal(11,1)");

                    b.Property<string>("Upstreamname")
                        .HasColumnName("upstreamname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Username")
                        .HasName("PRIMARY");

                    b.HasIndex("Groupname")
                        .HasName("groupname");

                    b.HasIndex("Ipcpe")
                        .HasName("ipcpe");

                    b.HasIndex("Maccm")
                        .HasName("maccm");

                    b.HasIndex("Staticipcm")
                        .HasName("staticipcm");

                    b.ToTable("rm_onlinecm");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmPhpsess", b =>
                {
                    b.Property<sbyte>("Closed")
                        .HasColumnName("closed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnName("ip")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("Lastact")
                        .HasColumnName("lastact")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Managername")
                        .IsRequired()
                        .HasColumnName("managername")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Sessid")
                        .IsRequired()
                        .HasColumnName("sessid")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasIndex("Managername")
                        .HasName("managername");

                    b.ToTable("rm_phpsess");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmRadacct", b =>
                {
                    b.Property<int>("Acctsessiontime")
                        .HasColumnName("acctsessiontime")
                        .HasColumnType("int(12)");

                    b.Property<decimal>("Acctsessiontimeratio")
                        .HasColumnName("acctsessiontimeratio")
                        .HasColumnType("decimal(3,2)");

                    b.Property<DateTime>("Acctstarttime")
                        .HasColumnName("acctstarttime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Acctstoptime")
                        .HasColumnName("acctstoptime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Acctuniqueid")
                        .IsRequired()
                        .HasColumnName("acctuniqueid")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<long>("Dlbytes")
                        .HasColumnName("dlbytes")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("Dlbytesstart")
                        .HasColumnName("dlbytesstart")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("Dlbytesstop")
                        .HasColumnName("dlbytesstop")
                        .HasColumnType("bigint(20)");

                    b.Property<decimal>("Dlratio")
                        .HasColumnName("dlratio")
                        .HasColumnType("decimal(3,2)");

                    b.Property<long>("Radacctid")
                        .HasColumnName("radacctid")
                        .HasColumnType("bigint(21)");

                    b.Property<long>("Ulbytes")
                        .HasColumnName("ulbytes")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("Ulbytesstart")
                        .HasColumnName("ulbytesstart")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("Ulbytesstop")
                        .HasColumnName("ulbytesstop")
                        .HasColumnType("bigint(20)");

                    b.Property<decimal>("Ulratio")
                        .HasColumnName("ulratio")
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasIndex("Acctstarttime")
                        .HasName("acctstarttime");

                    b.HasIndex("Acctstoptime")
                        .HasName("acctstoptime");

                    b.HasIndex("Acctuniqueid")
                        .HasName("acctuniqueid");

                    b.HasIndex("Radacctid")
                        .HasName("radacctid");

                    b.HasIndex("Username")
                        .HasName("username");

                    b.ToTable("rm_radacct");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmServices", b =>
                {
                    b.Property<int>("Srvid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("srvid")
                        .HasColumnType("int(11)");

                    b.Property<int>("Addamount")
                        .HasColumnName("addamount")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Advcmcfg")
                        .HasColumnName("advcmcfg")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Availucp")
                        .HasColumnName("availucp")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Carryover")
                        .HasColumnName("carryover")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cmcfg")
                        .IsRequired()
                        .HasColumnName("cmcfg")
                        .HasColumnType("varchar(10240)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<long>("Combquota")
                        .HasColumnName("combquota")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Custattr")
                        .IsRequired()
                        .HasColumnName("custattr")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Dailynextsrvid")
                        .HasColumnName("dailynextsrvid")
                        .HasColumnType("int(11)");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasColumnName("descr")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Disnextsrvid")
                        .HasColumnName("disnextsrvid")
                        .HasColumnType("int(11)");

                    b.Property<int>("Dlburstlimit")
                        .HasColumnName("dlburstlimit")
                        .HasColumnType("int(11)");

                    b.Property<int>("Dlburstthreshold")
                        .HasColumnName("dlburstthreshold")
                        .HasColumnType("int(11)");

                    b.Property<int>("Dlbursttime")
                        .HasColumnName("dlbursttime")
                        .HasColumnType("int(11)");

                    b.Property<long>("Dlquota")
                        .HasColumnName("dlquota")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Downrate")
                        .HasColumnName("downrate")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Enableburst")
                        .HasColumnName("enableburst")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Enableservice")
                        .HasColumnName("enableservice")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Enaddcredits")
                        .HasColumnName("enaddcredits")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Gentftp")
                        .HasColumnName("gentftp")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Ignstatip")
                        .HasColumnName("ignstatip")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Initdl")
                        .HasColumnName("initdl")
                        .HasColumnType("int(11)");

                    b.Property<int>("Inittimeexp")
                        .HasColumnName("inittimeexp")
                        .HasColumnType("int(11)");

                    b.Property<int>("Inittimeonline")
                        .HasColumnName("inittimeonline")
                        .HasColumnType("int(11)");

                    b.Property<int>("Inittotal")
                        .HasColumnName("inittotal")
                        .HasColumnType("int(11)");

                    b.Property<int>("Initul")
                        .HasColumnName("initul")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Limitcomb")
                        .HasColumnName("limitcomb")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Limitdl")
                        .HasColumnName("limitdl")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Limitexpiration")
                        .HasColumnName("limitexpiration")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Limitul")
                        .HasColumnName("limitul")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Limituptime")
                        .HasColumnName("limituptime")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Minamount")
                        .HasColumnName("minamount")
                        .HasColumnType("int(20)");

                    b.Property<int>("Minamountadd")
                        .HasColumnName("minamountadd")
                        .HasColumnType("int(20)");

                    b.Property<sbyte>("Monthly")
                        .HasColumnName("monthly")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Nextsrvid")
                        .HasColumnName("nextsrvid")
                        .HasColumnType("int(11)");

                    b.Property<string>("Policymapdl")
                        .IsRequired()
                        .HasColumnName("policymapdl")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Policymapul")
                        .IsRequired()
                        .HasColumnName("policymapul")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Poolname")
                        .IsRequired()
                        .HasColumnName("poolname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Pricecalcdownload")
                        .HasColumnName("pricecalcdownload")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Pricecalcupload")
                        .HasColumnName("pricecalcupload")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Pricecalcuptime")
                        .HasColumnName("pricecalcuptime")
                        .HasColumnType("tinyint(1)");

                    b.Property<short>("Priority")
                        .HasColumnName("priority")
                        .HasColumnType("smallint(6)");

                    b.Property<sbyte>("Renew")
                        .HasColumnName("renew")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Resetcounters")
                        .HasColumnName("resetcounters")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Srvname")
                        .IsRequired()
                        .HasColumnName("srvname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Srvtype")
                        .HasColumnName("srvtype")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Timeaddmodeexp")
                        .HasColumnName("timeaddmodeexp")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Timeaddmodeonline")
                        .HasColumnName("timeaddmodeonline")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Timebaseexp")
                        .HasColumnName("timebaseexp")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Timebaseonline")
                        .HasColumnName("timebaseonline")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Timequota")
                        .HasColumnName("timequota")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Timeunitexp")
                        .HasColumnName("timeunitexp")
                        .HasColumnType("int(11)");

                    b.Property<int>("Timeunitonline")
                        .HasColumnName("timeunitonline")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Trafficaddmode")
                        .HasColumnName("trafficaddmode")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Trafficunitcomb")
                        .HasColumnName("trafficunitcomb")
                        .HasColumnType("int(11)");

                    b.Property<int>("Trafficunitdl")
                        .HasColumnName("trafficunitdl")
                        .HasColumnType("int(11)");

                    b.Property<int>("Trafficunitul")
                        .HasColumnName("trafficunitul")
                        .HasColumnType("int(11)");

                    b.Property<int>("Ulburstlimit")
                        .HasColumnName("ulburstlimit")
                        .HasColumnType("int(11)");

                    b.Property<int>("Ulburstthreshold")
                        .HasColumnName("ulburstthreshold")
                        .HasColumnType("int(11)");

                    b.Property<int>("Ulbursttime")
                        .HasColumnName("ulbursttime")
                        .HasColumnType("int(11)");

                    b.Property<long>("Ulquota")
                        .HasColumnName("ulquota")
                        .HasColumnType("bigint(20)");

                    b.Property<decimal>("Unitprice")
                        .HasColumnName("unitprice")
                        .HasColumnType("decimal(25,6)");

                    b.Property<decimal>("Unitpriceadd")
                        .HasColumnName("unitpriceadd")
                        .HasColumnType("decimal(25,6)");

                    b.Property<decimal>("Unitpriceaddtax")
                        .HasColumnName("unitpriceaddtax")
                        .HasColumnType("decimal(25,6)");

                    b.Property<decimal>("Unitpricetax")
                        .HasColumnName("unitpricetax")
                        .HasColumnType("decimal(25,6)");

                    b.Property<int>("Uprate")
                        .HasColumnName("uprate")
                        .HasColumnType("int(11)");

                    b.HasKey("Srvid")
                        .HasName("PRIMARY");

                    b.HasIndex("Srvname")
                        .HasName("srvname");

                    b.ToTable("rm_services");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmSettings", b =>
                {
                    b.Property<sbyte>("Billingstart")
                        .HasColumnName("billingstart")
                        .HasColumnType("tinyint(2)");

                    b.Property<sbyte>("Buycreditsucp")
                        .HasColumnName("buycreditsucp")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Changepswucp")
                        .HasColumnName("changepswucp")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Changesrv")
                        .HasColumnName("changesrv")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnName("currency")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Disableexpcont")
                        .HasColumnName("disableexpcont")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Disablenotpaid")
                        .HasColumnName("disablenotpaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Disconnmethod")
                        .HasColumnName("disconnmethod")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Diskquota")
                        .HasColumnName("diskquota")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Edituserdata")
                        .HasColumnName("edituserdata")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Emailexpiry")
                        .HasColumnName("emailexpiry")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Emailnewsrv")
                        .HasColumnName("emailnewsrv")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Emailrenew")
                        .HasColumnName("emailrenew")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Emailselfregman")
                        .HasColumnName("emailselfregman")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Emailwelcome")
                        .HasColumnName("emailwelcome")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Hidelimits")
                        .HasColumnName("hidelimits")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("IasEmail")
                        .HasColumnName("ias_email")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("IasEndupemail")
                        .HasColumnName("ias_endupemail")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("IasEndupmobile")
                        .HasColumnName("ias_endupmobile")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("IasMobile")
                        .HasColumnName("ias_mobile")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("IasVerify")
                        .HasColumnName("ias_verify")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Maclock")
                        .HasColumnName("maclock")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Newmanallsrv")
                        .HasColumnName("newmanallsrv")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Newnasallsrv")
                        .HasColumnName("newnasallsrv")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Paymentopt")
                        .HasColumnName("paymentopt")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Pm2co")
                        .HasColumnName("pm_2co")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PmAuthorizenet")
                        .HasColumnName("pm_authorizenet")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PmDps")
                        .HasColumnName("pm_dps")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PmInternal")
                        .HasColumnName("pm_internal")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PmPayfast")
                        .HasColumnName("pm_payfast")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PmPaypalexp")
                        .HasColumnName("pm_paypalexp")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PmPaypalpro")
                        .HasColumnName("pm_paypalpro")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PmPaypalstd")
                        .HasColumnName("pm_paypalstd")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("PmSagepay")
                        .HasColumnName("pm_sagepay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Quotatpl")
                        .IsRequired()
                        .HasColumnName("quotatpl")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Redeemucp")
                        .HasColumnName("redeemucp")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Remotehostname")
                        .IsRequired()
                        .HasColumnName("remotehostname")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Renewday")
                        .HasColumnName("renewday")
                        .HasColumnType("tinyint(2)");

                    b.Property<sbyte>("Resetctr")
                        .HasColumnName("resetctr")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Selfreg")
                        .HasColumnName("selfreg")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregAddress")
                        .HasColumnName("selfreg_address")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregCity")
                        .HasColumnName("selfreg_city")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregCountry")
                        .HasColumnName("selfreg_country")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregEmail")
                        .HasColumnName("selfreg_email")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregEndupemail")
                        .HasColumnName("selfreg_endupemail")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregEndupmobile")
                        .HasColumnName("selfreg_endupmobile")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregFirstname")
                        .HasColumnName("selfreg_firstname")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregLastname")
                        .HasColumnName("selfreg_lastname")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregMobactsms")
                        .HasColumnName("selfreg_mobactsms")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregMobile")
                        .HasColumnName("selfreg_mobile")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregNameactemail")
                        .HasColumnName("selfreg_nameactemail")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregNameactsms")
                        .HasColumnName("selfreg_nameactsms")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregPhone")
                        .HasColumnName("selfreg_phone")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregState")
                        .HasColumnName("selfreg_state")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregVatid")
                        .HasColumnName("selfreg_vatid")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("SelfregZip")
                        .HasColumnName("selfreg_zip")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Simuseselfreg")
                        .HasColumnName("simuseselfreg")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Smsexpiry")
                        .HasColumnName("smsexpiry")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Smswelcome")
                        .HasColumnName("smswelcome")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Unixacc")
                        .HasColumnName("unixacc")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Unixhost")
                        .HasColumnName("unixhost")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Vatpercent")
                        .HasColumnName("vatpercent")
                        .HasColumnType("decimal(4,2)");

                    b.Property<long>("Warncomb")
                        .HasColumnName("warncomb")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Warncombpercent")
                        .HasColumnName("warncombpercent")
                        .HasColumnType("int(3)");

                    b.Property<long>("Warndl")
                        .HasColumnName("warndl")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Warndlpercent")
                        .HasColumnName("warndlpercent")
                        .HasColumnType("int(3)");

                    b.Property<int>("Warnexpiry")
                        .HasColumnName("warnexpiry")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Warnmode")
                        .HasColumnName("warnmode")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Warnul")
                        .HasColumnName("warnul")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Warnulpercent")
                        .HasColumnName("warnulpercent")
                        .HasColumnType("int(3)");

                    b.Property<long>("Warnuptime")
                        .HasColumnName("warnuptime")
                        .HasColumnType("bigint(20)");

                    b.Property<int>("Warnuptimepercent")
                        .HasColumnName("warnuptimepercent")
                        .HasColumnType("int(3)");

                    b.ToTable("rm_settings");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmSpecperacnt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Connallowed")
                        .HasColumnName("connallowed")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Dlratio")
                        .HasColumnName("dlratio")
                        .HasColumnType("decimal(3,2)");

                    b.Property<TimeSpan>("Endtime")
                        .HasColumnName("endtime")
                        .HasColumnType("time(6)");

                    b.Property<sbyte>("Fri")
                        .HasColumnName("fri")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Mon")
                        .HasColumnName("mon")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Sat")
                        .HasColumnName("sat")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Srvid")
                        .HasColumnName("srvid")
                        .HasColumnType("int(11)");

                    b.Property<TimeSpan>("Starttime")
                        .HasColumnName("starttime")
                        .HasColumnType("time(6)");

                    b.Property<sbyte>("Sun")
                        .HasColumnName("sun")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Thu")
                        .HasColumnName("thu")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Timeratio")
                        .HasColumnName("timeratio")
                        .HasColumnType("decimal(3,2)");

                    b.Property<sbyte>("Tue")
                        .HasColumnName("tue")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Ulratio")
                        .HasColumnName("ulratio")
                        .HasColumnType("decimal(3,2)");

                    b.Property<sbyte>("Wed")
                        .HasColumnName("wed")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Endtime")
                        .HasName("totime");

                    b.HasIndex("Srvid")
                        .HasName("srvid");

                    b.HasIndex("Starttime")
                        .HasName("fromtime");

                    b.ToTable("rm_specperacnt");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmSpecperbw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("Dlburstlimit")
                        .HasColumnName("dlburstlimit")
                        .HasColumnType("int(11)");

                    b.Property<int>("Dlburstthreshold")
                        .HasColumnName("dlburstthreshold")
                        .HasColumnType("int(11)");

                    b.Property<int>("Dlbursttime")
                        .HasColumnName("dlbursttime")
                        .HasColumnType("int(11)");

                    b.Property<int>("Dlrate")
                        .HasColumnName("dlrate")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Enableburst")
                        .HasColumnName("enableburst")
                        .HasColumnType("tinyint(1)");

                    b.Property<TimeSpan>("Endtime")
                        .HasColumnName("endtime")
                        .HasColumnType("time(6)");

                    b.Property<sbyte>("Fri")
                        .HasColumnName("fri")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Mon")
                        .HasColumnName("mon")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Priority")
                        .HasColumnName("priority")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Sat")
                        .HasColumnName("sat")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Srvid")
                        .HasColumnName("srvid")
                        .HasColumnType("int(11)");

                    b.Property<TimeSpan>("Starttime")
                        .HasColumnName("starttime")
                        .HasColumnType("time(6)");

                    b.Property<sbyte>("Sun")
                        .HasColumnName("sun")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Thu")
                        .HasColumnName("thu")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Tue")
                        .HasColumnName("tue")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Ulburstlimit")
                        .HasColumnName("ulburstlimit")
                        .HasColumnType("int(11)");

                    b.Property<int>("Ulburstthreshold")
                        .HasColumnName("ulburstthreshold")
                        .HasColumnType("int(11)");

                    b.Property<int>("Ulbursttime")
                        .HasColumnName("ulbursttime")
                        .HasColumnType("int(11)");

                    b.Property<int>("Ulrate")
                        .HasColumnName("ulrate")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Wed")
                        .HasColumnName("wed")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("rm_specperbw");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmSyslog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Data1")
                        .IsRequired()
                        .HasColumnName("data1")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("Datetime")
                        .HasColumnName("datetime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Eventid")
                        .HasColumnName("eventid")
                        .HasColumnType("int(11)");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnName("ip")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Id");

                    b.ToTable("rm_syslog");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmUsergroups", b =>
                {
                    b.Property<int>("Groupid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("groupid")
                        .HasColumnType("int(11)");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasColumnName("descr")
                        .HasColumnType("varchar(200)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Groupname")
                        .IsRequired()
                        .HasColumnName("groupname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Groupid")
                        .HasName("PRIMARY");

                    b.ToTable("rm_usergroups");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmUsers", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Acctype")
                        .HasColumnName("acctype")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Actcode")
                        .IsRequired()
                        .HasColumnName("actcode")
                        .HasColumnType("varchar(60)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("address")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Alertemail")
                        .HasColumnName("alertemail")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Alertsms")
                        .HasColumnName("alertsms")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Cardfails")
                        .HasColumnName("cardfails")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("city")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<long>("Comblimit")
                        .HasColumnName("comblimit")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnName("comment")
                        .HasColumnType("varchar(500)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnName("company")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Contractid")
                        .IsRequired()
                        .HasColumnName("contractid")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("Contractvalid")
                        .HasColumnName("contractvalid")
                        .HasColumnType("date");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnName("country")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Createdby")
                        .IsRequired()
                        .HasColumnName("createdby")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime>("Createdon")
                        .HasColumnName("createdon")
                        .HasColumnType("date");

                    b.Property<decimal>("Credits")
                        .HasColumnName("credits")
                        .HasColumnType("decimal(20,2)");

                    b.Property<string>("Custattr")
                        .IsRequired()
                        .HasColumnName("custattr")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<long>("Downlimit")
                        .HasColumnName("downlimit")
                        .HasColumnType("bigint(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Enableuser")
                        .HasColumnName("enableuser")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnName("expiration")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnName("firstname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<decimal>("Gpslat")
                        .HasColumnName("gpslat")
                        .HasColumnType("decimal(17,14)");

                    b.Property<decimal>("Gpslong")
                        .HasColumnName("gpslong")
                        .HasColumnType("decimal(17,14)");

                    b.Property<int>("Groupid")
                        .HasColumnName("groupid")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Ipmodecm")
                        .HasColumnName("ipmodecm")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Ipmodecpe")
                        .HasColumnName("ipmodecpe")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnName("lang")
                        .HasColumnType("varchar(30)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime?>("Lastlogoff")
                        .HasColumnName("lastlogoff")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnName("lastname")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasColumnName("mac")
                        .HasColumnType("varchar(17)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Maccm")
                        .IsRequired()
                        .HasColumnName("maccm")
                        .HasColumnType("varchar(17)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnName("mobile")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnName("owner")
                        .HasColumnType("varchar(64)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("phone")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("Poolidcm")
                        .HasColumnName("poolidcm")
                        .HasColumnType("int(11)");

                    b.Property<int>("Poolidcpe")
                        .HasColumnName("poolidcpe")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Pswactsmsnum")
                        .HasColumnName("pswactsmsnum")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte>("Selfreg")
                        .HasColumnName("selfreg")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Srvid")
                        .HasColumnName("srvid")
                        .HasColumnType("int(11)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnName("state")
                        .HasColumnType("varchar(50)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Staticipcm")
                        .IsRequired()
                        .HasColumnName("staticipcm")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Staticipcpe")
                        .IsRequired()
                        .HasColumnName("staticipcpe")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Taxid")
                        .IsRequired()
                        .HasColumnName("taxid")
                        .HasColumnType("varchar(40)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<long>("Uplimit")
                        .HasColumnName("uplimit")
                        .HasColumnType("bigint(20)");

                    b.Property<long>("Uptimelimit")
                        .HasColumnName("uptimelimit")
                        .HasColumnType("bigint(20)");

                    b.Property<sbyte>("Usemacauth")
                        .HasColumnName("usemacauth")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte>("Verified")
                        .HasColumnName("verified")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Verifycode")
                        .IsRequired()
                        .HasColumnName("verifycode")
                        .HasColumnType("varchar(10)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Verifyfails")
                        .HasColumnName("verifyfails")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("Verifymobile")
                        .IsRequired()
                        .HasColumnName("verifymobile")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<sbyte>("Verifysentnum")
                        .HasColumnName("verifysentnum")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte>("Warningsent")
                        .HasColumnName("warningsent")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnName("zip")
                        .HasColumnType("varchar(8)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("Username")
                        .HasName("PRIMARY");

                    b.HasIndex("Acctype")
                        .HasName("acctype");

                    b.HasIndex("Address")
                        .HasName("address");

                    b.HasIndex("City")
                        .HasName("city");

                    b.HasIndex("Comment")
                        .HasName("comment");

                    b.HasIndex("Company")
                        .HasName("company");

                    b.HasIndex("Contractid")
                        .HasName("contractid");

                    b.HasIndex("Contractvalid")
                        .HasName("contractvalid");

                    b.HasIndex("Country")
                        .HasName("country");

                    b.HasIndex("Createdon")
                        .HasName("createdon");

                    b.HasIndex("Email")
                        .HasName("email");

                    b.HasIndex("Enableuser")
                        .HasName("enableuser");

                    b.HasIndex("Expiration")
                        .HasName("expiration");

                    b.HasIndex("Firstname")
                        .HasName("firstname");

                    b.HasIndex("Groupid")
                        .HasName("groupid");

                    b.HasIndex("Lastlogoff")
                        .HasName("lastlogoff");

                    b.HasIndex("Lastname")
                        .HasName("lastname");

                    b.HasIndex("Mac")
                        .HasName("mac");

                    b.HasIndex("Maccm")
                        .HasName("maccm");

                    b.HasIndex("Mobile")
                        .HasName("mobile");

                    b.HasIndex("Owner")
                        .HasName("owner");

                    b.HasIndex("Phone")
                        .HasName("phone");

                    b.HasIndex("Srvid")
                        .HasName("srvid");

                    b.HasIndex("State")
                        .HasName("state");

                    b.HasIndex("Staticipcm")
                        .HasName("staticipcm");

                    b.HasIndex("Staticipcpe")
                        .HasName("staticipcpe");

                    b.HasIndex("Zip")
                        .HasName("zip");

                    b.ToTable("rm_users");
                });

            modelBuilder.Entity("ContractManagement.RadiusDomain.Models.RmWlan", b =>
                {
                    b.Property<string>("Apip")
                        .HasColumnName("apip")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<short?>("Ccq")
                        .HasColumnName("ccq")
                        .HasColumnType("smallint(6)");

                    b.Property<string>("Maccpe")
                        .HasColumnName("maccpe")
                        .HasColumnType("varchar(17)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<short?>("Signal")
                        .HasColumnName("signal")
                        .HasColumnType("smallint(6)");

                    b.Property<short?>("Snr")
                        .HasColumnName("snr")
                        .HasColumnType("smallint(6)");

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("timestamp")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasIndex("Maccpe")
                        .HasName("maccpe");

                    b.ToTable("rm_wlan");
                });
#pragma warning restore 612, 618
        }
    }
}
