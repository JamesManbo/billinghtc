// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/services.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ContractManagement.API.Protos {

  /// <summary>Holder for reflection information generated from Protos/services.proto</summary>
  public static partial class ServicesReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/services.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServicesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcm90b3Mvc2VydmljZXMucHJvdG8SFUNvbnRyYWN0TWFuYWdlbWVudEFw",
            "aRoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHku",
            "cHJvdG8aE1Byb3Rvcy9jb21tb24ucHJvdG8ijQMKFlNlcnZpY2VQYWdlTGlz",
            "dEdycGNEVE8SNQoGc3Vic2V0GAEgAygLMiUuQ29udHJhY3RNYW5hZ2VtZW50",
            "QXBpLlNlcnZpY2VHcnBjRFRPEioKBWNvdW50GAIgASgLMhsuZ29vZ2xlLnBy",
            "b3RvYnVmLkludDMyVmFsdWUSLgoJcGFnZUNvdW50GAMgASgLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDMyVmFsdWUSMwoOdG90YWxJdGVtQ291bnQYBCABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIpCgRza2lwGAUgASgLMhsu",
            "Z29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSKQoEdGFrZRgGIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEhcKD2hhc1ByZXZpb3VzUGFnZRgH",
            "IAEoCBITCgtoYXNOZXh0UGFnZRgIIAEoCBITCgtpc0ZpcnN0UGFnZRgJIAEo",
            "CBISCgppc0xhc3RQYWdlGAogASgIIlAKElNlcnZpY2VMaXN0R3JwY0RUTxI6",
            "CgtzZXJ2aWNlRHRvcxgBIAMoCzIlLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5T",
            "ZXJ2aWNlR3JwY0RUTyLnAgoOU2VydmljZUdycGNEVE8SMQoLc2VydmljZU5h",
            "bWUYASABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMQoLc2Vy",
            "dmljZUNvZGUYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "JwoCaWQYAyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIsCgdn",
            "cm91cElkGAQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSLwoJ",
            "Z3JvdXBOYW1lGAUgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EhsKE2hhc1N0YXJ0QW5kRW5kUG9pbnQYBiABKAgSEwoLaGFzUGFja2FnZXMY",
            "ByABKAgSNQoGYXZhdGFyGAggASgLMiUuQ29udHJhY3RNYW5hZ2VtZW50QXBp",
            "LlBpY3R1cmVEVE9HcnBjMqACCgtTZXJ2aWNlR3JwYxJoCgtHZXRTZXJ2aWNl",
            "cxIoLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5SZXF1ZXN0RmlsdGVyR3JwYxot",
            "LkNvbnRyYWN0TWFuYWdlbWVudEFwaS5TZXJ2aWNlUGFnZUxpc3RHcnBjRFRP",
            "IgASVAoNR2V0QWxsU2VydmljZRIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRop",
            "LkNvbnRyYWN0TWFuYWdlbWVudEFwaS5TZXJ2aWNlTGlzdEdycGNEVE8iABJR",
            "CglHZXREZXRhaWwSGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRolLkNv",
            "bnRyYWN0TWFuYWdlbWVudEFwaS5TZXJ2aWNlR3JwY0RUTyIAQiCqAh1Db250",
            "cmFjdE1hbmFnZW1lbnQuQVBJLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::ContractManagement.API.Protos.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ServicePageListGrpcDTO), global::ContractManagement.API.Protos.ServicePageListGrpcDTO.Parser, new[]{ "Subset", "Count", "PageCount", "TotalItemCount", "Skip", "Take", "HasPreviousPage", "HasNextPage", "IsFirstPage", "IsLastPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ServiceListGrpcDTO), global::ContractManagement.API.Protos.ServiceListGrpcDTO.Parser, new[]{ "ServiceDtos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ServiceGrpcDTO), global::ContractManagement.API.Protos.ServiceGrpcDTO.Parser, new[]{ "ServiceName", "ServiceCode", "Id", "GroupId", "GroupName", "HasStartAndEndPoint", "HasPackages", "Avatar" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ServicePageListGrpcDTO : pb::IMessage<ServicePageListGrpcDTO> {
    private static readonly pb::MessageParser<ServicePageListGrpcDTO> _parser = new pb::MessageParser<ServicePageListGrpcDTO>(() => new ServicePageListGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServicePageListGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ServicesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePageListGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePageListGrpcDTO(ServicePageListGrpcDTO other) : this() {
      subset_ = other.subset_.Clone();
      Count = other.Count;
      PageCount = other.PageCount;
      TotalItemCount = other.TotalItemCount;
      Skip = other.Skip;
      Take = other.Take;
      hasPreviousPage_ = other.hasPreviousPage_;
      hasNextPage_ = other.hasNextPage_;
      isFirstPage_ = other.isFirstPage_;
      isLastPage_ = other.isLastPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePageListGrpcDTO Clone() {
      return new ServicePageListGrpcDTO(this);
    }

    /// <summary>Field number for the "subset" field.</summary>
    public const int SubsetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ServiceGrpcDTO> _repeated_subset_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.ServiceGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ServiceGrpcDTO> subset_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ServiceGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ServiceGrpcDTO> Subset {
      get { return subset_; }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_count_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }


    /// <summary>Field number for the "pageCount" field.</summary>
    public const int PageCountFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_pageCount_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? pageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PageCount {
      get { return pageCount_; }
      set {
        pageCount_ = value;
      }
    }


    /// <summary>Field number for the "totalItemCount" field.</summary>
    public const int TotalItemCountFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_totalItemCount_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? totalItemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TotalItemCount {
      get { return totalItemCount_; }
      set {
        totalItemCount_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "hasPreviousPage" field.</summary>
    public const int HasPreviousPageFieldNumber = 7;
    private bool hasPreviousPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreviousPage {
      get { return hasPreviousPage_; }
      set {
        hasPreviousPage_ = value;
      }
    }

    /// <summary>Field number for the "hasNextPage" field.</summary>
    public const int HasNextPageFieldNumber = 8;
    private bool hasNextPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPage {
      get { return hasNextPage_; }
      set {
        hasNextPage_ = value;
      }
    }

    /// <summary>Field number for the "isFirstPage" field.</summary>
    public const int IsFirstPageFieldNumber = 9;
    private bool isFirstPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirstPage {
      get { return isFirstPage_; }
      set {
        isFirstPage_ = value;
      }
    }

    /// <summary>Field number for the "isLastPage" field.</summary>
    public const int IsLastPageFieldNumber = 10;
    private bool isLastPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastPage {
      get { return isLastPage_; }
      set {
        isLastPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServicePageListGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServicePageListGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subset_.Equals(other.subset_)) return false;
      if (Count != other.Count) return false;
      if (PageCount != other.PageCount) return false;
      if (TotalItemCount != other.TotalItemCount) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (HasPreviousPage != other.HasPreviousPage) return false;
      if (HasNextPage != other.HasNextPage) return false;
      if (IsFirstPage != other.IsFirstPage) return false;
      if (IsLastPage != other.IsLastPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subset_.GetHashCode();
      if (count_ != null) hash ^= Count.GetHashCode();
      if (pageCount_ != null) hash ^= PageCount.GetHashCode();
      if (totalItemCount_ != null) hash ^= TotalItemCount.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (HasPreviousPage != false) hash ^= HasPreviousPage.GetHashCode();
      if (HasNextPage != false) hash ^= HasNextPage.GetHashCode();
      if (IsFirstPage != false) hash ^= IsFirstPage.GetHashCode();
      if (IsLastPage != false) hash ^= IsLastPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subset_.WriteTo(output, _repeated_subset_codec);
      if (count_ != null) {
        _single_count_codec.WriteTagAndValue(output, Count);
      }
      if (pageCount_ != null) {
        _single_pageCount_codec.WriteTagAndValue(output, PageCount);
      }
      if (totalItemCount_ != null) {
        _single_totalItemCount_codec.WriteTagAndValue(output, TotalItemCount);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (HasPreviousPage != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasPreviousPage);
      }
      if (HasNextPage != false) {
        output.WriteRawTag(64);
        output.WriteBool(HasNextPage);
      }
      if (IsFirstPage != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsFirstPage);
      }
      if (IsLastPage != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsLastPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subset_.CalculateSize(_repeated_subset_codec);
      if (count_ != null) {
        size += _single_count_codec.CalculateSizeWithTag(Count);
      }
      if (pageCount_ != null) {
        size += _single_pageCount_codec.CalculateSizeWithTag(PageCount);
      }
      if (totalItemCount_ != null) {
        size += _single_totalItemCount_codec.CalculateSizeWithTag(TotalItemCount);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (HasPreviousPage != false) {
        size += 1 + 1;
      }
      if (HasNextPage != false) {
        size += 1 + 1;
      }
      if (IsFirstPage != false) {
        size += 1 + 1;
      }
      if (IsLastPage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServicePageListGrpcDTO other) {
      if (other == null) {
        return;
      }
      subset_.Add(other.subset_);
      if (other.count_ != null) {
        if (count_ == null || other.Count != 0) {
          Count = other.Count;
        }
      }
      if (other.pageCount_ != null) {
        if (pageCount_ == null || other.PageCount != 0) {
          PageCount = other.PageCount;
        }
      }
      if (other.totalItemCount_ != null) {
        if (totalItemCount_ == null || other.TotalItemCount != 0) {
          TotalItemCount = other.TotalItemCount;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.HasPreviousPage != false) {
        HasPreviousPage = other.HasPreviousPage;
      }
      if (other.HasNextPage != false) {
        HasNextPage = other.HasNextPage;
      }
      if (other.IsFirstPage != false) {
        IsFirstPage = other.IsFirstPage;
      }
      if (other.IsLastPage != false) {
        IsLastPage = other.IsLastPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subset_.AddEntriesFrom(input, _repeated_subset_codec);
            break;
          }
          case 18: {
            int? value = _single_count_codec.Read(input);
            if (count_ == null || value != 0) {
              Count = value;
            }
            break;
          }
          case 26: {
            int? value = _single_pageCount_codec.Read(input);
            if (pageCount_ == null || value != 0) {
              PageCount = value;
            }
            break;
          }
          case 34: {
            int? value = _single_totalItemCount_codec.Read(input);
            if (totalItemCount_ == null || value != 0) {
              TotalItemCount = value;
            }
            break;
          }
          case 42: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 50: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 56: {
            HasPreviousPage = input.ReadBool();
            break;
          }
          case 64: {
            HasNextPage = input.ReadBool();
            break;
          }
          case 72: {
            IsFirstPage = input.ReadBool();
            break;
          }
          case 80: {
            IsLastPage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServiceListGrpcDTO : pb::IMessage<ServiceListGrpcDTO> {
    private static readonly pb::MessageParser<ServiceListGrpcDTO> _parser = new pb::MessageParser<ServiceListGrpcDTO>(() => new ServiceListGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceListGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ServicesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceListGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceListGrpcDTO(ServiceListGrpcDTO other) : this() {
      serviceDtos_ = other.serviceDtos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceListGrpcDTO Clone() {
      return new ServiceListGrpcDTO(this);
    }

    /// <summary>Field number for the "serviceDtos" field.</summary>
    public const int ServiceDtosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ServiceGrpcDTO> _repeated_serviceDtos_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.ServiceGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ServiceGrpcDTO> serviceDtos_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ServiceGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ServiceGrpcDTO> ServiceDtos {
      get { return serviceDtos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceListGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceListGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!serviceDtos_.Equals(other.serviceDtos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= serviceDtos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      serviceDtos_.WriteTo(output, _repeated_serviceDtos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += serviceDtos_.CalculateSize(_repeated_serviceDtos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceListGrpcDTO other) {
      if (other == null) {
        return;
      }
      serviceDtos_.Add(other.serviceDtos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            serviceDtos_.AddEntriesFrom(input, _repeated_serviceDtos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ServiceGrpcDTO : pb::IMessage<ServiceGrpcDTO> {
    private static readonly pb::MessageParser<ServiceGrpcDTO> _parser = new pb::MessageParser<ServiceGrpcDTO>(() => new ServiceGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ServicesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceGrpcDTO(ServiceGrpcDTO other) : this() {
      ServiceName = other.ServiceName;
      ServiceCode = other.ServiceCode;
      Id = other.Id;
      GroupId = other.GroupId;
      GroupName = other.GroupName;
      hasStartAndEndPoint_ = other.hasStartAndEndPoint_;
      hasPackages_ = other.hasPackages_;
      avatar_ = other.avatar_ != null ? other.avatar_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceGrpcDTO Clone() {
      return new ServiceGrpcDTO(this);
    }

    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_serviceName_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string serviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = value;
      }
    }


    /// <summary>Field number for the "serviceCode" field.</summary>
    public const int ServiceCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_serviceCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string serviceCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceCode {
      get { return serviceCode_; }
      set {
        serviceCode_ = value;
      }
    }


    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_id_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_groupId_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }


    /// <summary>Field number for the "groupName" field.</summary>
    public const int GroupNameFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_groupName_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string groupName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = value;
      }
    }


    /// <summary>Field number for the "hasStartAndEndPoint" field.</summary>
    public const int HasStartAndEndPointFieldNumber = 6;
    private bool hasStartAndEndPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStartAndEndPoint {
      get { return hasStartAndEndPoint_; }
      set {
        hasStartAndEndPoint_ = value;
      }
    }

    /// <summary>Field number for the "hasPackages" field.</summary>
    public const int HasPackagesFieldNumber = 7;
    private bool hasPackages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPackages {
      get { return hasPackages_; }
      set {
        hasPackages_ = value;
      }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 8;
    private global::ContractManagement.API.Protos.PictureDTOGrpc avatar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.PictureDTOGrpc Avatar {
      get { return avatar_; }
      set {
        avatar_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (ServiceCode != other.ServiceCode) return false;
      if (Id != other.Id) return false;
      if (GroupId != other.GroupId) return false;
      if (GroupName != other.GroupName) return false;
      if (HasStartAndEndPoint != other.HasStartAndEndPoint) return false;
      if (HasPackages != other.HasPackages) return false;
      if (!object.Equals(Avatar, other.Avatar)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (serviceName_ != null) hash ^= ServiceName.GetHashCode();
      if (serviceCode_ != null) hash ^= ServiceCode.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (groupId_ != null) hash ^= GroupId.GetHashCode();
      if (groupName_ != null) hash ^= GroupName.GetHashCode();
      if (HasStartAndEndPoint != false) hash ^= HasStartAndEndPoint.GetHashCode();
      if (HasPackages != false) hash ^= HasPackages.GetHashCode();
      if (avatar_ != null) hash ^= Avatar.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (serviceName_ != null) {
        _single_serviceName_codec.WriteTagAndValue(output, ServiceName);
      }
      if (serviceCode_ != null) {
        _single_serviceCode_codec.WriteTagAndValue(output, ServiceCode);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (groupId_ != null) {
        _single_groupId_codec.WriteTagAndValue(output, GroupId);
      }
      if (groupName_ != null) {
        _single_groupName_codec.WriteTagAndValue(output, GroupName);
      }
      if (HasStartAndEndPoint != false) {
        output.WriteRawTag(48);
        output.WriteBool(HasStartAndEndPoint);
      }
      if (HasPackages != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasPackages);
      }
      if (avatar_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Avatar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (serviceName_ != null) {
        size += _single_serviceName_codec.CalculateSizeWithTag(ServiceName);
      }
      if (serviceCode_ != null) {
        size += _single_serviceCode_codec.CalculateSizeWithTag(ServiceCode);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (groupId_ != null) {
        size += _single_groupId_codec.CalculateSizeWithTag(GroupId);
      }
      if (groupName_ != null) {
        size += _single_groupName_codec.CalculateSizeWithTag(GroupName);
      }
      if (HasStartAndEndPoint != false) {
        size += 1 + 1;
      }
      if (HasPackages != false) {
        size += 1 + 1;
      }
      if (avatar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Avatar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.serviceName_ != null) {
        if (serviceName_ == null || other.ServiceName != "") {
          ServiceName = other.ServiceName;
        }
      }
      if (other.serviceCode_ != null) {
        if (serviceCode_ == null || other.ServiceCode != "") {
          ServiceCode = other.ServiceCode;
        }
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0) {
          Id = other.Id;
        }
      }
      if (other.groupId_ != null) {
        if (groupId_ == null || other.GroupId != 0) {
          GroupId = other.GroupId;
        }
      }
      if (other.groupName_ != null) {
        if (groupName_ == null || other.GroupName != "") {
          GroupName = other.GroupName;
        }
      }
      if (other.HasStartAndEndPoint != false) {
        HasStartAndEndPoint = other.HasStartAndEndPoint;
      }
      if (other.HasPackages != false) {
        HasPackages = other.HasPackages;
      }
      if (other.avatar_ != null) {
        if (avatar_ == null) {
          Avatar = new global::ContractManagement.API.Protos.PictureDTOGrpc();
        }
        Avatar.MergeFrom(other.Avatar);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_serviceName_codec.Read(input);
            if (serviceName_ == null || value != "") {
              ServiceName = value;
            }
            break;
          }
          case 18: {
            string value = _single_serviceCode_codec.Read(input);
            if (serviceCode_ == null || value != "") {
              ServiceCode = value;
            }
            break;
          }
          case 26: {
            int? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0) {
              Id = value;
            }
            break;
          }
          case 34: {
            int? value = _single_groupId_codec.Read(input);
            if (groupId_ == null || value != 0) {
              GroupId = value;
            }
            break;
          }
          case 42: {
            string value = _single_groupName_codec.Read(input);
            if (groupName_ == null || value != "") {
              GroupName = value;
            }
            break;
          }
          case 48: {
            HasStartAndEndPoint = input.ReadBool();
            break;
          }
          case 56: {
            HasPackages = input.ReadBool();
            break;
          }
          case 66: {
            if (avatar_ == null) {
              Avatar = new global::ContractManagement.API.Protos.PictureDTOGrpc();
            }
            input.ReadMessage(Avatar);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
