// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: exchangerates.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ContractManagement.API.Protos {

  /// <summary>Holder for reflection information generated from exchangerates.proto</summary>
  public static partial class ExchangeratesReflection {

    #region Descriptor
    /// <summary>File descriptor for exchangerates.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExchangeratesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNleGNoYW5nZXJhdGVzLnByb3RvEhVDb250cmFjdE1hbmFnZW1lbnRBcGka",
            "Hmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxofZ29vZ2xlL3Byb3Rv",
            "YnVmL3RpbWVzdGFtcC5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnBy",
            "b3RvIqgBChdSZXF1ZXN0RXhjaGFuZ2VSYXRlR3JwYxIuCghmcm9tQ29kZRgB",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIsCgZ0b0NvZGUY",
            "AiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLwoLY3JlYXRl",
            "ZERhdGUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIjoKFkV4",
            "Y2hhbmdlUmF0ZUdycGNSZXN1bHQSEQoJaXNTdWNjZXNzGAEgASgIEg0KBXZh",
            "bHVlGAIgASgBIlUKF0xpc3RFeGNoYW5nZVJhdGVHcnBjRFRPEjoKBnN1YnNl",
            "dBgBIAMoCzIqLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5FeGNoYW5nZVJhdGVE",
            "VE9HcnBjIvECChNFeGNoYW5nZVJhdGVEVE9HcnBjEjIKDGN1cnJlbmN5Q29k",
            "ZRgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIyCgxjdXJy",
            "ZW5jeU5hbWUYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "KQoDYnV5GAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4K",
            "CHRyYW5zZmVyGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EioKBHNlbGwYBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "EAoIYnV5VmFsdWUYBiABKAESFQoNdHJhbnNmZXJWYWx1ZRgHIAEoARIRCglz",
            "ZWxsVmFsdWUYCCABKAESLwoLY3JlYXRlZERhdGUYCSABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wMqYCChBFeGNoYW5nZVJhdGVHcnBjEm8KDEV4",
            "Y2hhbmdlUmF0ZRIuLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5SZXF1ZXN0RXhj",
            "aGFuZ2VSYXRlR3JwYxotLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5FeGNoYW5n",
            "ZVJhdGVHcnBjUmVzdWx0IgASXAoQR2V0RXhjaGFuZ2VSYXRlcxIWLmdvb2ds",
            "ZS5wcm90b2J1Zi5FbXB0eRouLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5MaXN0",
            "RXhjaGFuZ2VSYXRlR3JwY0RUTyIAEkMKC1N5bmNocm9uaXplEhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5GhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZSIA",
            "QiCqAh1Db250cmFjdE1hbmFnZW1lbnQuQVBJLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.RequestExchangeRateGrpc), global::ContractManagement.API.Protos.RequestExchangeRateGrpc.Parser, new[]{ "FromCode", "ToCode", "CreatedDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ExchangeRateGrpcResult), global::ContractManagement.API.Protos.ExchangeRateGrpcResult.Parser, new[]{ "IsSuccess", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ListExchangeRateGrpcDTO), global::ContractManagement.API.Protos.ListExchangeRateGrpcDTO.Parser, new[]{ "Subset" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ExchangeRateDTOGrpc), global::ContractManagement.API.Protos.ExchangeRateDTOGrpc.Parser, new[]{ "CurrencyCode", "CurrencyName", "Buy", "Transfer", "Sell", "BuyValue", "TransferValue", "SellValue", "CreatedDate" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RequestExchangeRateGrpc : pb::IMessage<RequestExchangeRateGrpc> {
    private static readonly pb::MessageParser<RequestExchangeRateGrpc> _parser = new pb::MessageParser<RequestExchangeRateGrpc>(() => new RequestExchangeRateGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestExchangeRateGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ExchangeratesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestExchangeRateGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestExchangeRateGrpc(RequestExchangeRateGrpc other) : this() {
      FromCode = other.FromCode;
      ToCode = other.ToCode;
      createdDate_ = other.createdDate_ != null ? other.createdDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestExchangeRateGrpc Clone() {
      return new RequestExchangeRateGrpc(this);
    }

    /// <summary>Field number for the "fromCode" field.</summary>
    public const int FromCodeFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_fromCode_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string fromCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromCode {
      get { return fromCode_; }
      set {
        fromCode_ = value;
      }
    }


    /// <summary>Field number for the "toCode" field.</summary>
    public const int ToCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_toCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string toCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToCode {
      get { return toCode_; }
      set {
        toCode_ = value;
      }
    }


    /// <summary>Field number for the "createdDate" field.</summary>
    public const int CreatedDateFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedDate {
      get { return createdDate_; }
      set {
        createdDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestExchangeRateGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestExchangeRateGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromCode != other.FromCode) return false;
      if (ToCode != other.ToCode) return false;
      if (!object.Equals(CreatedDate, other.CreatedDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fromCode_ != null) hash ^= FromCode.GetHashCode();
      if (toCode_ != null) hash ^= ToCode.GetHashCode();
      if (createdDate_ != null) hash ^= CreatedDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fromCode_ != null) {
        _single_fromCode_codec.WriteTagAndValue(output, FromCode);
      }
      if (toCode_ != null) {
        _single_toCode_codec.WriteTagAndValue(output, ToCode);
      }
      if (createdDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fromCode_ != null) {
        size += _single_fromCode_codec.CalculateSizeWithTag(FromCode);
      }
      if (toCode_ != null) {
        size += _single_toCode_codec.CalculateSizeWithTag(ToCode);
      }
      if (createdDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestExchangeRateGrpc other) {
      if (other == null) {
        return;
      }
      if (other.fromCode_ != null) {
        if (fromCode_ == null || other.FromCode != "") {
          FromCode = other.FromCode;
        }
      }
      if (other.toCode_ != null) {
        if (toCode_ == null || other.ToCode != "") {
          ToCode = other.ToCode;
        }
      }
      if (other.createdDate_ != null) {
        if (createdDate_ == null) {
          CreatedDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedDate.MergeFrom(other.CreatedDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_fromCode_codec.Read(input);
            if (fromCode_ == null || value != "") {
              FromCode = value;
            }
            break;
          }
          case 18: {
            string value = _single_toCode_codec.Read(input);
            if (toCode_ == null || value != "") {
              ToCode = value;
            }
            break;
          }
          case 26: {
            if (createdDate_ == null) {
              CreatedDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedDate);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeRateGrpcResult : pb::IMessage<ExchangeRateGrpcResult> {
    private static readonly pb::MessageParser<ExchangeRateGrpcResult> _parser = new pb::MessageParser<ExchangeRateGrpcResult>(() => new ExchangeRateGrpcResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeRateGrpcResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ExchangeratesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeRateGrpcResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeRateGrpcResult(ExchangeRateGrpcResult other) : this() {
      isSuccess_ = other.isSuccess_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeRateGrpcResult Clone() {
      return new ExchangeRateGrpcResult(this);
    }

    /// <summary>Field number for the "isSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 1;
    private bool isSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private double value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeRateGrpcResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeRateGrpcResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSuccess != other.IsSuccess) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
      if (Value != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSuccess);
      }
      if (Value != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSuccess != false) {
        size += 1 + 1;
      }
      if (Value != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeRateGrpcResult other) {
      if (other == null) {
        return;
      }
      if (other.IsSuccess != false) {
        IsSuccess = other.IsSuccess;
      }
      if (other.Value != 0D) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSuccess = input.ReadBool();
            break;
          }
          case 17: {
            Value = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListExchangeRateGrpcDTO : pb::IMessage<ListExchangeRateGrpcDTO> {
    private static readonly pb::MessageParser<ListExchangeRateGrpcDTO> _parser = new pb::MessageParser<ListExchangeRateGrpcDTO>(() => new ListExchangeRateGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListExchangeRateGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ExchangeratesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExchangeRateGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExchangeRateGrpcDTO(ListExchangeRateGrpcDTO other) : this() {
      subset_ = other.subset_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExchangeRateGrpcDTO Clone() {
      return new ListExchangeRateGrpcDTO(this);
    }

    /// <summary>Field number for the "subset" field.</summary>
    public const int SubsetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ExchangeRateDTOGrpc> _repeated_subset_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.ExchangeRateDTOGrpc.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ExchangeRateDTOGrpc> subset_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ExchangeRateDTOGrpc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ExchangeRateDTOGrpc> Subset {
      get { return subset_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListExchangeRateGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListExchangeRateGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subset_.Equals(other.subset_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subset_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subset_.WriteTo(output, _repeated_subset_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subset_.CalculateSize(_repeated_subset_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListExchangeRateGrpcDTO other) {
      if (other == null) {
        return;
      }
      subset_.Add(other.subset_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subset_.AddEntriesFrom(input, _repeated_subset_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeRateDTOGrpc : pb::IMessage<ExchangeRateDTOGrpc> {
    private static readonly pb::MessageParser<ExchangeRateDTOGrpc> _parser = new pb::MessageParser<ExchangeRateDTOGrpc>(() => new ExchangeRateDTOGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeRateDTOGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ExchangeratesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeRateDTOGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeRateDTOGrpc(ExchangeRateDTOGrpc other) : this() {
      CurrencyCode = other.CurrencyCode;
      CurrencyName = other.CurrencyName;
      Buy = other.Buy;
      Transfer = other.Transfer;
      Sell = other.Sell;
      buyValue_ = other.buyValue_;
      transferValue_ = other.transferValue_;
      sellValue_ = other.sellValue_;
      createdDate_ = other.createdDate_ != null ? other.createdDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeRateDTOGrpc Clone() {
      return new ExchangeRateDTOGrpc(this);
    }

    /// <summary>Field number for the "currencyCode" field.</summary>
    public const int CurrencyCodeFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_currencyCode_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string currencyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyCode {
      get { return currencyCode_; }
      set {
        currencyCode_ = value;
      }
    }


    /// <summary>Field number for the "currencyName" field.</summary>
    public const int CurrencyNameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_currencyName_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string currencyName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyName {
      get { return currencyName_; }
      set {
        currencyName_ = value;
      }
    }


    /// <summary>Field number for the "buy" field.</summary>
    public const int BuyFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_buy_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string buy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Buy {
      get { return buy_; }
      set {
        buy_ = value;
      }
    }


    /// <summary>Field number for the "transfer" field.</summary>
    public const int TransferFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_transfer_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string transfer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Transfer {
      get { return transfer_; }
      set {
        transfer_ = value;
      }
    }


    /// <summary>Field number for the "sell" field.</summary>
    public const int SellFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_sell_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string sell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sell {
      get { return sell_; }
      set {
        sell_ = value;
      }
    }


    /// <summary>Field number for the "buyValue" field.</summary>
    public const int BuyValueFieldNumber = 6;
    private double buyValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BuyValue {
      get { return buyValue_; }
      set {
        buyValue_ = value;
      }
    }

    /// <summary>Field number for the "transferValue" field.</summary>
    public const int TransferValueFieldNumber = 7;
    private double transferValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TransferValue {
      get { return transferValue_; }
      set {
        transferValue_ = value;
      }
    }

    /// <summary>Field number for the "sellValue" field.</summary>
    public const int SellValueFieldNumber = 8;
    private double sellValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double SellValue {
      get { return sellValue_; }
      set {
        sellValue_ = value;
      }
    }

    /// <summary>Field number for the "createdDate" field.</summary>
    public const int CreatedDateFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedDate {
      get { return createdDate_; }
      set {
        createdDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeRateDTOGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeRateDTOGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrencyCode != other.CurrencyCode) return false;
      if (CurrencyName != other.CurrencyName) return false;
      if (Buy != other.Buy) return false;
      if (Transfer != other.Transfer) return false;
      if (Sell != other.Sell) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BuyValue, other.BuyValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TransferValue, other.TransferValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SellValue, other.SellValue)) return false;
      if (!object.Equals(CreatedDate, other.CreatedDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currencyCode_ != null) hash ^= CurrencyCode.GetHashCode();
      if (currencyName_ != null) hash ^= CurrencyName.GetHashCode();
      if (buy_ != null) hash ^= Buy.GetHashCode();
      if (transfer_ != null) hash ^= Transfer.GetHashCode();
      if (sell_ != null) hash ^= Sell.GetHashCode();
      if (BuyValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BuyValue);
      if (TransferValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TransferValue);
      if (SellValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SellValue);
      if (createdDate_ != null) hash ^= CreatedDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currencyCode_ != null) {
        _single_currencyCode_codec.WriteTagAndValue(output, CurrencyCode);
      }
      if (currencyName_ != null) {
        _single_currencyName_codec.WriteTagAndValue(output, CurrencyName);
      }
      if (buy_ != null) {
        _single_buy_codec.WriteTagAndValue(output, Buy);
      }
      if (transfer_ != null) {
        _single_transfer_codec.WriteTagAndValue(output, Transfer);
      }
      if (sell_ != null) {
        _single_sell_codec.WriteTagAndValue(output, Sell);
      }
      if (BuyValue != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(BuyValue);
      }
      if (TransferValue != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(TransferValue);
      }
      if (SellValue != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(SellValue);
      }
      if (createdDate_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(CreatedDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currencyCode_ != null) {
        size += _single_currencyCode_codec.CalculateSizeWithTag(CurrencyCode);
      }
      if (currencyName_ != null) {
        size += _single_currencyName_codec.CalculateSizeWithTag(CurrencyName);
      }
      if (buy_ != null) {
        size += _single_buy_codec.CalculateSizeWithTag(Buy);
      }
      if (transfer_ != null) {
        size += _single_transfer_codec.CalculateSizeWithTag(Transfer);
      }
      if (sell_ != null) {
        size += _single_sell_codec.CalculateSizeWithTag(Sell);
      }
      if (BuyValue != 0D) {
        size += 1 + 8;
      }
      if (TransferValue != 0D) {
        size += 1 + 8;
      }
      if (SellValue != 0D) {
        size += 1 + 8;
      }
      if (createdDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeRateDTOGrpc other) {
      if (other == null) {
        return;
      }
      if (other.currencyCode_ != null) {
        if (currencyCode_ == null || other.CurrencyCode != "") {
          CurrencyCode = other.CurrencyCode;
        }
      }
      if (other.currencyName_ != null) {
        if (currencyName_ == null || other.CurrencyName != "") {
          CurrencyName = other.CurrencyName;
        }
      }
      if (other.buy_ != null) {
        if (buy_ == null || other.Buy != "") {
          Buy = other.Buy;
        }
      }
      if (other.transfer_ != null) {
        if (transfer_ == null || other.Transfer != "") {
          Transfer = other.Transfer;
        }
      }
      if (other.sell_ != null) {
        if (sell_ == null || other.Sell != "") {
          Sell = other.Sell;
        }
      }
      if (other.BuyValue != 0D) {
        BuyValue = other.BuyValue;
      }
      if (other.TransferValue != 0D) {
        TransferValue = other.TransferValue;
      }
      if (other.SellValue != 0D) {
        SellValue = other.SellValue;
      }
      if (other.createdDate_ != null) {
        if (createdDate_ == null) {
          CreatedDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedDate.MergeFrom(other.CreatedDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_currencyCode_codec.Read(input);
            if (currencyCode_ == null || value != "") {
              CurrencyCode = value;
            }
            break;
          }
          case 18: {
            string value = _single_currencyName_codec.Read(input);
            if (currencyName_ == null || value != "") {
              CurrencyName = value;
            }
            break;
          }
          case 26: {
            string value = _single_buy_codec.Read(input);
            if (buy_ == null || value != "") {
              Buy = value;
            }
            break;
          }
          case 34: {
            string value = _single_transfer_codec.Read(input);
            if (transfer_ == null || value != "") {
              Transfer = value;
            }
            break;
          }
          case 42: {
            string value = _single_sell_codec.Read(input);
            if (sell_ == null || value != "") {
              Sell = value;
            }
            break;
          }
          case 49: {
            BuyValue = input.ReadDouble();
            break;
          }
          case 57: {
            TransferValue = input.ReadDouble();
            break;
          }
          case 65: {
            SellValue = input.ReadDouble();
            break;
          }
          case 74: {
            if (createdDate_ == null) {
              CreatedDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedDate);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
