// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/outcontracts.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ContractManagement.API.Protos {

  /// <summary>Holder for reflection information generated from Protos/outcontracts.proto</summary>
  public static partial class OutcontractsReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/outcontracts.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OutcontractsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90b3Mvb3V0Y29udHJhY3RzLnByb3RvEhVDb250cmFjdE1hbmFnZW1l",
            "bnRBcGkaHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxofZ29vZ2xl",
            "L3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2Vt",
            "cHR5LnByb3RvGhhQcm90b3MvY29udHJhY3RvcnMucHJvdG8aE1Byb3Rvcy9j",
            "b21tb24ucHJvdG8aGFByb3Rvcy90YXhjYXRlZ29yeS5wcm90byJeChxDaGFu",
            "bmVsQWRkcmVzc2VzUmVzcG9uc2VHcnBjEj4KBnJlc3VsdBgBIAMoCzIuLkNv",
            "bnRyYWN0TWFuYWdlbWVudEFwaS5DaGFubmVsQWRkcmVzc01vZGVsR3JwYyLY",
            "AQoXQ2hhbm5lbEFkZHJlc3NNb2RlbEdycGMSKQoDY2lkGAEgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEkkKEXN0YXJ0UG9pbnRBZGRyZXNz",
            "GAIgASgLMi4uQ29udHJhY3RNYW5hZ2VtZW50QXBpLkluc3RhbGxhdGlvbkFk",
            "ZHJlc3NHcnBjEkcKD2VuZFBvaW50QWRkcmVzcxgDIAEoCzIuLkNvbnRyYWN0",
            "TWFuYWdlbWVudEFwaS5JbnN0YWxsYXRpb25BZGRyZXNzR3JwYyKHAgofR2Vu",
            "ZXJhdGVDb250cmFjdENvZGVSZXF1ZXN0R3JwYxIUCgxpc0VudGVycHJpc2UY",
            "ASABKAgSNgoQY3VzdG9tZXJGdWxsTmFtZRgCIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIxCgxtYXJrZXRBcmVhSWQYAyABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50MzJWYWx1ZRIuCglwcm9qZWN0SWQYBCABKAsyGy5n",
            "b29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIzCg1zcnZQYWNrYWdlSWRzGAUg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIlwKGE91dENvbnRy",
            "YWN0SXNTdWNjZXNzR1JQQxIRCglJc1N1Y2Nlc3MYASABKAgSLQoHbWVzc2Fn",
            "ZRgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSJkChtHZXRP",
            "dXRDb250cmFjdEJ5SWRzUmVzcG9uc2USRQoMb3V0Q29udHJhY3RzGAEgAygL",
            "Mi8uQ29udHJhY3RNYW5hZ2VtZW50QXBpLk91dENvbnRyYWN0U2ltcGxlR3Jw",
            "Y0RUTyJbChtPdXRDb250cmFjdExpc3RHcnBjUmVzcG9uc2USPAoMY29udHJh",
            "Y3REdG9zGAEgAygLMiYuQ29udHJhY3RNYW5hZ2VtZW50QXBpLkNvbnRyYWN0",
            "R3JwY0RUTyKIAQopT3V0Q29udHJhY3RTZXJ2aWNlUGFja2FnZUxpc3RHcnBj",
            "UmVzcG9uc2USWwoab3V0Q29udHJhY3RTZXJ2aWNlUGFja2FnZXMYASADKAsy",
            "Ny5Db250cmFjdE1hbmFnZW1lbnRBcGkuT3V0Q29udHJhY3RTZXJ2aWNlUGFj",
            "a2FnZUdycGNEVE8ihgQKF1JlcXVlc3RHZXRDb250cmFjdHNHcnBjEi0KB29y",
            "ZGVyQnkYASABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSKQoD",
            "ZGlyGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEikKBHNr",
            "aXAYAyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIpCgR0YWtl",
            "GAQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSLQoHZmlsdGVy",
            "cxgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIOCgZwYWdp",
            "bmcYBiABKAgSLgoIa2V5d29yZHMYByABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSMAoKcHJvamVjdElkcxgIIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIxCgxjb250cmFjdG9ySWQYCSABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50MzJWYWx1ZRI1ChBjb250cmFjdFN0YXR1c0lkGAog",
            "ASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSMAoKc2VydmljZUlk",
            "cxgLIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSKPAwoXQ29u",
            "dHJhY3RQYWdlTGlzdEdycGNEVE8SNgoGc3Vic2V0GAEgAygLMiYuQ29udHJh",
            "Y3RNYW5hZ2VtZW50QXBpLkNvbnRyYWN0R3JwY0RUTxIqCgVjb3VudBgCIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEi4KCXBhZ2VDb3VudBgD",
            "IAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjMKDnRvdGFsSXRl",
            "bUNvdW50GAQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSKQoE",
            "c2tpcBgFIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEikKBHRh",
            "a2UYBiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIXCg9oYXNQ",
            "cmV2aW91c1BhZ2UYByABKAgSEwoLaGFzTmV4dFBhZ2UYCCABKAgSEwoLaXNG",
            "aXJzdFBhZ2UYCSABKAgSEgoKaXNMYXN0UGFnZRgKIAEoCCKaAQoRUGF5bWVu",
            "dE1ldGhvZEdycGMSKQoEZm9ybRgBIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQzMlZhbHVlEisKBm1ldGhvZBgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQzMlZhbHVlEi0KB2FkZHJlc3MYAyABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUiuAIKFENvbnRyYWN0VGltZUxpbmVHcnBjEjAKC3JlbmV3",
            "UGVyaW9kGAEgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSMgoN",
            "cGF5bWVudFBlcmlvZBgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlEi4KCmV4cGlyYXRpb24YAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wEi8KC2xpcXVpZGF0aW9uGAQgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBItCgllZmZlY3RpdmUYBSABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEioKBnNpZ25lZBgGIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXAi9wEKC0FkZHJlc3NHcnBjEiwKBnN0cmVldBgBIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIuCghkaXN0cmljdBgCIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIwCgpkaXN0cmljdElk",
            "GAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEioKBGNpdHkY",
            "BCABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLAoGY2l0eUlk",
            "GAUgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIqoEChVBdHRh",
            "Y2htZW50RmlsZUdycGNEVE8SJwoCaWQYASABKAsyGy5nb29nbGUucHJvdG9i",
            "dWYuSW50MzJWYWx1ZRIyCg1vdXRDb250cmFjdElkGAIgASgLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDMyVmFsdWUSNQoPcmVzb3VyY2VTdG9yYWdlGAMgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEioKBG5hbWUYBCABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLgoIZmlsZU5hbWUYBSAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLgoIZmlsZVBhdGgY",
            "BiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSKQoEc2l6ZRgH",
            "IAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEi0KCGZpbGVUeXBl",
            "GAggASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSLwoJZXh0ZW5z",
            "aW9uGAkgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjIKDHJl",
            "ZGlyZWN0TGluaxgKIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRIyCgx0ZW1wb3JhcnlVcmwYCyABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWUinQEKFENvbnRyYWN0T2ZUYXhHcnBjRFRPEicKAmlkGAEgASgL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSLQoIdmFsdWVUYXgYAiAB",
            "KAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRItCgd0YXhOYW1lGAMg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlIvUUCiBPdXRDb250",
            "cmFjdFNlcnZpY2VQYWNrYWdlR3JwY0RUTxIzCg5jdXJyZW5jeVVuaXRJZBgB",
            "IAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjYKEGN1cnJlbmN5",
            "VW5pdENvZGUYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUS",
            "MgoNb3V0Q29udHJhY3RJZBgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQz",
            "MlZhbHVlEjUKEHNlcnZpY2VQYWNrYWdlSWQYBCABKAsyGy5nb29nbGUucHJv",
            "dG9idWYuSW50MzJWYWx1ZRIuCglzZXJ2aWNlSWQYBSABKAsyGy5nb29nbGUu",
            "cHJvdG9idWYuSW50MzJWYWx1ZRIxCgtzZXJ2aWNlTmFtZRgGIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIxCgtwYWNrYWdlTmFtZRgHIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIWCg5pc0ZyZWVTdGF0",
            "aWNJcBgIIAEoCBI0Cg5iYW5kd2lkdGhMYWJlbBgJIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZRI7ChZpbnRlcm5hdGlvbmFsQmFuZHdpZHRo",
            "GAogASgLMhsuZ29vZ2xlLnByb3RvYnVmLkZsb2F0VmFsdWUSNgoRZG9tZXN0",
            "aWNCYW5kd2lkdGgYCyABKAsyGy5nb29nbGUucHJvdG9idWYuRmxvYXRWYWx1",
            "ZRI/ChlpbnRlcm5hdGlvbmFsQmFuZHdpZHRoVW9tGAwgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEjoKFGRvbWVzdGljQmFuZHdpZHRoVW9t",
            "GA0gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjwKCHRpbWVM",
            "aW5lGA4gASgLMiouQ29udHJhY3RNYW5hZ2VtZW50QXBpLkJpbGxpbmdUaW1l",
            "TGluZUdycGMSMgoMY3VzdG9tZXJDb2RlGA8gASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEikKA2NJZBgQIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRIzCg1yYWRpdXNBY2NvdW50GBEgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEjQKDnJhZGl1c1Bhc3N3b3JkGBIgASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjUKD2luc3RhbGxhdGlv",
            "bkZlZRgTIAEoCzIcLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Nb25leRIuCghv",
            "dGhlckZlZRgUIAEoCzIcLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Nb25leRI1",
            "Cg9vcmdQYWNrYWdlUHJpY2UYFSABKAsyHC5Db250cmFjdE1hbmFnZW1lbnRB",
            "cGkuTW9uZXkSMgoMcGFja2FnZVByaWNlGBYgASgLMhwuQ29udHJhY3RNYW5h",
            "Z2VtZW50QXBpLk1vbmV5EjUKEHBhY2thZ2VQcmljZVR5cGUYFyABKAsyGy5n",
            "b29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRI4ChNzdGFydFBvaW50Q2hhbm5l",
            "bElkGBggASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSNgoRZW5k",
            "UG9pbnRDaGFubmVsSWQYGSABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJW",
            "YWx1ZRIbChNoYXNTdGFydEFuZEVuZFBvaW50GBogASgIEjUKD3Byb21vdGlv",
            "bkFtb3VudBgbIAEoCzIcLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Nb25leRI1",
            "Cg9lcXVpcG1lbnRBbW91bnQYHCABKAsyHC5Db250cmFjdE1hbmFnZW1lbnRB",
            "cGkuTW9uZXkSLQoIc3RhdHVzSWQYHSABKAsyGy5nb29nbGUucHJvdG9idWYu",
            "SW50MzJWYWx1ZRI3ChFzdWJUb3RhbEJlZm9yZVRheBgeIAEoCzIcLkNvbnRy",
            "YWN0TWFuYWdlbWVudEFwaS5Nb25leRI5ChNncmFuZFRvdGFsQmVmb3JlVGF4",
            "GB8gASgLMhwuQ29udHJhY3RNYW5hZ2VtZW50QXBpLk1vbmV5Ei8KCnRheFBl",
            "cmNlbnQYICABKAsyGy5nb29nbGUucHJvdG9idWYuRmxvYXRWYWx1ZRIvCgl0",
            "YXhBbW91bnQYISABKAsyHC5Db250cmFjdE1hbmFnZW1lbnRBcGkuTW9uZXkS",
            "LgoIc3ViVG90YWwYIiABKAsyHC5Db250cmFjdE1hbmFnZW1lbnRBcGkuTW9u",
            "ZXkSMAoKZ3JhbmRUb3RhbBgjIAEoCzIcLkNvbnRyYWN0TWFuYWdlbWVudEFw",
            "aS5Nb25leRJACht0cmFuc2FjdGlvblNlcnZpY2VQYWNrYWdlSWQYJCABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIeChZpc1JhZGl1c0FjY291",
            "bnRDcmVhdGVkGCUgASgIEioKBW9sZElkGCYgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDMyVmFsdWUSGAoQaXNJbkZpcnN0QmlsbGluZxgnIAEoCBIzCg5y",
            "YWRpdXNTZXJ2ZXJJZBgoIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlEh8KF2lzVGVjaG5pY2FsQ29uZmlybWF0aW9uGCkgASgIEjMKDmNoYW5u",
            "ZWxHcm91cElkGCogASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUS",
            "EgoKaXNIYXNQcmljZRgrIAEoCBIfChdpc0RlZmF1bHRTTEFCeVNlcnZpY2VJ",
            "ZBgsIAEoCBI0Cg9wYXltZW50VGFyZ2V0SWQYLSABKAsyGy5nb29nbGUucHJv",
            "dG9idWYuSW50MzJWYWx1ZRIKCgJpZBguIAEoBRI2ChBvcmdhbml6YXRpb25Q",
            "YXRoGC8gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEkQKCnN0",
            "YXJ0UG9pbnQYMCABKAsyMC5Db250cmFjdE1hbmFnZW1lbnRBcGkuT3V0cHV0",
            "Q2hhbm5lbFBvaW50R3JwY0RUTxJCCghlbmRQb2ludBgxIAEoCzIwLkNvbnRy",
            "YWN0TWFuYWdlbWVudEFwaS5PdXRwdXRDaGFubmVsUG9pbnRHcnBjRFRPEmIK",
            "Hm91dENvbnRyYWN0U2VydmljZVBhY2thZ2VUYXhlcxgyIAMoCzI6LkNvbnRy",
            "YWN0TWFuYWdlbWVudEFwaS5PdXRDb250cmFjdFNlcnZpY2VQYWNrYWdlVGF4",
            "R3JwY0RUTxIyCgxjb250cmFjdENvZGUYMyABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSKgoEdGV4dBg0IAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZSK4AgojT3V0Q29udHJhY3RTZXJ2aWNlUGFja2FnZVRh",
            "eEdycGNEVE8SQAobb3V0Q29udHJhY3RTZXJ2aWNlUGFja2FnZUlkGAEgASgL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSMgoNdGF4Q2F0ZWdvcnlJ",
            "ZBgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjUKD3RheENh",
            "dGVnb3J5TmFtZRgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRI1Cg90YXhDYXRlZ29yeUNvZGUYBCABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSLQoIdGF4VmFsdWUYBSABKAsyGy5nb29nbGUucHJvdG9i",
            "dWYuSW50MzJWYWx1ZSLqCwobT3V0Q29udHJhY3RFcXVpcG1lbnRHcnBjRFRP",
            "EicKAmlkGAEgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSMgoN",
            "b3V0Q29udHJhY3RJZBgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlEjkKFG91dENvbnRyYWN0UGFja2FnZUlkGAMgASgLMhsuZ29vZ2xlLnBy",
            "b3RvYnVmLkludDMyVmFsdWUSLgoJc2VydmljZUlkGAQgASgLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDMyVmFsdWUSMQoLc2VydmljZU5hbWUYBSABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSNQoQc2VydmljZVBhY2thZ2VJ",
            "ZBgGIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjgKEnNlcnZp",
            "Y2VQYWNrYWdlTmFtZRgHIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRIzCg1lcXVpcG1lbnROYW1lGAggASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEjkKE2VxdWlwbWVudFBpY3R1cmVVcmwYCSABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMZXF1aXBtZW50VW9tGAog",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi8KCXVuaXRQcmlj",
            "ZRgLIAEoCzIcLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Nb25leRIxCgxleGFt",
            "aW5lZFVuaXQYDCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIt",
            "CghyZWFsVW5pdBgNIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVl",
            "EjIKDXJlY2xhaW1lZFVuaXQYDiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50",
            "MzJWYWx1ZRIWCg5pc0luU3VydmV5UGxhbhgQIAEoCBIOCgZpc0ZyZWUYESAB",
            "KAgSFAoMaGFzVG9SZWNsYWltGBIgASgIEjAKCnNlcmlhbENvZGUYEyABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMAoKZGV2aWNlQ29kZRgU",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIyCgxtYW51ZmFj",
            "dHVyZXIYFSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSNAoO",
            "c3BlY2lmaWNhdGlvbnMYFiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUSLQoIc3RhdHVzSWQYFyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50",
            "MzJWYWx1ZRIwCgtlcXVpcG1lbnRJZBgYIAEoCzIbLmdvb2dsZS5wcm90b2J1",
            "Zi5JbnQzMlZhbHVlEjAKCmdyYW5kVG90YWwYGSABKAsyHC5Db250cmFjdE1h",
            "bmFnZW1lbnRBcGkuTW9uZXkSOAoSdW5pdFByaWNlQmVmb3JlVGF4GBogASgL",
            "MhwuQ29udHJhY3RNYW5hZ2VtZW50QXBpLk1vbmV5EjsKFnRyYW5zYWN0aW9u",
            "RXF1aXBtZW50SWQYGyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1",
            "ZRIzCg5jdXJyZW5jeVVuaXRJZBgcIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQzMlZhbHVlEjYKEGN1cnJlbmN5VW5pdENvZGUYHSABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSPQoXaW5zdGFsbGF0aW9uRnVsbEFkZHJl",
            "c3MYHiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMgoNYWN0",
            "aXZhdGVkVW5pdBgfIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVl",
            "IpgVCg9Db250cmFjdEdycGNEVE8SJwoCaWQYASABKAsyGy5nb29nbGUucHJv",
            "dG9idWYuSW50MzJWYWx1ZRIyCgxjb250cmFjdENvZGUYAiABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLwoJYWdlbnRDb2RlGAMgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjMKDmNvbnRyYWN0VHlwZUlk",
            "GAQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSMQoMbWFya2V0",
            "QXJlYUlkGAUgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSNAoO",
            "bWFya2V0QXJlYU5hbWUYBiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUSLgoJcHJvamVjdElkGAcgASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDMyVmFsdWUSMQoLcHJvamVjdE5hbWUYCCABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSOAoSb3JnYW5pemF0aW9uVW5pdElkGAkgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjUKEGNvbnRyYWN0U3RhdHVz",
            "SWQYCiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRI8ChZjb250",
            "cmFjdG9ySWRlbnRpdHlHdWlkGAsgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlEjEKDGNvbnRyYWN0b3JJZBgMIAEoCzIbLmdvb2dsZS5wcm90",
            "b2J1Zi5JbnQzMlZhbHVlEjoKFHNhbGVzbWFuSWRlbnRpdHlHdWlkGA0gASgL",
            "MhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjQKD3BheW1lbnRNZXRo",
            "b2RJZBgOIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjEKC2Rl",
            "c2NyaXB0aW9uGA8gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EjIKDHNpZ25lZFVzZXJJZBgQIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJp",
            "bmdWYWx1ZRIvCgpzYWxlc21hbklkGBEgASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDMyVmFsdWUSMgoMY29udHJhY3ROb3RlGBIgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEjQKD3RvdGFsVGF4UGVyY2VudBgTIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5GbG9hdFZhbHVlEjMKDmNvbnRyYWN0U3RhdHVz",
            "GBQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSNAoOdG90YWxU",
            "YXhBbW91bnQYFSABKAsyHC5Db250cmFjdE1hbmFnZW1lbnRBcGkuTW9uZXkS",
            "NQoPaW5zdGFsbGF0aW9uRmVlGBYgASgLMhwuQ29udHJhY3RNYW5hZ2VtZW50",
            "QXBpLk1vbmV5Ei4KCG90aGVyRmVlGBcgASgLMhwuQ29udHJhY3RNYW5hZ2Vt",
            "ZW50QXBpLk1vbmV5Ei4KCHN1YlRvdGFsGBggASgLMhwuQ29udHJhY3RNYW5h",
            "Z2VtZW50QXBpLk1vbmV5EjkKE2dyYW5kVG90YWxCZWZvcmVUYXgYGiABKAsy",
            "HC5Db250cmFjdE1hbmFnZW1lbnRBcGkuTW9uZXkSMAoKZ3JhbmRUb3RhbBgb",
            "IAEoCzIcLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Nb25leRI5CgdwYXltZW50",
            "GB0gASgLMiguQ29udHJhY3RNYW5hZ2VtZW50QXBpLlBheW1lbnRNZXRob2RH",
            "cnBjEj0KCHRpbWVMaW5lGB4gASgLMisuQ29udHJhY3RNYW5hZ2VtZW50QXBp",
            "LkNvbnRyYWN0VGltZUxpbmVHcnBjEjwKCmNvbnRyYWN0b3IYHyABKAsyKC5D",
            "b250cmFjdE1hbmFnZW1lbnRBcGkuQ29udHJhY3RvckdycGNEVE8SMwoNZmli",
            "ZXJOb2RlSW5mbxggIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRI3ChFhZ2VudENvbnRyYWN0Q29kZRghIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRIzCg1jYXNoaWVyVXNlcklkGCIgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEjUKD2VxdWlwbWVudEFtb3VudBgjIAEo",
            "CzIcLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Nb25leRI6ChRzZXJ2aWNlUGFj",
            "a2FnZUFtb3VudBglIAEoCzIcLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Nb25l",
            "eRJQCg9zZXJ2aWNlUGFja2FnZXMYJyADKAsyNy5Db250cmFjdE1hbmFnZW1l",
            "bnRBcGkuT3V0Q29udHJhY3RTZXJ2aWNlUGFja2FnZUdycGNEVE8SRQoPYXR0",
            "YWNobWVudEZpbGVzGCkgAygLMiwuQ29udHJhY3RNYW5hZ2VtZW50QXBpLkF0",
            "dGFjaG1lbnRGaWxlR3JwY0RUTxJECg9jb250cmFjdE9mVGF4ZXMYKiADKAsy",
            "Ky5Db250cmFjdE1hbmFnZW1lbnRBcGkuQ29udHJhY3RPZlRheEdycGNEVE8S",
            "OAoSY29udHJhY3RTdGF0dXNOYW1lGCsgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEjQKDnNpZ25lZFVzZXJOYW1lGCwgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEjoKFG9yZ2FuaXphdGlvblVuaXROYW1l",
            "GC0gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjUKD2Nhc2hp",
            "ZXJVc2VyTmFtZRguIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRItCgdhZ2VudElkGC8gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEjMKDWZpYmVyTm90ZUluZm8YMCABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSQAoNdGF4Q2F0ZWdvcmllcxgxIAMoCzIpLkNvbnRyYWN0",
            "TWFuYWdlbWVudEFwaS5UYXhDYXRlZ29yeUdycGNEVE8SOwoWbnVtYmVyQmls",
            "bGluZ0xpbWl0RGF5cxgyIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlEjUKD2Nhc2hpZXJGdWxsTmFtZRgzIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRJGCg9jb250cmFjdENvbnRlbnQYNCABKAsyLS5Db250",
            "cmFjdE1hbmFnZW1lbnRBcGkuQ29udHJhY3RDb250ZW50RFRPR3JwYxI/Cg1j",
            "b250cmFjdG9ySFRDGDUgASgLMiguQ29udHJhY3RNYW5hZ2VtZW50QXBpLkNv",
            "bnRyYWN0b3JHcnBjRFRPIuAHChhPdXRDb250cmFjdFNpbXBsZUdycGNEVE8S",
            "CgoCaWQYASABKAUSMgoMY29udHJhY3RDb2RlGAIgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEi8KCWFnZW50Q29kZRgDIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg5jb250cmFjdFR5cGVJZBgEIAEo",
            "CzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjEKDG1hcmtldEFyZWFJ",
            "ZBgFIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjQKDm1hcmtl",
            "dEFyZWFOYW1lGAYgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "Ei4KCXByb2plY3RJZBgHIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlEjEKC3Byb2plY3ROYW1lGAggASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlEjgKEm9yZ2FuaXphdGlvblVuaXRJZBgJIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI1ChBjb250cmFjdFN0YXR1c0lkGAog",
            "ASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSPAoWY29udHJhY3Rv",
            "cklkZW50aXR5R3VpZBgLIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRIxCgxjb250cmFjdG9ySWQYDCABKAsyGy5nb29nbGUucHJvdG9idWYu",
            "SW50MzJWYWx1ZRIxCgtkZXNjcmlwdGlvbhgPIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIyCgxzaWduZWRVc2VySWQYECABKAsyHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLwoKc2FsZXNtYW5JZBgRIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjIKDGNvbnRyYWN0Tm90ZRgS",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIwCgpncmFuZFRv",
            "dGFsGBMgASgLMhwuQ29udHJhY3RNYW5hZ2VtZW50QXBpLk1vbmV5EjgKEmNv",
            "bnRyYWN0b3JGdWxsTmFtZRgUIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJp",
            "bmdWYWx1ZRI4ChJjb250cmFjdFN0YXR1c05hbWUYFSABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUi4gQKGU91dHB1dENoYW5uZWxQb2ludEdy",
            "cGNEVE8SCgoCaWQYASABKAUSFgoOY3VycmVuY3lVbml0SWQYAiABKAUSMAoK",
            "bG9jYXRpb25JZBgDIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRIRCglwb2ludFR5cGUYBCABKAUSNgoQY3VycmVuY3lVbml0Q29kZRgFIAEo",
            "CzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRJLChNpbnN0YWxsYXRp",
            "b25BZGRyZXNzGAYgASgLMi4uQ29udHJhY3RNYW5hZ2VtZW50QXBpLkluc3Rh",
            "bGxhdGlvbkFkZHJlc3NHcnBjEjUKD2luc3RhbGxhdGlvbkZlZRgHIAEoCzIc",
            "LkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Nb25leRIuCghvdGhlckZlZRgIIAEo",
            "CzIcLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Nb25leRIxCgttb250aGx5Q29z",
            "dBgJIAEoCzIcLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Nb25leRI1Cg9lcXVp",
            "cG1lbnRBbW91bnQYCiABKAsyHC5Db250cmFjdE1hbmFnZW1lbnRBcGkuTW9u",
            "ZXkSPgoYaW5zdGFsbGF0aW9uUG9pbnRTcGxpdGVyGAsgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEkYKCmVxdWlwbWVudHMYDCADKAsyMi5D",
            "b250cmFjdE1hbmFnZW1lbnRBcGkuT3V0Q29udHJhY3RFcXVpcG1lbnRHcnBj",
            "RFRPImAKHE91dENvbnRyYWN0RXF1aXBtZW50TGlzdEdycGMSQAoEZGF0YRgB",
            "IAMoCzIyLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5PdXRDb250cmFjdEVxdWlw",
            "bWVudEdycGNEVE8i7gIKHU91dHB1dENoYW5uZWxQb2ludFJlcXVlc3RHcnBj",
            "Ei0KB29yZGVyQnkYASABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSKQoDZGlyGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EikKBHNraXAYAyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIp",
            "CgR0YWtlGAQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSLQoH",
            "ZmlsdGVycxgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIO",
            "CgZwYWdpbmcYBiABKAgSLgoIa2V5d29yZHMYByABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSLgoJcG9pbnRUeXBlGAggASgLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDMyVmFsdWUiXAoaT3V0cHV0Q2hhbm5lbFBvaW50TGlz",
            "dEdycGMSPgoEZGF0YRgBIAMoCzIwLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5P",
            "dXRwdXRDaGFubmVsUG9pbnRHcnBjRFRPIvkCChZDb250cmFjdENvbnRlbnRE",
            "VE9HcnBjEi0KB2NvbnRlbnQYASABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWUSNwoSZGlnaXRhbFNpZ25hdHVyZUlkGAIgASgLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDMyVmFsdWUSPAoXY29udHJhY3RGb3JtU2lnbmF0dXJl",
            "SWQYAyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRI/ChBkaWdp",
            "dGFsU2lnbmF0dXJlGAQgASgLMiUuQ29udHJhY3RNYW5hZ2VtZW50QXBpLlBp",
            "Y3R1cmVEVE9HcnBjEkQKFWNvbnRyYWN0Rm9ybVNpZ25hdHVyZRgFIAEoCzIl",
            "LkNvbnRyYWN0TWFuYWdlbWVudEFwaS5QaWN0dXJlRFRPR3JwYxIyCg1vdXRD",
            "b250cmFjdElkGAYgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUi",
            "egoeQ29udHJhY3RTdGF0dXNSZXBvcnRGaWx0ZXJHcnBjEiwKCGZyb21EYXRl",
            "GAEgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIqCgZ0b0RhdGUY",
            "AiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wImYKIENvbnRyYWN0",
            "U3RhdHVzUmVwb3J0UmVzcG9uc2VHcnBjEkIKBGRhdGEYASADKAsyNC5Db250",
            "cmFjdE1hbmFnZW1lbnRBcGkuQ29udHJhY3RTdGF0dXNSZXBvcnRNb2RlbEdy",
            "cGMigwEKHUNvbnRyYWN0U3RhdHVzUmVwb3J0TW9kZWxHcnBjEjgKEmNvbnRy",
            "YWN0U3RhdHVzTmFtZRgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRIYChBjb250cmFjdFN0YXR1c0lkGAIgASgFEg4KBmFtb3VudBgDIAEo",
            "BSLDCgoYUHJvbW90aW9uRGV0YWlsR3JwY01vZGVsEicKAmlkGAEgASgLMhsu",
            "Z29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSMAoLcHJvbW90aW9uSWQYAiAB",
            "KAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIzCg1wcm9tb3Rpb25D",
            "b2RlGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjcKEnBy",
            "b21vdGlvblZhbHVlVHlwZRgEIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQz",
            "MlZhbHVlEj4KGHByb21vdGlvblZhbHVlVHlwZVN0cmluZxgFIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI0Cg5wcm9tb3Rpb25WYWx1ZRgG",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRItCghxdWFudGl0",
            "eRgHIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjMKDmN1cnJl",
            "bmN5VW5pdElkGAggASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUS",
            "NgoQY3VycmVuY3lVbml0Q29kZRgJIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRIqCgRjaXR5GAogASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlEiwKBmNpdHlJZBgLIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRIuCghkaXN0cmljdBgMIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRIwCgpkaXN0cmljdElkGA0gASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEi0KB2NvdW50cnkYDiABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSLwoJY291bnRyeUlkGA8gASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4KCXNlcnZpY2VJZBgQIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjEKC3NlcnZpY2VOYW1lGBEg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjUKEHNlcnZpY2VQ",
            "YWNrYWdlSWQYEiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRI4",
            "ChJzZXJ2aWNlUGFja2FnZU5hbWUYEyABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSLgoJcHJvamVjdElkGBQgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDMyVmFsdWUSMQoLcHJvamVjdE5hbWUYFSABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMdXBkYXRlUGVyc29uGBYgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjkKFG51bWJlck9mTW9udGhB",
            "cHBsaWVkGBcgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSLwoJ",
            "c3ViamVjdElkGBggASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EhAKCGlzQ2hhbmdlGBkgASgIEhAKCGlzQWN0aXZlGBogASgIEjUKEG1pblBh",
            "eW1lbnRQZXJpb2QYGyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1",
            "ZSLxCAoSUHJvbW90aW9uR3JwY01vZGVsEicKAmlkGAEgASgLMhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDMyVmFsdWUSMwoNcHJvbW90aW9uQ29kZRgCIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIzCg1wcm9tb3Rpb25OYW1l",
            "GAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjcKEXByb21v",
            "dGlvbkRldGFpbElkGAQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEjIKDXByb21vdGlvblR5cGUYBSABKAsyGy5nb29nbGUucHJvdG9idWYu",
            "SW50MzJWYWx1ZRI5ChNwcm9tb3Rpb25UeXBlU3RyaW5nGAYgASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi0KCXN0YXJ0RGF0ZRgHIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHZW5kRGF0ZRgIIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASMQoLZGVzY3JpcHRpb24YCSAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLwoKY29udHJhY3RJ",
            "ZBgKIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjcKEnByb21v",
            "dGlvblZhbHVlVHlwZRgLIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlEi0KCHF1YW50aXR5GAwgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMy",
            "VmFsdWUSOQoUbnVtYmVyT2ZNb250aEFwcGxpZWQYDSABKAsyGy5nb29nbGUu",
            "cHJvdG9idWYuSW50MzJWYWx1ZRJAChtvdXRDb250cmFjdFNlcnZpY2VQYWNr",
            "YWdlSWQYDiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRI7ChZw",
            "cm9tb3Rpb25Gb3JDb250cmFjdElkGA8gASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDMyVmFsdWUSLgoJc2VydmljZUlkGBAgASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDMyVmFsdWUSNQoQc2VydmljZVBhY2thZ2VJZBgRIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEi4KCXByb2plY3RJZBgSIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEisKBmNpdHlJZBgTIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEi8KCmRpc3RyaWN0SWQYFCAB",
            "KAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRJJChBwcm9tb3Rpb25E",
            "ZXRhaWxzGBUgAygLMi8uQ29udHJhY3RNYW5hZ2VtZW50QXBpLlByb21vdGlv",
            "bkRldGFpbEdycGNNb2RlbCJkChpBdmFpbGFiZWxQcm9tb3Rpb25SZXNwb25z",
            "ZRJGChNwcm9tb3Rpb25HcnBjTW9kZWxzGAEgAygLMikuQ29udHJhY3RNYW5h",
            "Z2VtZW50QXBpLlByb21vdGlvbkdycGNNb2RlbDLgDQoWQ29udHJhY3RNYW5h",
            "Z2VtZW50R3JwYxJcChJGaW5kQnlDb250cmFjdG9ySWQSHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUaJi5Db250cmFjdE1hbmFnZW1lbnRBcGkuQ29u",
            "dHJhY3RHcnBjRFRPIgASXAoSRmluZEJ5Q29udHJhY3RDb2RlEhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlGiYuQ29udHJhY3RNYW5hZ2VtZW50QXBp",
            "LkNvbnRyYWN0R3JwY0RUTyIAEnAKDEdldENvbnRyYWN0cxIuLkNvbnRyYWN0",
            "TWFuYWdlbWVudEFwaS5SZXF1ZXN0R2V0Q29udHJhY3RzR3JwYxouLkNvbnRy",
            "YWN0TWFuYWdlbWVudEFwaS5Db250cmFjdFBhZ2VMaXN0R3JwY0RUTyIAEl4K",
            "CEdldEJ5SWRzEhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlGjIuQ29u",
            "dHJhY3RNYW5hZ2VtZW50QXBpLkdldE91dENvbnRyYWN0QnlJZHNSZXNwb25z",
            "ZSIAElIKCUdldERldGFpbBIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVl",
            "GiYuQ29udHJhY3RNYW5hZ2VtZW50QXBpLkNvbnRyYWN0R3JwY0RUTyIAEm4K",
            "FEdlbmVyYXRlQ29udHJhY3RDb2RlEjYuQ29udHJhY3RNYW5hZ2VtZW50QXBp",
            "LkdlbmVyYXRlQ29udHJhY3RDb2RlUmVxdWVzdEdycGMaHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUiABJfChZHZXRDb250cmFjdEJ5Q2hhbm5lbElk",
            "EhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUaJi5Db250cmFjdE1hbmFn",
            "ZW1lbnRBcGkuQ29udHJhY3RHcnBjRFRPIgASYQoXR2V0Q29udHJhY3RCeUNo",
            "YW5uZWxDSWQSHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaJi5Db250",
            "cmFjdE1hbmFnZW1lbnRBcGkuQ29udHJhY3RHcnBjRFRPIgASZQoSQ3JlYXRl",
            "ZE91dENvbnRyYWN0EhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlGi8u",
            "Q29udHJhY3RNYW5hZ2VtZW50QXBpLk91dENvbnRyYWN0SXNTdWNjZXNzR1JQ",
            "QyIAElAKFkdldE91dENvbnRyYWN0U3RhdHVzZXMSFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkaHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUiABKFAQoh",
            "R2V0T3V0Q29udHJhY3RTZXJ2aWNlUGFja2FnZUJ5SWRzEhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlGkAuQ29udHJhY3RNYW5hZ2VtZW50QXBpLk91",
            "dENvbnRyYWN0U2VydmljZVBhY2thZ2VMaXN0R3JwY1Jlc3BvbnNlIgASewoY",
            "R2V0T3V0Q29udHJhY3RFcXVpcG1lbnRzEiguQ29udHJhY3RNYW5hZ2VtZW50",
            "QXBpLlJlcXVlc3RGaWx0ZXJHcnBjGjMuQ29udHJhY3RNYW5hZ2VtZW50QXBp",
            "Lk91dENvbnRyYWN0RXF1aXBtZW50TGlzdEdycGMiABKLAQoeQXV0b0NvbXBs",
            "ZXRlT3V0cHV0Q2hhbm5lbFBvaW50EjQuQ29udHJhY3RNYW5hZ2VtZW50QXBp",
            "Lk91dHB1dENoYW5uZWxQb2ludFJlcXVlc3RHcnBjGjEuQ29udHJhY3RNYW5h",
            "Z2VtZW50QXBpLk91dHB1dENoYW5uZWxQb2ludExpc3RHcnBjIgASiwEKF0dl",
            "dFJlcG9ydENvbnRyYWN0U3RhdHVzEjUuQ29udHJhY3RNYW5hZ2VtZW50QXBp",
            "LkNvbnRyYWN0U3RhdHVzUmVwb3J0RmlsdGVyR3JwYxo3LkNvbnRyYWN0TWFu",
            "YWdlbWVudEFwaS5Db250cmFjdFN0YXR1c1JlcG9ydFJlc3BvbnNlR3JwYyIA",
            "Em8KGEdldENoYW5uZWxBZGRyZXNzZXNCeUNpZBIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRozLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5DaGFubmVs",
            "QWRkcmVzc2VzUmVzcG9uc2VHcnBjIgASZQoWR2V0QXZhaWxhYmxlUHJvbW90",
            "aW9ucxIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoxLkNvbnRyYWN0TWFuYWdl",
            "bWVudEFwaS5BdmFpbGFiZWxQcm9tb3Rpb25SZXNwb25zZSIAQiCqAh1Db250",
            "cmFjdE1hbmFnZW1lbnQuQVBJLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::ContractManagement.API.Protos.ContractorsReflection.Descriptor, global::ContractManagement.API.Protos.CommonReflection.Descriptor, global::ContractManagement.API.Protos.TaxcategoryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ChannelAddressesResponseGrpc), global::ContractManagement.API.Protos.ChannelAddressesResponseGrpc.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ChannelAddressModelGrpc), global::ContractManagement.API.Protos.ChannelAddressModelGrpc.Parser, new[]{ "Cid", "StartPointAddress", "EndPointAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.GenerateContractCodeRequestGrpc), global::ContractManagement.API.Protos.GenerateContractCodeRequestGrpc.Parser, new[]{ "IsEnterprise", "CustomerFullName", "MarketAreaId", "ProjectId", "SrvPackageIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.OutContractIsSuccessGRPC), global::ContractManagement.API.Protos.OutContractIsSuccessGRPC.Parser, new[]{ "IsSuccess", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.GetOutContractByIdsResponse), global::ContractManagement.API.Protos.GetOutContractByIdsResponse.Parser, new[]{ "OutContracts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.OutContractListGrpcResponse), global::ContractManagement.API.Protos.OutContractListGrpcResponse.Parser, new[]{ "ContractDtos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.OutContractServicePackageListGrpcResponse), global::ContractManagement.API.Protos.OutContractServicePackageListGrpcResponse.Parser, new[]{ "OutContractServicePackages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.RequestGetContractsGrpc), global::ContractManagement.API.Protos.RequestGetContractsGrpc.Parser, new[]{ "OrderBy", "Dir", "Skip", "Take", "Filters", "Paging", "Keywords", "ProjectIds", "ContractorId", "ContractStatusId", "ServiceIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ContractPageListGrpcDTO), global::ContractManagement.API.Protos.ContractPageListGrpcDTO.Parser, new[]{ "Subset", "Count", "PageCount", "TotalItemCount", "Skip", "Take", "HasPreviousPage", "HasNextPage", "IsFirstPage", "IsLastPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.PaymentMethodGrpc), global::ContractManagement.API.Protos.PaymentMethodGrpc.Parser, new[]{ "Form", "Method", "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ContractTimeLineGrpc), global::ContractManagement.API.Protos.ContractTimeLineGrpc.Parser, new[]{ "RenewPeriod", "PaymentPeriod", "Expiration", "Liquidation", "Effective", "Signed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.AddressGrpc), global::ContractManagement.API.Protos.AddressGrpc.Parser, new[]{ "Street", "District", "DistrictId", "City", "CityId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.AttachmentFileGrpcDTO), global::ContractManagement.API.Protos.AttachmentFileGrpcDTO.Parser, new[]{ "Id", "OutContractId", "ResourceStorage", "Name", "FileName", "FilePath", "Size", "FileType", "Extension", "RedirectLink", "TemporaryUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ContractOfTaxGrpcDTO), global::ContractManagement.API.Protos.ContractOfTaxGrpcDTO.Parser, new[]{ "Id", "ValueTax", "TaxName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO), global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO.Parser, new[]{ "CurrencyUnitId", "CurrencyUnitCode", "OutContractId", "ServicePackageId", "ServiceId", "ServiceName", "PackageName", "IsFreeStaticIp", "BandwidthLabel", "InternationalBandwidth", "DomesticBandwidth", "InternationalBandwidthUom", "DomesticBandwidthUom", "TimeLine", "CustomerCode", "CId", "RadiusAccount", "RadiusPassword", "InstallationFee", "OtherFee", "OrgPackagePrice", "PackagePrice", "PackagePriceType", "StartPointChannelId", "EndPointChannelId", "HasStartAndEndPoint", "PromotionAmount", "EquipmentAmount", "StatusId", "SubTotalBeforeTax", "GrandTotalBeforeTax", "TaxPercent", "TaxAmount", "SubTotal", "GrandTotal", "TransactionServicePackageId", "IsRadiusAccountCreated", "OldId", "IsInFirstBilling", "RadiusServerId", "IsTechnicalConfirmation", "ChannelGroupId", "IsHasPrice", "IsDefaultSLAByServiceId", "PaymentTargetId", "Id", "OrganizationPath", "StartPoint", "EndPoint", "OutContractServicePackageTaxes", "ContractCode", "Text" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.OutContractServicePackageTaxGrpcDTO), global::ContractManagement.API.Protos.OutContractServicePackageTaxGrpcDTO.Parser, new[]{ "OutContractServicePackageId", "TaxCategoryId", "TaxCategoryName", "TaxCategoryCode", "TaxValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO), global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO.Parser, new[]{ "Id", "OutContractId", "OutContractPackageId", "ServiceId", "ServiceName", "ServicePackageId", "ServicePackageName", "EquipmentName", "EquipmentPictureUrl", "EquipmentUom", "UnitPrice", "ExaminedUnit", "RealUnit", "ReclaimedUnit", "IsInSurveyPlan", "IsFree", "HasToReclaim", "SerialCode", "DeviceCode", "Manufacturer", "Specifications", "StatusId", "EquipmentId", "GrandTotal", "UnitPriceBeforeTax", "TransactionEquipmentId", "CurrencyUnitId", "CurrencyUnitCode", "InstallationFullAddress", "ActivatedUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ContractGrpcDTO), global::ContractManagement.API.Protos.ContractGrpcDTO.Parser, new[]{ "Id", "ContractCode", "AgentCode", "ContractTypeId", "MarketAreaId", "MarketAreaName", "ProjectId", "ProjectName", "OrganizationUnitId", "ContractStatusId", "ContractorIdentityGuid", "ContractorId", "SalesmanIdentityGuid", "PaymentMethodId", "Description", "SignedUserId", "SalesmanId", "ContractNote", "TotalTaxPercent", "ContractStatus", "TotalTaxAmount", "InstallationFee", "OtherFee", "SubTotal", "GrandTotalBeforeTax", "GrandTotal", "Payment", "TimeLine", "Contractor", "FiberNodeInfo", "AgentContractCode", "CashierUserId", "EquipmentAmount", "ServicePackageAmount", "ServicePackages", "AttachmentFiles", "ContractOfTaxes", "ContractStatusName", "SignedUserName", "OrganizationUnitName", "CashierUserName", "AgentId", "FiberNoteInfo", "TaxCategories", "NumberBillingLimitDays", "CashierFullName", "ContractContent", "ContractorHTC" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.OutContractSimpleGrpcDTO), global::ContractManagement.API.Protos.OutContractSimpleGrpcDTO.Parser, new[]{ "Id", "ContractCode", "AgentCode", "ContractTypeId", "MarketAreaId", "MarketAreaName", "ProjectId", "ProjectName", "OrganizationUnitId", "ContractStatusId", "ContractorIdentityGuid", "ContractorId", "Description", "SignedUserId", "SalesmanId", "ContractNote", "GrandTotal", "ContractorFullName", "ContractStatusName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO), global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO.Parser, new[]{ "Id", "CurrencyUnitId", "LocationId", "PointType", "CurrencyUnitCode", "InstallationAddress", "InstallationFee", "OtherFee", "MonthlyCost", "EquipmentAmount", "InstallationPointSpliter", "Equipments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.OutContractEquipmentListGrpc), global::ContractManagement.API.Protos.OutContractEquipmentListGrpc.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.OutputChannelPointRequestGrpc), global::ContractManagement.API.Protos.OutputChannelPointRequestGrpc.Parser, new[]{ "OrderBy", "Dir", "Skip", "Take", "Filters", "Paging", "Keywords", "PointType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.OutputChannelPointListGrpc), global::ContractManagement.API.Protos.OutputChannelPointListGrpc.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ContractContentDTOGrpc), global::ContractManagement.API.Protos.ContractContentDTOGrpc.Parser, new[]{ "Content", "DigitalSignatureId", "ContractFormSignatureId", "DigitalSignature", "ContractFormSignature", "OutContractId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ContractStatusReportFilterGrpc), global::ContractManagement.API.Protos.ContractStatusReportFilterGrpc.Parser, new[]{ "FromDate", "ToDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ContractStatusReportResponseGrpc), global::ContractManagement.API.Protos.ContractStatusReportResponseGrpc.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ContractStatusReportModelGrpc), global::ContractManagement.API.Protos.ContractStatusReportModelGrpc.Parser, new[]{ "ContractStatusName", "ContractStatusId", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.PromotionDetailGrpcModel), global::ContractManagement.API.Protos.PromotionDetailGrpcModel.Parser, new[]{ "Id", "PromotionId", "PromotionCode", "PromotionValueType", "PromotionValueTypeString", "PromotionValue", "Quantity", "CurrencyUnitId", "CurrencyUnitCode", "City", "CityId", "District", "DistrictId", "Country", "CountryId", "ServiceId", "ServiceName", "ServicePackageId", "ServicePackageName", "ProjectId", "ProjectName", "UpdatePerson", "NumberOfMonthApplied", "SubjectId", "IsChange", "IsActive", "MinPaymentPeriod" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.PromotionGrpcModel), global::ContractManagement.API.Protos.PromotionGrpcModel.Parser, new[]{ "Id", "PromotionCode", "PromotionName", "PromotionDetailId", "PromotionType", "PromotionTypeString", "StartDate", "EndDate", "Description", "ContractId", "PromotionValueType", "Quantity", "NumberOfMonthApplied", "OutContractServicePackageId", "PromotionForContractId", "ServiceId", "ServicePackageId", "ProjectId", "CityId", "DistrictId", "PromotionDetails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.AvailabelPromotionResponse), global::ContractManagement.API.Protos.AvailabelPromotionResponse.Parser, new[]{ "PromotionGrpcModels" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ChannelAddressesResponseGrpc : pb::IMessage<ChannelAddressesResponseGrpc> {
    private static readonly pb::MessageParser<ChannelAddressesResponseGrpc> _parser = new pb::MessageParser<ChannelAddressesResponseGrpc>(() => new ChannelAddressesResponseGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChannelAddressesResponseGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelAddressesResponseGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelAddressesResponseGrpc(ChannelAddressesResponseGrpc other) : this() {
      result_ = other.result_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelAddressesResponseGrpc Clone() {
      return new ChannelAddressesResponseGrpc(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ChannelAddressModelGrpc> _repeated_result_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.ChannelAddressModelGrpc.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ChannelAddressModelGrpc> result_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ChannelAddressModelGrpc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ChannelAddressModelGrpc> Result {
      get { return result_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChannelAddressesResponseGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChannelAddressesResponseGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!result_.Equals(other.result_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= result_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      result_.WriteTo(output, _repeated_result_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += result_.CalculateSize(_repeated_result_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChannelAddressesResponseGrpc other) {
      if (other == null) {
        return;
      }
      result_.Add(other.result_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            result_.AddEntriesFrom(input, _repeated_result_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChannelAddressModelGrpc : pb::IMessage<ChannelAddressModelGrpc> {
    private static readonly pb::MessageParser<ChannelAddressModelGrpc> _parser = new pb::MessageParser<ChannelAddressModelGrpc>(() => new ChannelAddressModelGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChannelAddressModelGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelAddressModelGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelAddressModelGrpc(ChannelAddressModelGrpc other) : this() {
      Cid = other.Cid;
      startPointAddress_ = other.startPointAddress_ != null ? other.startPointAddress_.Clone() : null;
      endPointAddress_ = other.endPointAddress_ != null ? other.endPointAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelAddressModelGrpc Clone() {
      return new ChannelAddressModelGrpc(this);
    }

    /// <summary>Field number for the "cid" field.</summary>
    public const int CidFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_cid_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string cid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cid {
      get { return cid_; }
      set {
        cid_ = value;
      }
    }


    /// <summary>Field number for the "startPointAddress" field.</summary>
    public const int StartPointAddressFieldNumber = 2;
    private global::ContractManagement.API.Protos.InstallationAddressGrpc startPointAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.InstallationAddressGrpc StartPointAddress {
      get { return startPointAddress_; }
      set {
        startPointAddress_ = value;
      }
    }

    /// <summary>Field number for the "endPointAddress" field.</summary>
    public const int EndPointAddressFieldNumber = 3;
    private global::ContractManagement.API.Protos.InstallationAddressGrpc endPointAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.InstallationAddressGrpc EndPointAddress {
      get { return endPointAddress_; }
      set {
        endPointAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChannelAddressModelGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChannelAddressModelGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cid != other.Cid) return false;
      if (!object.Equals(StartPointAddress, other.StartPointAddress)) return false;
      if (!object.Equals(EndPointAddress, other.EndPointAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cid_ != null) hash ^= Cid.GetHashCode();
      if (startPointAddress_ != null) hash ^= StartPointAddress.GetHashCode();
      if (endPointAddress_ != null) hash ^= EndPointAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cid_ != null) {
        _single_cid_codec.WriteTagAndValue(output, Cid);
      }
      if (startPointAddress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StartPointAddress);
      }
      if (endPointAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EndPointAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cid_ != null) {
        size += _single_cid_codec.CalculateSizeWithTag(Cid);
      }
      if (startPointAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartPointAddress);
      }
      if (endPointAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndPointAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChannelAddressModelGrpc other) {
      if (other == null) {
        return;
      }
      if (other.cid_ != null) {
        if (cid_ == null || other.Cid != "") {
          Cid = other.Cid;
        }
      }
      if (other.startPointAddress_ != null) {
        if (startPointAddress_ == null) {
          StartPointAddress = new global::ContractManagement.API.Protos.InstallationAddressGrpc();
        }
        StartPointAddress.MergeFrom(other.StartPointAddress);
      }
      if (other.endPointAddress_ != null) {
        if (endPointAddress_ == null) {
          EndPointAddress = new global::ContractManagement.API.Protos.InstallationAddressGrpc();
        }
        EndPointAddress.MergeFrom(other.EndPointAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_cid_codec.Read(input);
            if (cid_ == null || value != "") {
              Cid = value;
            }
            break;
          }
          case 18: {
            if (startPointAddress_ == null) {
              StartPointAddress = new global::ContractManagement.API.Protos.InstallationAddressGrpc();
            }
            input.ReadMessage(StartPointAddress);
            break;
          }
          case 26: {
            if (endPointAddress_ == null) {
              EndPointAddress = new global::ContractManagement.API.Protos.InstallationAddressGrpc();
            }
            input.ReadMessage(EndPointAddress);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GenerateContractCodeRequestGrpc : pb::IMessage<GenerateContractCodeRequestGrpc> {
    private static readonly pb::MessageParser<GenerateContractCodeRequestGrpc> _parser = new pb::MessageParser<GenerateContractCodeRequestGrpc>(() => new GenerateContractCodeRequestGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateContractCodeRequestGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateContractCodeRequestGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateContractCodeRequestGrpc(GenerateContractCodeRequestGrpc other) : this() {
      isEnterprise_ = other.isEnterprise_;
      CustomerFullName = other.CustomerFullName;
      MarketAreaId = other.MarketAreaId;
      ProjectId = other.ProjectId;
      SrvPackageIds = other.SrvPackageIds;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateContractCodeRequestGrpc Clone() {
      return new GenerateContractCodeRequestGrpc(this);
    }

    /// <summary>Field number for the "isEnterprise" field.</summary>
    public const int IsEnterpriseFieldNumber = 1;
    private bool isEnterprise_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEnterprise {
      get { return isEnterprise_; }
      set {
        isEnterprise_ = value;
      }
    }

    /// <summary>Field number for the "customerFullName" field.</summary>
    public const int CustomerFullNameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_customerFullName_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string customerFullName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerFullName {
      get { return customerFullName_; }
      set {
        customerFullName_ = value;
      }
    }


    /// <summary>Field number for the "marketAreaId" field.</summary>
    public const int MarketAreaIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_marketAreaId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? marketAreaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? MarketAreaId {
      get { return marketAreaId_; }
      set {
        marketAreaId_ = value;
      }
    }


    /// <summary>Field number for the "projectId" field.</summary>
    public const int ProjectIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_projectId_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? projectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ProjectId {
      get { return projectId_; }
      set {
        projectId_ = value;
      }
    }


    /// <summary>Field number for the "srvPackageIds" field.</summary>
    public const int SrvPackageIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_srvPackageIds_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string srvPackageIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SrvPackageIds {
      get { return srvPackageIds_; }
      set {
        srvPackageIds_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateContractCodeRequestGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateContractCodeRequestGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsEnterprise != other.IsEnterprise) return false;
      if (CustomerFullName != other.CustomerFullName) return false;
      if (MarketAreaId != other.MarketAreaId) return false;
      if (ProjectId != other.ProjectId) return false;
      if (SrvPackageIds != other.SrvPackageIds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsEnterprise != false) hash ^= IsEnterprise.GetHashCode();
      if (customerFullName_ != null) hash ^= CustomerFullName.GetHashCode();
      if (marketAreaId_ != null) hash ^= MarketAreaId.GetHashCode();
      if (projectId_ != null) hash ^= ProjectId.GetHashCode();
      if (srvPackageIds_ != null) hash ^= SrvPackageIds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsEnterprise != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsEnterprise);
      }
      if (customerFullName_ != null) {
        _single_customerFullName_codec.WriteTagAndValue(output, CustomerFullName);
      }
      if (marketAreaId_ != null) {
        _single_marketAreaId_codec.WriteTagAndValue(output, MarketAreaId);
      }
      if (projectId_ != null) {
        _single_projectId_codec.WriteTagAndValue(output, ProjectId);
      }
      if (srvPackageIds_ != null) {
        _single_srvPackageIds_codec.WriteTagAndValue(output, SrvPackageIds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsEnterprise != false) {
        size += 1 + 1;
      }
      if (customerFullName_ != null) {
        size += _single_customerFullName_codec.CalculateSizeWithTag(CustomerFullName);
      }
      if (marketAreaId_ != null) {
        size += _single_marketAreaId_codec.CalculateSizeWithTag(MarketAreaId);
      }
      if (projectId_ != null) {
        size += _single_projectId_codec.CalculateSizeWithTag(ProjectId);
      }
      if (srvPackageIds_ != null) {
        size += _single_srvPackageIds_codec.CalculateSizeWithTag(SrvPackageIds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateContractCodeRequestGrpc other) {
      if (other == null) {
        return;
      }
      if (other.IsEnterprise != false) {
        IsEnterprise = other.IsEnterprise;
      }
      if (other.customerFullName_ != null) {
        if (customerFullName_ == null || other.CustomerFullName != "") {
          CustomerFullName = other.CustomerFullName;
        }
      }
      if (other.marketAreaId_ != null) {
        if (marketAreaId_ == null || other.MarketAreaId != 0) {
          MarketAreaId = other.MarketAreaId;
        }
      }
      if (other.projectId_ != null) {
        if (projectId_ == null || other.ProjectId != 0) {
          ProjectId = other.ProjectId;
        }
      }
      if (other.srvPackageIds_ != null) {
        if (srvPackageIds_ == null || other.SrvPackageIds != "") {
          SrvPackageIds = other.SrvPackageIds;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsEnterprise = input.ReadBool();
            break;
          }
          case 18: {
            string value = _single_customerFullName_codec.Read(input);
            if (customerFullName_ == null || value != "") {
              CustomerFullName = value;
            }
            break;
          }
          case 26: {
            int? value = _single_marketAreaId_codec.Read(input);
            if (marketAreaId_ == null || value != 0) {
              MarketAreaId = value;
            }
            break;
          }
          case 34: {
            int? value = _single_projectId_codec.Read(input);
            if (projectId_ == null || value != 0) {
              ProjectId = value;
            }
            break;
          }
          case 42: {
            string value = _single_srvPackageIds_codec.Read(input);
            if (srvPackageIds_ == null || value != "") {
              SrvPackageIds = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutContractIsSuccessGRPC : pb::IMessage<OutContractIsSuccessGRPC> {
    private static readonly pb::MessageParser<OutContractIsSuccessGRPC> _parser = new pb::MessageParser<OutContractIsSuccessGRPC>(() => new OutContractIsSuccessGRPC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutContractIsSuccessGRPC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractIsSuccessGRPC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractIsSuccessGRPC(OutContractIsSuccessGRPC other) : this() {
      isSuccess_ = other.isSuccess_;
      Message = other.Message;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractIsSuccessGRPC Clone() {
      return new OutContractIsSuccessGRPC(this);
    }

    /// <summary>Field number for the "IsSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 1;
    private bool isSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_message_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutContractIsSuccessGRPC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutContractIsSuccessGRPC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSuccess != other.IsSuccess) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSuccess);
      }
      if (message_ != null) {
        _single_message_codec.WriteTagAndValue(output, Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSuccess != false) {
        size += 1 + 1;
      }
      if (message_ != null) {
        size += _single_message_codec.CalculateSizeWithTag(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutContractIsSuccessGRPC other) {
      if (other == null) {
        return;
      }
      if (other.IsSuccess != false) {
        IsSuccess = other.IsSuccess;
      }
      if (other.message_ != null) {
        if (message_ == null || other.Message != "") {
          Message = other.Message;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSuccess = input.ReadBool();
            break;
          }
          case 18: {
            string value = _single_message_codec.Read(input);
            if (message_ == null || value != "") {
              Message = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetOutContractByIdsResponse : pb::IMessage<GetOutContractByIdsResponse> {
    private static readonly pb::MessageParser<GetOutContractByIdsResponse> _parser = new pb::MessageParser<GetOutContractByIdsResponse>(() => new GetOutContractByIdsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOutContractByIdsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOutContractByIdsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOutContractByIdsResponse(GetOutContractByIdsResponse other) : this() {
      outContracts_ = other.outContracts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOutContractByIdsResponse Clone() {
      return new GetOutContractByIdsResponse(this);
    }

    /// <summary>Field number for the "outContracts" field.</summary>
    public const int OutContractsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.OutContractSimpleGrpcDTO> _repeated_outContracts_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.OutContractSimpleGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractSimpleGrpcDTO> outContracts_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractSimpleGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractSimpleGrpcDTO> OutContracts {
      get { return outContracts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOutContractByIdsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOutContractByIdsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!outContracts_.Equals(other.outContracts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= outContracts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      outContracts_.WriteTo(output, _repeated_outContracts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += outContracts_.CalculateSize(_repeated_outContracts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOutContractByIdsResponse other) {
      if (other == null) {
        return;
      }
      outContracts_.Add(other.outContracts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            outContracts_.AddEntriesFrom(input, _repeated_outContracts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutContractListGrpcResponse : pb::IMessage<OutContractListGrpcResponse> {
    private static readonly pb::MessageParser<OutContractListGrpcResponse> _parser = new pb::MessageParser<OutContractListGrpcResponse>(() => new OutContractListGrpcResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutContractListGrpcResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractListGrpcResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractListGrpcResponse(OutContractListGrpcResponse other) : this() {
      contractDtos_ = other.contractDtos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractListGrpcResponse Clone() {
      return new OutContractListGrpcResponse(this);
    }

    /// <summary>Field number for the "contractDtos" field.</summary>
    public const int ContractDtosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ContractGrpcDTO> _repeated_contractDtos_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.ContractGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ContractGrpcDTO> contractDtos_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ContractGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ContractGrpcDTO> ContractDtos {
      get { return contractDtos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutContractListGrpcResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutContractListGrpcResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!contractDtos_.Equals(other.contractDtos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= contractDtos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      contractDtos_.WriteTo(output, _repeated_contractDtos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += contractDtos_.CalculateSize(_repeated_contractDtos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutContractListGrpcResponse other) {
      if (other == null) {
        return;
      }
      contractDtos_.Add(other.contractDtos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            contractDtos_.AddEntriesFrom(input, _repeated_contractDtos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutContractServicePackageListGrpcResponse : pb::IMessage<OutContractServicePackageListGrpcResponse> {
    private static readonly pb::MessageParser<OutContractServicePackageListGrpcResponse> _parser = new pb::MessageParser<OutContractServicePackageListGrpcResponse>(() => new OutContractServicePackageListGrpcResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutContractServicePackageListGrpcResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractServicePackageListGrpcResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractServicePackageListGrpcResponse(OutContractServicePackageListGrpcResponse other) : this() {
      outContractServicePackages_ = other.outContractServicePackages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractServicePackageListGrpcResponse Clone() {
      return new OutContractServicePackageListGrpcResponse(this);
    }

    /// <summary>Field number for the "outContractServicePackages" field.</summary>
    public const int OutContractServicePackagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO> _repeated_outContractServicePackages_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO> outContractServicePackages_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO> OutContractServicePackages {
      get { return outContractServicePackages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutContractServicePackageListGrpcResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutContractServicePackageListGrpcResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!outContractServicePackages_.Equals(other.outContractServicePackages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= outContractServicePackages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      outContractServicePackages_.WriteTo(output, _repeated_outContractServicePackages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += outContractServicePackages_.CalculateSize(_repeated_outContractServicePackages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutContractServicePackageListGrpcResponse other) {
      if (other == null) {
        return;
      }
      outContractServicePackages_.Add(other.outContractServicePackages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            outContractServicePackages_.AddEntriesFrom(input, _repeated_outContractServicePackages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestGetContractsGrpc : pb::IMessage<RequestGetContractsGrpc> {
    private static readonly pb::MessageParser<RequestGetContractsGrpc> _parser = new pb::MessageParser<RequestGetContractsGrpc>(() => new RequestGetContractsGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestGetContractsGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetContractsGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetContractsGrpc(RequestGetContractsGrpc other) : this() {
      OrderBy = other.OrderBy;
      Dir = other.Dir;
      Skip = other.Skip;
      Take = other.Take;
      Filters = other.Filters;
      paging_ = other.paging_;
      Keywords = other.Keywords;
      ProjectIds = other.ProjectIds;
      ContractorId = other.ContractorId;
      ContractStatusId = other.ContractStatusId;
      ServiceIds = other.ServiceIds;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetContractsGrpc Clone() {
      return new RequestGetContractsGrpc(this);
    }

    /// <summary>Field number for the "orderBy" field.</summary>
    public const int OrderByFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_orderBy_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string orderBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = value;
      }
    }


    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_dir_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_filters_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string filters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }


    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 6;
    private bool paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "keywords" field.</summary>
    public const int KeywordsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_keywords_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string keywords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Keywords {
      get { return keywords_; }
      set {
        keywords_ = value;
      }
    }


    /// <summary>Field number for the "projectIds" field.</summary>
    public const int ProjectIdsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_projectIds_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string projectIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectIds {
      get { return projectIds_; }
      set {
        projectIds_ = value;
      }
    }


    /// <summary>Field number for the "contractorId" field.</summary>
    public const int ContractorIdFieldNumber = 9;
    private static readonly pb::FieldCodec<int?> _single_contractorId_codec = pb::FieldCodec.ForStructWrapper<int>(74);
    private int? contractorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractorId {
      get { return contractorId_; }
      set {
        contractorId_ = value;
      }
    }


    /// <summary>Field number for the "contractStatusId" field.</summary>
    public const int ContractStatusIdFieldNumber = 10;
    private static readonly pb::FieldCodec<int?> _single_contractStatusId_codec = pb::FieldCodec.ForStructWrapper<int>(82);
    private int? contractStatusId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractStatusId {
      get { return contractStatusId_; }
      set {
        contractStatusId_ = value;
      }
    }


    /// <summary>Field number for the "serviceIds" field.</summary>
    public const int ServiceIdsFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_serviceIds_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string serviceIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceIds {
      get { return serviceIds_; }
      set {
        serviceIds_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestGetContractsGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestGetContractsGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderBy != other.OrderBy) return false;
      if (Dir != other.Dir) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (Filters != other.Filters) return false;
      if (Paging != other.Paging) return false;
      if (Keywords != other.Keywords) return false;
      if (ProjectIds != other.ProjectIds) return false;
      if (ContractorId != other.ContractorId) return false;
      if (ContractStatusId != other.ContractStatusId) return false;
      if (ServiceIds != other.ServiceIds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (orderBy_ != null) hash ^= OrderBy.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (filters_ != null) hash ^= Filters.GetHashCode();
      if (Paging != false) hash ^= Paging.GetHashCode();
      if (keywords_ != null) hash ^= Keywords.GetHashCode();
      if (projectIds_ != null) hash ^= ProjectIds.GetHashCode();
      if (contractorId_ != null) hash ^= ContractorId.GetHashCode();
      if (contractStatusId_ != null) hash ^= ContractStatusId.GetHashCode();
      if (serviceIds_ != null) hash ^= ServiceIds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (orderBy_ != null) {
        _single_orderBy_codec.WriteTagAndValue(output, OrderBy);
      }
      if (dir_ != null) {
        _single_dir_codec.WriteTagAndValue(output, Dir);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (filters_ != null) {
        _single_filters_codec.WriteTagAndValue(output, Filters);
      }
      if (Paging != false) {
        output.WriteRawTag(48);
        output.WriteBool(Paging);
      }
      if (keywords_ != null) {
        _single_keywords_codec.WriteTagAndValue(output, Keywords);
      }
      if (projectIds_ != null) {
        _single_projectIds_codec.WriteTagAndValue(output, ProjectIds);
      }
      if (contractorId_ != null) {
        _single_contractorId_codec.WriteTagAndValue(output, ContractorId);
      }
      if (contractStatusId_ != null) {
        _single_contractStatusId_codec.WriteTagAndValue(output, ContractStatusId);
      }
      if (serviceIds_ != null) {
        _single_serviceIds_codec.WriteTagAndValue(output, ServiceIds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (orderBy_ != null) {
        size += _single_orderBy_codec.CalculateSizeWithTag(OrderBy);
      }
      if (dir_ != null) {
        size += _single_dir_codec.CalculateSizeWithTag(Dir);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (filters_ != null) {
        size += _single_filters_codec.CalculateSizeWithTag(Filters);
      }
      if (Paging != false) {
        size += 1 + 1;
      }
      if (keywords_ != null) {
        size += _single_keywords_codec.CalculateSizeWithTag(Keywords);
      }
      if (projectIds_ != null) {
        size += _single_projectIds_codec.CalculateSizeWithTag(ProjectIds);
      }
      if (contractorId_ != null) {
        size += _single_contractorId_codec.CalculateSizeWithTag(ContractorId);
      }
      if (contractStatusId_ != null) {
        size += _single_contractStatusId_codec.CalculateSizeWithTag(ContractStatusId);
      }
      if (serviceIds_ != null) {
        size += _single_serviceIds_codec.CalculateSizeWithTag(ServiceIds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestGetContractsGrpc other) {
      if (other == null) {
        return;
      }
      if (other.orderBy_ != null) {
        if (orderBy_ == null || other.OrderBy != "") {
          OrderBy = other.OrderBy;
        }
      }
      if (other.dir_ != null) {
        if (dir_ == null || other.Dir != "") {
          Dir = other.Dir;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.filters_ != null) {
        if (filters_ == null || other.Filters != "") {
          Filters = other.Filters;
        }
      }
      if (other.Paging != false) {
        Paging = other.Paging;
      }
      if (other.keywords_ != null) {
        if (keywords_ == null || other.Keywords != "") {
          Keywords = other.Keywords;
        }
      }
      if (other.projectIds_ != null) {
        if (projectIds_ == null || other.ProjectIds != "") {
          ProjectIds = other.ProjectIds;
        }
      }
      if (other.contractorId_ != null) {
        if (contractorId_ == null || other.ContractorId != 0) {
          ContractorId = other.ContractorId;
        }
      }
      if (other.contractStatusId_ != null) {
        if (contractStatusId_ == null || other.ContractStatusId != 0) {
          ContractStatusId = other.ContractStatusId;
        }
      }
      if (other.serviceIds_ != null) {
        if (serviceIds_ == null || other.ServiceIds != "") {
          ServiceIds = other.ServiceIds;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_orderBy_codec.Read(input);
            if (orderBy_ == null || value != "") {
              OrderBy = value;
            }
            break;
          }
          case 18: {
            string value = _single_dir_codec.Read(input);
            if (dir_ == null || value != "") {
              Dir = value;
            }
            break;
          }
          case 26: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 34: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 42: {
            string value = _single_filters_codec.Read(input);
            if (filters_ == null || value != "") {
              Filters = value;
            }
            break;
          }
          case 48: {
            Paging = input.ReadBool();
            break;
          }
          case 58: {
            string value = _single_keywords_codec.Read(input);
            if (keywords_ == null || value != "") {
              Keywords = value;
            }
            break;
          }
          case 66: {
            string value = _single_projectIds_codec.Read(input);
            if (projectIds_ == null || value != "") {
              ProjectIds = value;
            }
            break;
          }
          case 74: {
            int? value = _single_contractorId_codec.Read(input);
            if (contractorId_ == null || value != 0) {
              ContractorId = value;
            }
            break;
          }
          case 82: {
            int? value = _single_contractStatusId_codec.Read(input);
            if (contractStatusId_ == null || value != 0) {
              ContractStatusId = value;
            }
            break;
          }
          case 90: {
            string value = _single_serviceIds_codec.Read(input);
            if (serviceIds_ == null || value != "") {
              ServiceIds = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractPageListGrpcDTO : pb::IMessage<ContractPageListGrpcDTO> {
    private static readonly pb::MessageParser<ContractPageListGrpcDTO> _parser = new pb::MessageParser<ContractPageListGrpcDTO>(() => new ContractPageListGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractPageListGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractPageListGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractPageListGrpcDTO(ContractPageListGrpcDTO other) : this() {
      subset_ = other.subset_.Clone();
      Count = other.Count;
      PageCount = other.PageCount;
      TotalItemCount = other.TotalItemCount;
      Skip = other.Skip;
      Take = other.Take;
      hasPreviousPage_ = other.hasPreviousPage_;
      hasNextPage_ = other.hasNextPage_;
      isFirstPage_ = other.isFirstPage_;
      isLastPage_ = other.isLastPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractPageListGrpcDTO Clone() {
      return new ContractPageListGrpcDTO(this);
    }

    /// <summary>Field number for the "subset" field.</summary>
    public const int SubsetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ContractGrpcDTO> _repeated_subset_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.ContractGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ContractGrpcDTO> subset_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ContractGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ContractGrpcDTO> Subset {
      get { return subset_; }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_count_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }


    /// <summary>Field number for the "pageCount" field.</summary>
    public const int PageCountFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_pageCount_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? pageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PageCount {
      get { return pageCount_; }
      set {
        pageCount_ = value;
      }
    }


    /// <summary>Field number for the "totalItemCount" field.</summary>
    public const int TotalItemCountFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_totalItemCount_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? totalItemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TotalItemCount {
      get { return totalItemCount_; }
      set {
        totalItemCount_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "hasPreviousPage" field.</summary>
    public const int HasPreviousPageFieldNumber = 7;
    private bool hasPreviousPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreviousPage {
      get { return hasPreviousPage_; }
      set {
        hasPreviousPage_ = value;
      }
    }

    /// <summary>Field number for the "hasNextPage" field.</summary>
    public const int HasNextPageFieldNumber = 8;
    private bool hasNextPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPage {
      get { return hasNextPage_; }
      set {
        hasNextPage_ = value;
      }
    }

    /// <summary>Field number for the "isFirstPage" field.</summary>
    public const int IsFirstPageFieldNumber = 9;
    private bool isFirstPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirstPage {
      get { return isFirstPage_; }
      set {
        isFirstPage_ = value;
      }
    }

    /// <summary>Field number for the "isLastPage" field.</summary>
    public const int IsLastPageFieldNumber = 10;
    private bool isLastPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastPage {
      get { return isLastPage_; }
      set {
        isLastPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractPageListGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractPageListGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subset_.Equals(other.subset_)) return false;
      if (Count != other.Count) return false;
      if (PageCount != other.PageCount) return false;
      if (TotalItemCount != other.TotalItemCount) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (HasPreviousPage != other.HasPreviousPage) return false;
      if (HasNextPage != other.HasNextPage) return false;
      if (IsFirstPage != other.IsFirstPage) return false;
      if (IsLastPage != other.IsLastPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subset_.GetHashCode();
      if (count_ != null) hash ^= Count.GetHashCode();
      if (pageCount_ != null) hash ^= PageCount.GetHashCode();
      if (totalItemCount_ != null) hash ^= TotalItemCount.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (HasPreviousPage != false) hash ^= HasPreviousPage.GetHashCode();
      if (HasNextPage != false) hash ^= HasNextPage.GetHashCode();
      if (IsFirstPage != false) hash ^= IsFirstPage.GetHashCode();
      if (IsLastPage != false) hash ^= IsLastPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subset_.WriteTo(output, _repeated_subset_codec);
      if (count_ != null) {
        _single_count_codec.WriteTagAndValue(output, Count);
      }
      if (pageCount_ != null) {
        _single_pageCount_codec.WriteTagAndValue(output, PageCount);
      }
      if (totalItemCount_ != null) {
        _single_totalItemCount_codec.WriteTagAndValue(output, TotalItemCount);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (HasPreviousPage != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasPreviousPage);
      }
      if (HasNextPage != false) {
        output.WriteRawTag(64);
        output.WriteBool(HasNextPage);
      }
      if (IsFirstPage != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsFirstPage);
      }
      if (IsLastPage != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsLastPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subset_.CalculateSize(_repeated_subset_codec);
      if (count_ != null) {
        size += _single_count_codec.CalculateSizeWithTag(Count);
      }
      if (pageCount_ != null) {
        size += _single_pageCount_codec.CalculateSizeWithTag(PageCount);
      }
      if (totalItemCount_ != null) {
        size += _single_totalItemCount_codec.CalculateSizeWithTag(TotalItemCount);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (HasPreviousPage != false) {
        size += 1 + 1;
      }
      if (HasNextPage != false) {
        size += 1 + 1;
      }
      if (IsFirstPage != false) {
        size += 1 + 1;
      }
      if (IsLastPage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractPageListGrpcDTO other) {
      if (other == null) {
        return;
      }
      subset_.Add(other.subset_);
      if (other.count_ != null) {
        if (count_ == null || other.Count != 0) {
          Count = other.Count;
        }
      }
      if (other.pageCount_ != null) {
        if (pageCount_ == null || other.PageCount != 0) {
          PageCount = other.PageCount;
        }
      }
      if (other.totalItemCount_ != null) {
        if (totalItemCount_ == null || other.TotalItemCount != 0) {
          TotalItemCount = other.TotalItemCount;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.HasPreviousPage != false) {
        HasPreviousPage = other.HasPreviousPage;
      }
      if (other.HasNextPage != false) {
        HasNextPage = other.HasNextPage;
      }
      if (other.IsFirstPage != false) {
        IsFirstPage = other.IsFirstPage;
      }
      if (other.IsLastPage != false) {
        IsLastPage = other.IsLastPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subset_.AddEntriesFrom(input, _repeated_subset_codec);
            break;
          }
          case 18: {
            int? value = _single_count_codec.Read(input);
            if (count_ == null || value != 0) {
              Count = value;
            }
            break;
          }
          case 26: {
            int? value = _single_pageCount_codec.Read(input);
            if (pageCount_ == null || value != 0) {
              PageCount = value;
            }
            break;
          }
          case 34: {
            int? value = _single_totalItemCount_codec.Read(input);
            if (totalItemCount_ == null || value != 0) {
              TotalItemCount = value;
            }
            break;
          }
          case 42: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 50: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 56: {
            HasPreviousPage = input.ReadBool();
            break;
          }
          case 64: {
            HasNextPage = input.ReadBool();
            break;
          }
          case 72: {
            IsFirstPage = input.ReadBool();
            break;
          }
          case 80: {
            IsLastPage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaymentMethodGrpc : pb::IMessage<PaymentMethodGrpc> {
    private static readonly pb::MessageParser<PaymentMethodGrpc> _parser = new pb::MessageParser<PaymentMethodGrpc>(() => new PaymentMethodGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaymentMethodGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentMethodGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentMethodGrpc(PaymentMethodGrpc other) : this() {
      Form = other.Form;
      Method = other.Method;
      Address = other.Address;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentMethodGrpc Clone() {
      return new PaymentMethodGrpc(this);
    }

    /// <summary>Field number for the "form" field.</summary>
    public const int FormFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_form_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? form_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Form {
      get { return form_; }
      set {
        form_ = value;
      }
    }


    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_method_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? method_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Method {
      get { return method_; }
      set {
        method_ = value;
      }
    }


    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_address_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaymentMethodGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaymentMethodGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Form != other.Form) return false;
      if (Method != other.Method) return false;
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (form_ != null) hash ^= Form.GetHashCode();
      if (method_ != null) hash ^= Method.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (form_ != null) {
        _single_form_codec.WriteTagAndValue(output, Form);
      }
      if (method_ != null) {
        _single_method_codec.WriteTagAndValue(output, Method);
      }
      if (address_ != null) {
        _single_address_codec.WriteTagAndValue(output, Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (form_ != null) {
        size += _single_form_codec.CalculateSizeWithTag(Form);
      }
      if (method_ != null) {
        size += _single_method_codec.CalculateSizeWithTag(Method);
      }
      if (address_ != null) {
        size += _single_address_codec.CalculateSizeWithTag(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaymentMethodGrpc other) {
      if (other == null) {
        return;
      }
      if (other.form_ != null) {
        if (form_ == null || other.Form != 0) {
          Form = other.Form;
        }
      }
      if (other.method_ != null) {
        if (method_ == null || other.Method != 0) {
          Method = other.Method;
        }
      }
      if (other.address_ != null) {
        if (address_ == null || other.Address != "") {
          Address = other.Address;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_form_codec.Read(input);
            if (form_ == null || value != 0) {
              Form = value;
            }
            break;
          }
          case 18: {
            int? value = _single_method_codec.Read(input);
            if (method_ == null || value != 0) {
              Method = value;
            }
            break;
          }
          case 26: {
            string value = _single_address_codec.Read(input);
            if (address_ == null || value != "") {
              Address = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractTimeLineGrpc : pb::IMessage<ContractTimeLineGrpc> {
    private static readonly pb::MessageParser<ContractTimeLineGrpc> _parser = new pb::MessageParser<ContractTimeLineGrpc>(() => new ContractTimeLineGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractTimeLineGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTimeLineGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTimeLineGrpc(ContractTimeLineGrpc other) : this() {
      RenewPeriod = other.RenewPeriod;
      PaymentPeriod = other.PaymentPeriod;
      expiration_ = other.expiration_ != null ? other.expiration_.Clone() : null;
      liquidation_ = other.liquidation_ != null ? other.liquidation_.Clone() : null;
      effective_ = other.effective_ != null ? other.effective_.Clone() : null;
      signed_ = other.signed_ != null ? other.signed_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractTimeLineGrpc Clone() {
      return new ContractTimeLineGrpc(this);
    }

    /// <summary>Field number for the "renewPeriod" field.</summary>
    public const int RenewPeriodFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_renewPeriod_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? renewPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? RenewPeriod {
      get { return renewPeriod_; }
      set {
        renewPeriod_ = value;
      }
    }


    /// <summary>Field number for the "paymentPeriod" field.</summary>
    public const int PaymentPeriodFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_paymentPeriod_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? paymentPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PaymentPeriod {
      get { return paymentPeriod_; }
      set {
        paymentPeriod_ = value;
      }
    }


    /// <summary>Field number for the "expiration" field.</summary>
    public const int ExpirationFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Expiration {
      get { return expiration_; }
      set {
        expiration_ = value;
      }
    }

    /// <summary>Field number for the "liquidation" field.</summary>
    public const int LiquidationFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp liquidation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Liquidation {
      get { return liquidation_; }
      set {
        liquidation_ = value;
      }
    }

    /// <summary>Field number for the "effective" field.</summary>
    public const int EffectiveFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp effective_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Effective {
      get { return effective_; }
      set {
        effective_ = value;
      }
    }

    /// <summary>Field number for the "signed" field.</summary>
    public const int SignedFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp signed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Signed {
      get { return signed_; }
      set {
        signed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractTimeLineGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractTimeLineGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RenewPeriod != other.RenewPeriod) return false;
      if (PaymentPeriod != other.PaymentPeriod) return false;
      if (!object.Equals(Expiration, other.Expiration)) return false;
      if (!object.Equals(Liquidation, other.Liquidation)) return false;
      if (!object.Equals(Effective, other.Effective)) return false;
      if (!object.Equals(Signed, other.Signed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (renewPeriod_ != null) hash ^= RenewPeriod.GetHashCode();
      if (paymentPeriod_ != null) hash ^= PaymentPeriod.GetHashCode();
      if (expiration_ != null) hash ^= Expiration.GetHashCode();
      if (liquidation_ != null) hash ^= Liquidation.GetHashCode();
      if (effective_ != null) hash ^= Effective.GetHashCode();
      if (signed_ != null) hash ^= Signed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (renewPeriod_ != null) {
        _single_renewPeriod_codec.WriteTagAndValue(output, RenewPeriod);
      }
      if (paymentPeriod_ != null) {
        _single_paymentPeriod_codec.WriteTagAndValue(output, PaymentPeriod);
      }
      if (expiration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Expiration);
      }
      if (liquidation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Liquidation);
      }
      if (effective_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Effective);
      }
      if (signed_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Signed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (renewPeriod_ != null) {
        size += _single_renewPeriod_codec.CalculateSizeWithTag(RenewPeriod);
      }
      if (paymentPeriod_ != null) {
        size += _single_paymentPeriod_codec.CalculateSizeWithTag(PaymentPeriod);
      }
      if (expiration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expiration);
      }
      if (liquidation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Liquidation);
      }
      if (effective_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Effective);
      }
      if (signed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractTimeLineGrpc other) {
      if (other == null) {
        return;
      }
      if (other.renewPeriod_ != null) {
        if (renewPeriod_ == null || other.RenewPeriod != 0) {
          RenewPeriod = other.RenewPeriod;
        }
      }
      if (other.paymentPeriod_ != null) {
        if (paymentPeriod_ == null || other.PaymentPeriod != 0) {
          PaymentPeriod = other.PaymentPeriod;
        }
      }
      if (other.expiration_ != null) {
        if (expiration_ == null) {
          Expiration = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Expiration.MergeFrom(other.Expiration);
      }
      if (other.liquidation_ != null) {
        if (liquidation_ == null) {
          Liquidation = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Liquidation.MergeFrom(other.Liquidation);
      }
      if (other.effective_ != null) {
        if (effective_ == null) {
          Effective = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Effective.MergeFrom(other.Effective);
      }
      if (other.signed_ != null) {
        if (signed_ == null) {
          Signed = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Signed.MergeFrom(other.Signed);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_renewPeriod_codec.Read(input);
            if (renewPeriod_ == null || value != 0) {
              RenewPeriod = value;
            }
            break;
          }
          case 18: {
            int? value = _single_paymentPeriod_codec.Read(input);
            if (paymentPeriod_ == null || value != 0) {
              PaymentPeriod = value;
            }
            break;
          }
          case 26: {
            if (expiration_ == null) {
              Expiration = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expiration);
            break;
          }
          case 34: {
            if (liquidation_ == null) {
              Liquidation = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Liquidation);
            break;
          }
          case 42: {
            if (effective_ == null) {
              Effective = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Effective);
            break;
          }
          case 50: {
            if (signed_ == null) {
              Signed = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Signed);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressGrpc : pb::IMessage<AddressGrpc> {
    private static readonly pb::MessageParser<AddressGrpc> _parser = new pb::MessageParser<AddressGrpc>(() => new AddressGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressGrpc(AddressGrpc other) : this() {
      Street = other.Street;
      District = other.District;
      DistrictId = other.DistrictId;
      City = other.City;
      CityId = other.CityId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressGrpc Clone() {
      return new AddressGrpc(this);
    }

    /// <summary>Field number for the "street" field.</summary>
    public const int StreetFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_street_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string street_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Street {
      get { return street_; }
      set {
        street_ = value;
      }
    }


    /// <summary>Field number for the "district" field.</summary>
    public const int DistrictFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_district_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string district_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string District {
      get { return district_; }
      set {
        district_ = value;
      }
    }


    /// <summary>Field number for the "districtId" field.</summary>
    public const int DistrictIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_districtId_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string districtId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DistrictId {
      get { return districtId_; }
      set {
        districtId_ = value;
      }
    }


    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_city_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = value;
      }
    }


    /// <summary>Field number for the "cityId" field.</summary>
    public const int CityIdFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_cityId_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Street != other.Street) return false;
      if (District != other.District) return false;
      if (DistrictId != other.DistrictId) return false;
      if (City != other.City) return false;
      if (CityId != other.CityId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (street_ != null) hash ^= Street.GetHashCode();
      if (district_ != null) hash ^= District.GetHashCode();
      if (districtId_ != null) hash ^= DistrictId.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      if (cityId_ != null) hash ^= CityId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (street_ != null) {
        _single_street_codec.WriteTagAndValue(output, Street);
      }
      if (district_ != null) {
        _single_district_codec.WriteTagAndValue(output, District);
      }
      if (districtId_ != null) {
        _single_districtId_codec.WriteTagAndValue(output, DistrictId);
      }
      if (city_ != null) {
        _single_city_codec.WriteTagAndValue(output, City);
      }
      if (cityId_ != null) {
        _single_cityId_codec.WriteTagAndValue(output, CityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (street_ != null) {
        size += _single_street_codec.CalculateSizeWithTag(Street);
      }
      if (district_ != null) {
        size += _single_district_codec.CalculateSizeWithTag(District);
      }
      if (districtId_ != null) {
        size += _single_districtId_codec.CalculateSizeWithTag(DistrictId);
      }
      if (city_ != null) {
        size += _single_city_codec.CalculateSizeWithTag(City);
      }
      if (cityId_ != null) {
        size += _single_cityId_codec.CalculateSizeWithTag(CityId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressGrpc other) {
      if (other == null) {
        return;
      }
      if (other.street_ != null) {
        if (street_ == null || other.Street != "") {
          Street = other.Street;
        }
      }
      if (other.district_ != null) {
        if (district_ == null || other.District != "") {
          District = other.District;
        }
      }
      if (other.districtId_ != null) {
        if (districtId_ == null || other.DistrictId != "") {
          DistrictId = other.DistrictId;
        }
      }
      if (other.city_ != null) {
        if (city_ == null || other.City != "") {
          City = other.City;
        }
      }
      if (other.cityId_ != null) {
        if (cityId_ == null || other.CityId != "") {
          CityId = other.CityId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_street_codec.Read(input);
            if (street_ == null || value != "") {
              Street = value;
            }
            break;
          }
          case 18: {
            string value = _single_district_codec.Read(input);
            if (district_ == null || value != "") {
              District = value;
            }
            break;
          }
          case 26: {
            string value = _single_districtId_codec.Read(input);
            if (districtId_ == null || value != "") {
              DistrictId = value;
            }
            break;
          }
          case 34: {
            string value = _single_city_codec.Read(input);
            if (city_ == null || value != "") {
              City = value;
            }
            break;
          }
          case 42: {
            string value = _single_cityId_codec.Read(input);
            if (cityId_ == null || value != "") {
              CityId = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachmentFileGrpcDTO : pb::IMessage<AttachmentFileGrpcDTO> {
    private static readonly pb::MessageParser<AttachmentFileGrpcDTO> _parser = new pb::MessageParser<AttachmentFileGrpcDTO>(() => new AttachmentFileGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachmentFileGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentFileGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentFileGrpcDTO(AttachmentFileGrpcDTO other) : this() {
      Id = other.Id;
      OutContractId = other.OutContractId;
      ResourceStorage = other.ResourceStorage;
      Name = other.Name;
      FileName = other.FileName;
      FilePath = other.FilePath;
      Size = other.Size;
      FileType = other.FileType;
      Extension = other.Extension;
      RedirectLink = other.RedirectLink;
      TemporaryUrl = other.TemporaryUrl;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentFileGrpcDTO Clone() {
      return new AttachmentFileGrpcDTO(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_id_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "outContractId" field.</summary>
    public const int OutContractIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_outContractId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? outContractId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? OutContractId {
      get { return outContractId_; }
      set {
        outContractId_ = value;
      }
    }


    /// <summary>Field number for the "resourceStorage" field.</summary>
    public const int ResourceStorageFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_resourceStorage_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string resourceStorage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceStorage {
      get { return resourceStorage_; }
      set {
        resourceStorage_ = value;
      }
    }


    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_fileName_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string fileName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = value;
      }
    }


    /// <summary>Field number for the "filePath" field.</summary>
    public const int FilePathFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_filePath_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string filePath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = value;
      }
    }


    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 7;
    private static readonly pb::FieldCodec<long?> _single_size_codec = pb::FieldCodec.ForStructWrapper<long>(58);
    private long? size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }


    /// <summary>Field number for the "fileType" field.</summary>
    public const int FileTypeFieldNumber = 8;
    private static readonly pb::FieldCodec<int?> _single_fileType_codec = pb::FieldCodec.ForStructWrapper<int>(66);
    private int? fileType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? FileType {
      get { return fileType_; }
      set {
        fileType_ = value;
      }
    }


    /// <summary>Field number for the "extension" field.</summary>
    public const int ExtensionFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_extension_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string extension_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Extension {
      get { return extension_; }
      set {
        extension_ = value;
      }
    }


    /// <summary>Field number for the "redirectLink" field.</summary>
    public const int RedirectLinkFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_redirectLink_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string redirectLink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RedirectLink {
      get { return redirectLink_; }
      set {
        redirectLink_ = value;
      }
    }


    /// <summary>Field number for the "temporaryUrl" field.</summary>
    public const int TemporaryUrlFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_temporaryUrl_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string temporaryUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemporaryUrl {
      get { return temporaryUrl_; }
      set {
        temporaryUrl_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachmentFileGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachmentFileGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OutContractId != other.OutContractId) return false;
      if (ResourceStorage != other.ResourceStorage) return false;
      if (Name != other.Name) return false;
      if (FileName != other.FileName) return false;
      if (FilePath != other.FilePath) return false;
      if (Size != other.Size) return false;
      if (FileType != other.FileType) return false;
      if (Extension != other.Extension) return false;
      if (RedirectLink != other.RedirectLink) return false;
      if (TemporaryUrl != other.TemporaryUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (outContractId_ != null) hash ^= OutContractId.GetHashCode();
      if (resourceStorage_ != null) hash ^= ResourceStorage.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (fileName_ != null) hash ^= FileName.GetHashCode();
      if (filePath_ != null) hash ^= FilePath.GetHashCode();
      if (size_ != null) hash ^= Size.GetHashCode();
      if (fileType_ != null) hash ^= FileType.GetHashCode();
      if (extension_ != null) hash ^= Extension.GetHashCode();
      if (redirectLink_ != null) hash ^= RedirectLink.GetHashCode();
      if (temporaryUrl_ != null) hash ^= TemporaryUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (outContractId_ != null) {
        _single_outContractId_codec.WriteTagAndValue(output, OutContractId);
      }
      if (resourceStorage_ != null) {
        _single_resourceStorage_codec.WriteTagAndValue(output, ResourceStorage);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (fileName_ != null) {
        _single_fileName_codec.WriteTagAndValue(output, FileName);
      }
      if (filePath_ != null) {
        _single_filePath_codec.WriteTagAndValue(output, FilePath);
      }
      if (size_ != null) {
        _single_size_codec.WriteTagAndValue(output, Size);
      }
      if (fileType_ != null) {
        _single_fileType_codec.WriteTagAndValue(output, FileType);
      }
      if (extension_ != null) {
        _single_extension_codec.WriteTagAndValue(output, Extension);
      }
      if (redirectLink_ != null) {
        _single_redirectLink_codec.WriteTagAndValue(output, RedirectLink);
      }
      if (temporaryUrl_ != null) {
        _single_temporaryUrl_codec.WriteTagAndValue(output, TemporaryUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (outContractId_ != null) {
        size += _single_outContractId_codec.CalculateSizeWithTag(OutContractId);
      }
      if (resourceStorage_ != null) {
        size += _single_resourceStorage_codec.CalculateSizeWithTag(ResourceStorage);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (fileName_ != null) {
        size += _single_fileName_codec.CalculateSizeWithTag(FileName);
      }
      if (filePath_ != null) {
        size += _single_filePath_codec.CalculateSizeWithTag(FilePath);
      }
      if (size_ != null) {
        size += _single_size_codec.CalculateSizeWithTag(Size);
      }
      if (fileType_ != null) {
        size += _single_fileType_codec.CalculateSizeWithTag(FileType);
      }
      if (extension_ != null) {
        size += _single_extension_codec.CalculateSizeWithTag(Extension);
      }
      if (redirectLink_ != null) {
        size += _single_redirectLink_codec.CalculateSizeWithTag(RedirectLink);
      }
      if (temporaryUrl_ != null) {
        size += _single_temporaryUrl_codec.CalculateSizeWithTag(TemporaryUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachmentFileGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0) {
          Id = other.Id;
        }
      }
      if (other.outContractId_ != null) {
        if (outContractId_ == null || other.OutContractId != 0) {
          OutContractId = other.OutContractId;
        }
      }
      if (other.resourceStorage_ != null) {
        if (resourceStorage_ == null || other.ResourceStorage != "") {
          ResourceStorage = other.ResourceStorage;
        }
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.fileName_ != null) {
        if (fileName_ == null || other.FileName != "") {
          FileName = other.FileName;
        }
      }
      if (other.filePath_ != null) {
        if (filePath_ == null || other.FilePath != "") {
          FilePath = other.FilePath;
        }
      }
      if (other.size_ != null) {
        if (size_ == null || other.Size != 0L) {
          Size = other.Size;
        }
      }
      if (other.fileType_ != null) {
        if (fileType_ == null || other.FileType != 0) {
          FileType = other.FileType;
        }
      }
      if (other.extension_ != null) {
        if (extension_ == null || other.Extension != "") {
          Extension = other.Extension;
        }
      }
      if (other.redirectLink_ != null) {
        if (redirectLink_ == null || other.RedirectLink != "") {
          RedirectLink = other.RedirectLink;
        }
      }
      if (other.temporaryUrl_ != null) {
        if (temporaryUrl_ == null || other.TemporaryUrl != "") {
          TemporaryUrl = other.TemporaryUrl;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0) {
              Id = value;
            }
            break;
          }
          case 18: {
            int? value = _single_outContractId_codec.Read(input);
            if (outContractId_ == null || value != 0) {
              OutContractId = value;
            }
            break;
          }
          case 26: {
            string value = _single_resourceStorage_codec.Read(input);
            if (resourceStorage_ == null || value != "") {
              ResourceStorage = value;
            }
            break;
          }
          case 34: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 42: {
            string value = _single_fileName_codec.Read(input);
            if (fileName_ == null || value != "") {
              FileName = value;
            }
            break;
          }
          case 50: {
            string value = _single_filePath_codec.Read(input);
            if (filePath_ == null || value != "") {
              FilePath = value;
            }
            break;
          }
          case 58: {
            long? value = _single_size_codec.Read(input);
            if (size_ == null || value != 0L) {
              Size = value;
            }
            break;
          }
          case 66: {
            int? value = _single_fileType_codec.Read(input);
            if (fileType_ == null || value != 0) {
              FileType = value;
            }
            break;
          }
          case 74: {
            string value = _single_extension_codec.Read(input);
            if (extension_ == null || value != "") {
              Extension = value;
            }
            break;
          }
          case 82: {
            string value = _single_redirectLink_codec.Read(input);
            if (redirectLink_ == null || value != "") {
              RedirectLink = value;
            }
            break;
          }
          case 90: {
            string value = _single_temporaryUrl_codec.Read(input);
            if (temporaryUrl_ == null || value != "") {
              TemporaryUrl = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractOfTaxGrpcDTO : pb::IMessage<ContractOfTaxGrpcDTO> {
    private static readonly pb::MessageParser<ContractOfTaxGrpcDTO> _parser = new pb::MessageParser<ContractOfTaxGrpcDTO>(() => new ContractOfTaxGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractOfTaxGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractOfTaxGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractOfTaxGrpcDTO(ContractOfTaxGrpcDTO other) : this() {
      Id = other.Id;
      ValueTax = other.ValueTax;
      TaxName = other.TaxName;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractOfTaxGrpcDTO Clone() {
      return new ContractOfTaxGrpcDTO(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_id_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "valueTax" field.</summary>
    public const int ValueTaxFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_valueTax_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? valueTax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ValueTax {
      get { return valueTax_; }
      set {
        valueTax_ = value;
      }
    }


    /// <summary>Field number for the "taxName" field.</summary>
    public const int TaxNameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_taxName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string taxName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaxName {
      get { return taxName_; }
      set {
        taxName_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractOfTaxGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractOfTaxGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ValueTax != other.ValueTax) return false;
      if (TaxName != other.TaxName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (valueTax_ != null) hash ^= ValueTax.GetHashCode();
      if (taxName_ != null) hash ^= TaxName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (valueTax_ != null) {
        _single_valueTax_codec.WriteTagAndValue(output, ValueTax);
      }
      if (taxName_ != null) {
        _single_taxName_codec.WriteTagAndValue(output, TaxName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (valueTax_ != null) {
        size += _single_valueTax_codec.CalculateSizeWithTag(ValueTax);
      }
      if (taxName_ != null) {
        size += _single_taxName_codec.CalculateSizeWithTag(TaxName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractOfTaxGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0) {
          Id = other.Id;
        }
      }
      if (other.valueTax_ != null) {
        if (valueTax_ == null || other.ValueTax != 0) {
          ValueTax = other.ValueTax;
        }
      }
      if (other.taxName_ != null) {
        if (taxName_ == null || other.TaxName != "") {
          TaxName = other.TaxName;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0) {
              Id = value;
            }
            break;
          }
          case 18: {
            int? value = _single_valueTax_codec.Read(input);
            if (valueTax_ == null || value != 0) {
              ValueTax = value;
            }
            break;
          }
          case 26: {
            string value = _single_taxName_codec.Read(input);
            if (taxName_ == null || value != "") {
              TaxName = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutContractServicePackageGrpcDTO : pb::IMessage<OutContractServicePackageGrpcDTO> {
    private static readonly pb::MessageParser<OutContractServicePackageGrpcDTO> _parser = new pb::MessageParser<OutContractServicePackageGrpcDTO>(() => new OutContractServicePackageGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutContractServicePackageGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractServicePackageGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractServicePackageGrpcDTO(OutContractServicePackageGrpcDTO other) : this() {
      CurrencyUnitId = other.CurrencyUnitId;
      CurrencyUnitCode = other.CurrencyUnitCode;
      OutContractId = other.OutContractId;
      ServicePackageId = other.ServicePackageId;
      ServiceId = other.ServiceId;
      ServiceName = other.ServiceName;
      PackageName = other.PackageName;
      isFreeStaticIp_ = other.isFreeStaticIp_;
      BandwidthLabel = other.BandwidthLabel;
      InternationalBandwidth = other.InternationalBandwidth;
      DomesticBandwidth = other.DomesticBandwidth;
      InternationalBandwidthUom = other.InternationalBandwidthUom;
      DomesticBandwidthUom = other.DomesticBandwidthUom;
      timeLine_ = other.timeLine_ != null ? other.timeLine_.Clone() : null;
      CustomerCode = other.CustomerCode;
      CId = other.CId;
      RadiusAccount = other.RadiusAccount;
      RadiusPassword = other.RadiusPassword;
      installationFee_ = other.installationFee_ != null ? other.installationFee_.Clone() : null;
      otherFee_ = other.otherFee_ != null ? other.otherFee_.Clone() : null;
      orgPackagePrice_ = other.orgPackagePrice_ != null ? other.orgPackagePrice_.Clone() : null;
      packagePrice_ = other.packagePrice_ != null ? other.packagePrice_.Clone() : null;
      PackagePriceType = other.PackagePriceType;
      StartPointChannelId = other.StartPointChannelId;
      EndPointChannelId = other.EndPointChannelId;
      hasStartAndEndPoint_ = other.hasStartAndEndPoint_;
      promotionAmount_ = other.promotionAmount_ != null ? other.promotionAmount_.Clone() : null;
      equipmentAmount_ = other.equipmentAmount_ != null ? other.equipmentAmount_.Clone() : null;
      StatusId = other.StatusId;
      subTotalBeforeTax_ = other.subTotalBeforeTax_ != null ? other.subTotalBeforeTax_.Clone() : null;
      grandTotalBeforeTax_ = other.grandTotalBeforeTax_ != null ? other.grandTotalBeforeTax_.Clone() : null;
      TaxPercent = other.TaxPercent;
      taxAmount_ = other.taxAmount_ != null ? other.taxAmount_.Clone() : null;
      subTotal_ = other.subTotal_ != null ? other.subTotal_.Clone() : null;
      grandTotal_ = other.grandTotal_ != null ? other.grandTotal_.Clone() : null;
      TransactionServicePackageId = other.TransactionServicePackageId;
      isRadiusAccountCreated_ = other.isRadiusAccountCreated_;
      OldId = other.OldId;
      isInFirstBilling_ = other.isInFirstBilling_;
      RadiusServerId = other.RadiusServerId;
      isTechnicalConfirmation_ = other.isTechnicalConfirmation_;
      ChannelGroupId = other.ChannelGroupId;
      isHasPrice_ = other.isHasPrice_;
      isDefaultSLAByServiceId_ = other.isDefaultSLAByServiceId_;
      PaymentTargetId = other.PaymentTargetId;
      id_ = other.id_;
      OrganizationPath = other.OrganizationPath;
      startPoint_ = other.startPoint_ != null ? other.startPoint_.Clone() : null;
      endPoint_ = other.endPoint_ != null ? other.endPoint_.Clone() : null;
      outContractServicePackageTaxes_ = other.outContractServicePackageTaxes_.Clone();
      ContractCode = other.ContractCode;
      Text = other.Text;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractServicePackageGrpcDTO Clone() {
      return new OutContractServicePackageGrpcDTO(this);
    }

    /// <summary>Field number for the "currencyUnitId" field.</summary>
    public const int CurrencyUnitIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_currencyUnitId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? currencyUnitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? CurrencyUnitId {
      get { return currencyUnitId_; }
      set {
        currencyUnitId_ = value;
      }
    }


    /// <summary>Field number for the "currencyUnitCode" field.</summary>
    public const int CurrencyUnitCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_currencyUnitCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string currencyUnitCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyUnitCode {
      get { return currencyUnitCode_; }
      set {
        currencyUnitCode_ = value;
      }
    }


    /// <summary>Field number for the "outContractId" field.</summary>
    public const int OutContractIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_outContractId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? outContractId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? OutContractId {
      get { return outContractId_; }
      set {
        outContractId_ = value;
      }
    }


    /// <summary>Field number for the "servicePackageId" field.</summary>
    public const int ServicePackageIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_servicePackageId_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? servicePackageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ServicePackageId {
      get { return servicePackageId_; }
      set {
        servicePackageId_ = value;
      }
    }


    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_serviceId_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }


    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_serviceName_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string serviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = value;
      }
    }


    /// <summary>Field number for the "packageName" field.</summary>
    public const int PackageNameFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_packageName_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string packageName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = value;
      }
    }


    /// <summary>Field number for the "isFreeStaticIp" field.</summary>
    public const int IsFreeStaticIpFieldNumber = 8;
    private bool isFreeStaticIp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFreeStaticIp {
      get { return isFreeStaticIp_; }
      set {
        isFreeStaticIp_ = value;
      }
    }

    /// <summary>Field number for the "bandwidthLabel" field.</summary>
    public const int BandwidthLabelFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_bandwidthLabel_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string bandwidthLabel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BandwidthLabel {
      get { return bandwidthLabel_; }
      set {
        bandwidthLabel_ = value;
      }
    }


    /// <summary>Field number for the "internationalBandwidth" field.</summary>
    public const int InternationalBandwidthFieldNumber = 10;
    private static readonly pb::FieldCodec<float?> _single_internationalBandwidth_codec = pb::FieldCodec.ForStructWrapper<float>(82);
    private float? internationalBandwidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? InternationalBandwidth {
      get { return internationalBandwidth_; }
      set {
        internationalBandwidth_ = value;
      }
    }


    /// <summary>Field number for the "domesticBandwidth" field.</summary>
    public const int DomesticBandwidthFieldNumber = 11;
    private static readonly pb::FieldCodec<float?> _single_domesticBandwidth_codec = pb::FieldCodec.ForStructWrapper<float>(90);
    private float? domesticBandwidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? DomesticBandwidth {
      get { return domesticBandwidth_; }
      set {
        domesticBandwidth_ = value;
      }
    }


    /// <summary>Field number for the "internationalBandwidthUom" field.</summary>
    public const int InternationalBandwidthUomFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_internationalBandwidthUom_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string internationalBandwidthUom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InternationalBandwidthUom {
      get { return internationalBandwidthUom_; }
      set {
        internationalBandwidthUom_ = value;
      }
    }


    /// <summary>Field number for the "domesticBandwidthUom" field.</summary>
    public const int DomesticBandwidthUomFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_domesticBandwidthUom_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string domesticBandwidthUom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DomesticBandwidthUom {
      get { return domesticBandwidthUom_; }
      set {
        domesticBandwidthUom_ = value;
      }
    }


    /// <summary>Field number for the "timeLine" field.</summary>
    public const int TimeLineFieldNumber = 14;
    private global::ContractManagement.API.Protos.BillingTimeLineGrpc timeLine_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.BillingTimeLineGrpc TimeLine {
      get { return timeLine_; }
      set {
        timeLine_ = value;
      }
    }

    /// <summary>Field number for the "customerCode" field.</summary>
    public const int CustomerCodeFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_customerCode_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string customerCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerCode {
      get { return customerCode_; }
      set {
        customerCode_ = value;
      }
    }


    /// <summary>Field number for the "cId" field.</summary>
    public const int CIdFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_cId_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string cId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CId {
      get { return cId_; }
      set {
        cId_ = value;
      }
    }


    /// <summary>Field number for the "radiusAccount" field.</summary>
    public const int RadiusAccountFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _single_radiusAccount_codec = pb::FieldCodec.ForClassWrapper<string>(138);
    private string radiusAccount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RadiusAccount {
      get { return radiusAccount_; }
      set {
        radiusAccount_ = value;
      }
    }


    /// <summary>Field number for the "radiusPassword" field.</summary>
    public const int RadiusPasswordFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _single_radiusPassword_codec = pb::FieldCodec.ForClassWrapper<string>(146);
    private string radiusPassword_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RadiusPassword {
      get { return radiusPassword_; }
      set {
        radiusPassword_ = value;
      }
    }


    /// <summary>Field number for the "installationFee" field.</summary>
    public const int InstallationFeeFieldNumber = 19;
    private global::ContractManagement.API.Protos.Money installationFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money InstallationFee {
      get { return installationFee_; }
      set {
        installationFee_ = value;
      }
    }

    /// <summary>Field number for the "otherFee" field.</summary>
    public const int OtherFeeFieldNumber = 20;
    private global::ContractManagement.API.Protos.Money otherFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money OtherFee {
      get { return otherFee_; }
      set {
        otherFee_ = value;
      }
    }

    /// <summary>Field number for the "orgPackagePrice" field.</summary>
    public const int OrgPackagePriceFieldNumber = 21;
    private global::ContractManagement.API.Protos.Money orgPackagePrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money OrgPackagePrice {
      get { return orgPackagePrice_; }
      set {
        orgPackagePrice_ = value;
      }
    }

    /// <summary>Field number for the "packagePrice" field.</summary>
    public const int PackagePriceFieldNumber = 22;
    private global::ContractManagement.API.Protos.Money packagePrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money PackagePrice {
      get { return packagePrice_; }
      set {
        packagePrice_ = value;
      }
    }

    /// <summary>Field number for the "packagePriceType" field.</summary>
    public const int PackagePriceTypeFieldNumber = 23;
    private static readonly pb::FieldCodec<int?> _single_packagePriceType_codec = pb::FieldCodec.ForStructWrapper<int>(186);
    private int? packagePriceType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PackagePriceType {
      get { return packagePriceType_; }
      set {
        packagePriceType_ = value;
      }
    }


    /// <summary>Field number for the "startPointChannelId" field.</summary>
    public const int StartPointChannelIdFieldNumber = 24;
    private static readonly pb::FieldCodec<int?> _single_startPointChannelId_codec = pb::FieldCodec.ForStructWrapper<int>(194);
    private int? startPointChannelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? StartPointChannelId {
      get { return startPointChannelId_; }
      set {
        startPointChannelId_ = value;
      }
    }


    /// <summary>Field number for the "endPointChannelId" field.</summary>
    public const int EndPointChannelIdFieldNumber = 25;
    private static readonly pb::FieldCodec<int?> _single_endPointChannelId_codec = pb::FieldCodec.ForStructWrapper<int>(202);
    private int? endPointChannelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? EndPointChannelId {
      get { return endPointChannelId_; }
      set {
        endPointChannelId_ = value;
      }
    }


    /// <summary>Field number for the "hasStartAndEndPoint" field.</summary>
    public const int HasStartAndEndPointFieldNumber = 26;
    private bool hasStartAndEndPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStartAndEndPoint {
      get { return hasStartAndEndPoint_; }
      set {
        hasStartAndEndPoint_ = value;
      }
    }

    /// <summary>Field number for the "promotionAmount" field.</summary>
    public const int PromotionAmountFieldNumber = 27;
    private global::ContractManagement.API.Protos.Money promotionAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money PromotionAmount {
      get { return promotionAmount_; }
      set {
        promotionAmount_ = value;
      }
    }

    /// <summary>Field number for the "equipmentAmount" field.</summary>
    public const int EquipmentAmountFieldNumber = 28;
    private global::ContractManagement.API.Protos.Money equipmentAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money EquipmentAmount {
      get { return equipmentAmount_; }
      set {
        equipmentAmount_ = value;
      }
    }

    /// <summary>Field number for the "statusId" field.</summary>
    public const int StatusIdFieldNumber = 29;
    private static readonly pb::FieldCodec<int?> _single_statusId_codec = pb::FieldCodec.ForStructWrapper<int>(234);
    private int? statusId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? StatusId {
      get { return statusId_; }
      set {
        statusId_ = value;
      }
    }


    /// <summary>Field number for the "subTotalBeforeTax" field.</summary>
    public const int SubTotalBeforeTaxFieldNumber = 30;
    private global::ContractManagement.API.Protos.Money subTotalBeforeTax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money SubTotalBeforeTax {
      get { return subTotalBeforeTax_; }
      set {
        subTotalBeforeTax_ = value;
      }
    }

    /// <summary>Field number for the "grandTotalBeforeTax" field.</summary>
    public const int GrandTotalBeforeTaxFieldNumber = 31;
    private global::ContractManagement.API.Protos.Money grandTotalBeforeTax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money GrandTotalBeforeTax {
      get { return grandTotalBeforeTax_; }
      set {
        grandTotalBeforeTax_ = value;
      }
    }

    /// <summary>Field number for the "taxPercent" field.</summary>
    public const int TaxPercentFieldNumber = 32;
    private static readonly pb::FieldCodec<float?> _single_taxPercent_codec = pb::FieldCodec.ForStructWrapper<float>(258);
    private float? taxPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? TaxPercent {
      get { return taxPercent_; }
      set {
        taxPercent_ = value;
      }
    }


    /// <summary>Field number for the "taxAmount" field.</summary>
    public const int TaxAmountFieldNumber = 33;
    private global::ContractManagement.API.Protos.Money taxAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money TaxAmount {
      get { return taxAmount_; }
      set {
        taxAmount_ = value;
      }
    }

    /// <summary>Field number for the "subTotal" field.</summary>
    public const int SubTotalFieldNumber = 34;
    private global::ContractManagement.API.Protos.Money subTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money SubTotal {
      get { return subTotal_; }
      set {
        subTotal_ = value;
      }
    }

    /// <summary>Field number for the "grandTotal" field.</summary>
    public const int GrandTotalFieldNumber = 35;
    private global::ContractManagement.API.Protos.Money grandTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money GrandTotal {
      get { return grandTotal_; }
      set {
        grandTotal_ = value;
      }
    }

    /// <summary>Field number for the "transactionServicePackageId" field.</summary>
    public const int TransactionServicePackageIdFieldNumber = 36;
    private static readonly pb::FieldCodec<int?> _single_transactionServicePackageId_codec = pb::FieldCodec.ForStructWrapper<int>(290);
    private int? transactionServicePackageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TransactionServicePackageId {
      get { return transactionServicePackageId_; }
      set {
        transactionServicePackageId_ = value;
      }
    }


    /// <summary>Field number for the "isRadiusAccountCreated" field.</summary>
    public const int IsRadiusAccountCreatedFieldNumber = 37;
    private bool isRadiusAccountCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRadiusAccountCreated {
      get { return isRadiusAccountCreated_; }
      set {
        isRadiusAccountCreated_ = value;
      }
    }

    /// <summary>Field number for the "oldId" field.</summary>
    public const int OldIdFieldNumber = 38;
    private static readonly pb::FieldCodec<int?> _single_oldId_codec = pb::FieldCodec.ForStructWrapper<int>(306);
    private int? oldId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? OldId {
      get { return oldId_; }
      set {
        oldId_ = value;
      }
    }


    /// <summary>Field number for the "isInFirstBilling" field.</summary>
    public const int IsInFirstBillingFieldNumber = 39;
    private bool isInFirstBilling_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInFirstBilling {
      get { return isInFirstBilling_; }
      set {
        isInFirstBilling_ = value;
      }
    }

    /// <summary>Field number for the "radiusServerId" field.</summary>
    public const int RadiusServerIdFieldNumber = 40;
    private static readonly pb::FieldCodec<int?> _single_radiusServerId_codec = pb::FieldCodec.ForStructWrapper<int>(322);
    private int? radiusServerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? RadiusServerId {
      get { return radiusServerId_; }
      set {
        radiusServerId_ = value;
      }
    }


    /// <summary>Field number for the "isTechnicalConfirmation" field.</summary>
    public const int IsTechnicalConfirmationFieldNumber = 41;
    private bool isTechnicalConfirmation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsTechnicalConfirmation {
      get { return isTechnicalConfirmation_; }
      set {
        isTechnicalConfirmation_ = value;
      }
    }

    /// <summary>Field number for the "channelGroupId" field.</summary>
    public const int ChannelGroupIdFieldNumber = 42;
    private static readonly pb::FieldCodec<int?> _single_channelGroupId_codec = pb::FieldCodec.ForStructWrapper<int>(338);
    private int? channelGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ChannelGroupId {
      get { return channelGroupId_; }
      set {
        channelGroupId_ = value;
      }
    }


    /// <summary>Field number for the "isHasPrice" field.</summary>
    public const int IsHasPriceFieldNumber = 43;
    private bool isHasPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsHasPrice {
      get { return isHasPrice_; }
      set {
        isHasPrice_ = value;
      }
    }

    /// <summary>Field number for the "isDefaultSLAByServiceId" field.</summary>
    public const int IsDefaultSLAByServiceIdFieldNumber = 44;
    private bool isDefaultSLAByServiceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDefaultSLAByServiceId {
      get { return isDefaultSLAByServiceId_; }
      set {
        isDefaultSLAByServiceId_ = value;
      }
    }

    /// <summary>Field number for the "paymentTargetId" field.</summary>
    public const int PaymentTargetIdFieldNumber = 45;
    private static readonly pb::FieldCodec<int?> _single_paymentTargetId_codec = pb::FieldCodec.ForStructWrapper<int>(362);
    private int? paymentTargetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PaymentTargetId {
      get { return paymentTargetId_; }
      set {
        paymentTargetId_ = value;
      }
    }


    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 46;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "organizationPath" field.</summary>
    public const int OrganizationPathFieldNumber = 47;
    private static readonly pb::FieldCodec<string> _single_organizationPath_codec = pb::FieldCodec.ForClassWrapper<string>(378);
    private string organizationPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganizationPath {
      get { return organizationPath_; }
      set {
        organizationPath_ = value;
      }
    }


    /// <summary>Field number for the "startPoint" field.</summary>
    public const int StartPointFieldNumber = 48;
    private global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO startPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO StartPoint {
      get { return startPoint_; }
      set {
        startPoint_ = value;
      }
    }

    /// <summary>Field number for the "endPoint" field.</summary>
    public const int EndPointFieldNumber = 49;
    private global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO endPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO EndPoint {
      get { return endPoint_; }
      set {
        endPoint_ = value;
      }
    }

    /// <summary>Field number for the "outContractServicePackageTaxes" field.</summary>
    public const int OutContractServicePackageTaxesFieldNumber = 50;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.OutContractServicePackageTaxGrpcDTO> _repeated_outContractServicePackageTaxes_codec
        = pb::FieldCodec.ForMessage(402, global::ContractManagement.API.Protos.OutContractServicePackageTaxGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractServicePackageTaxGrpcDTO> outContractServicePackageTaxes_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractServicePackageTaxGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractServicePackageTaxGrpcDTO> OutContractServicePackageTaxes {
      get { return outContractServicePackageTaxes_; }
    }

    /// <summary>Field number for the "contractCode" field.</summary>
    public const int ContractCodeFieldNumber = 51;
    private static readonly pb::FieldCodec<string> _single_contractCode_codec = pb::FieldCodec.ForClassWrapper<string>(410);
    private string contractCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = value;
      }
    }


    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 52;
    private static readonly pb::FieldCodec<string> _single_text_codec = pb::FieldCodec.ForClassWrapper<string>(418);
    private string text_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutContractServicePackageGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutContractServicePackageGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrencyUnitId != other.CurrencyUnitId) return false;
      if (CurrencyUnitCode != other.CurrencyUnitCode) return false;
      if (OutContractId != other.OutContractId) return false;
      if (ServicePackageId != other.ServicePackageId) return false;
      if (ServiceId != other.ServiceId) return false;
      if (ServiceName != other.ServiceName) return false;
      if (PackageName != other.PackageName) return false;
      if (IsFreeStaticIp != other.IsFreeStaticIp) return false;
      if (BandwidthLabel != other.BandwidthLabel) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(InternationalBandwidth, other.InternationalBandwidth)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(DomesticBandwidth, other.DomesticBandwidth)) return false;
      if (InternationalBandwidthUom != other.InternationalBandwidthUom) return false;
      if (DomesticBandwidthUom != other.DomesticBandwidthUom) return false;
      if (!object.Equals(TimeLine, other.TimeLine)) return false;
      if (CustomerCode != other.CustomerCode) return false;
      if (CId != other.CId) return false;
      if (RadiusAccount != other.RadiusAccount) return false;
      if (RadiusPassword != other.RadiusPassword) return false;
      if (!object.Equals(InstallationFee, other.InstallationFee)) return false;
      if (!object.Equals(OtherFee, other.OtherFee)) return false;
      if (!object.Equals(OrgPackagePrice, other.OrgPackagePrice)) return false;
      if (!object.Equals(PackagePrice, other.PackagePrice)) return false;
      if (PackagePriceType != other.PackagePriceType) return false;
      if (StartPointChannelId != other.StartPointChannelId) return false;
      if (EndPointChannelId != other.EndPointChannelId) return false;
      if (HasStartAndEndPoint != other.HasStartAndEndPoint) return false;
      if (!object.Equals(PromotionAmount, other.PromotionAmount)) return false;
      if (!object.Equals(EquipmentAmount, other.EquipmentAmount)) return false;
      if (StatusId != other.StatusId) return false;
      if (!object.Equals(SubTotalBeforeTax, other.SubTotalBeforeTax)) return false;
      if (!object.Equals(GrandTotalBeforeTax, other.GrandTotalBeforeTax)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(TaxPercent, other.TaxPercent)) return false;
      if (!object.Equals(TaxAmount, other.TaxAmount)) return false;
      if (!object.Equals(SubTotal, other.SubTotal)) return false;
      if (!object.Equals(GrandTotal, other.GrandTotal)) return false;
      if (TransactionServicePackageId != other.TransactionServicePackageId) return false;
      if (IsRadiusAccountCreated != other.IsRadiusAccountCreated) return false;
      if (OldId != other.OldId) return false;
      if (IsInFirstBilling != other.IsInFirstBilling) return false;
      if (RadiusServerId != other.RadiusServerId) return false;
      if (IsTechnicalConfirmation != other.IsTechnicalConfirmation) return false;
      if (ChannelGroupId != other.ChannelGroupId) return false;
      if (IsHasPrice != other.IsHasPrice) return false;
      if (IsDefaultSLAByServiceId != other.IsDefaultSLAByServiceId) return false;
      if (PaymentTargetId != other.PaymentTargetId) return false;
      if (Id != other.Id) return false;
      if (OrganizationPath != other.OrganizationPath) return false;
      if (!object.Equals(StartPoint, other.StartPoint)) return false;
      if (!object.Equals(EndPoint, other.EndPoint)) return false;
      if(!outContractServicePackageTaxes_.Equals(other.outContractServicePackageTaxes_)) return false;
      if (ContractCode != other.ContractCode) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currencyUnitId_ != null) hash ^= CurrencyUnitId.GetHashCode();
      if (currencyUnitCode_ != null) hash ^= CurrencyUnitCode.GetHashCode();
      if (outContractId_ != null) hash ^= OutContractId.GetHashCode();
      if (servicePackageId_ != null) hash ^= ServicePackageId.GetHashCode();
      if (serviceId_ != null) hash ^= ServiceId.GetHashCode();
      if (serviceName_ != null) hash ^= ServiceName.GetHashCode();
      if (packageName_ != null) hash ^= PackageName.GetHashCode();
      if (IsFreeStaticIp != false) hash ^= IsFreeStaticIp.GetHashCode();
      if (bandwidthLabel_ != null) hash ^= BandwidthLabel.GetHashCode();
      if (internationalBandwidth_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(InternationalBandwidth);
      if (domesticBandwidth_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(DomesticBandwidth);
      if (internationalBandwidthUom_ != null) hash ^= InternationalBandwidthUom.GetHashCode();
      if (domesticBandwidthUom_ != null) hash ^= DomesticBandwidthUom.GetHashCode();
      if (timeLine_ != null) hash ^= TimeLine.GetHashCode();
      if (customerCode_ != null) hash ^= CustomerCode.GetHashCode();
      if (cId_ != null) hash ^= CId.GetHashCode();
      if (radiusAccount_ != null) hash ^= RadiusAccount.GetHashCode();
      if (radiusPassword_ != null) hash ^= RadiusPassword.GetHashCode();
      if (installationFee_ != null) hash ^= InstallationFee.GetHashCode();
      if (otherFee_ != null) hash ^= OtherFee.GetHashCode();
      if (orgPackagePrice_ != null) hash ^= OrgPackagePrice.GetHashCode();
      if (packagePrice_ != null) hash ^= PackagePrice.GetHashCode();
      if (packagePriceType_ != null) hash ^= PackagePriceType.GetHashCode();
      if (startPointChannelId_ != null) hash ^= StartPointChannelId.GetHashCode();
      if (endPointChannelId_ != null) hash ^= EndPointChannelId.GetHashCode();
      if (HasStartAndEndPoint != false) hash ^= HasStartAndEndPoint.GetHashCode();
      if (promotionAmount_ != null) hash ^= PromotionAmount.GetHashCode();
      if (equipmentAmount_ != null) hash ^= EquipmentAmount.GetHashCode();
      if (statusId_ != null) hash ^= StatusId.GetHashCode();
      if (subTotalBeforeTax_ != null) hash ^= SubTotalBeforeTax.GetHashCode();
      if (grandTotalBeforeTax_ != null) hash ^= GrandTotalBeforeTax.GetHashCode();
      if (taxPercent_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(TaxPercent);
      if (taxAmount_ != null) hash ^= TaxAmount.GetHashCode();
      if (subTotal_ != null) hash ^= SubTotal.GetHashCode();
      if (grandTotal_ != null) hash ^= GrandTotal.GetHashCode();
      if (transactionServicePackageId_ != null) hash ^= TransactionServicePackageId.GetHashCode();
      if (IsRadiusAccountCreated != false) hash ^= IsRadiusAccountCreated.GetHashCode();
      if (oldId_ != null) hash ^= OldId.GetHashCode();
      if (IsInFirstBilling != false) hash ^= IsInFirstBilling.GetHashCode();
      if (radiusServerId_ != null) hash ^= RadiusServerId.GetHashCode();
      if (IsTechnicalConfirmation != false) hash ^= IsTechnicalConfirmation.GetHashCode();
      if (channelGroupId_ != null) hash ^= ChannelGroupId.GetHashCode();
      if (IsHasPrice != false) hash ^= IsHasPrice.GetHashCode();
      if (IsDefaultSLAByServiceId != false) hash ^= IsDefaultSLAByServiceId.GetHashCode();
      if (paymentTargetId_ != null) hash ^= PaymentTargetId.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (organizationPath_ != null) hash ^= OrganizationPath.GetHashCode();
      if (startPoint_ != null) hash ^= StartPoint.GetHashCode();
      if (endPoint_ != null) hash ^= EndPoint.GetHashCode();
      hash ^= outContractServicePackageTaxes_.GetHashCode();
      if (contractCode_ != null) hash ^= ContractCode.GetHashCode();
      if (text_ != null) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currencyUnitId_ != null) {
        _single_currencyUnitId_codec.WriteTagAndValue(output, CurrencyUnitId);
      }
      if (currencyUnitCode_ != null) {
        _single_currencyUnitCode_codec.WriteTagAndValue(output, CurrencyUnitCode);
      }
      if (outContractId_ != null) {
        _single_outContractId_codec.WriteTagAndValue(output, OutContractId);
      }
      if (servicePackageId_ != null) {
        _single_servicePackageId_codec.WriteTagAndValue(output, ServicePackageId);
      }
      if (serviceId_ != null) {
        _single_serviceId_codec.WriteTagAndValue(output, ServiceId);
      }
      if (serviceName_ != null) {
        _single_serviceName_codec.WriteTagAndValue(output, ServiceName);
      }
      if (packageName_ != null) {
        _single_packageName_codec.WriteTagAndValue(output, PackageName);
      }
      if (IsFreeStaticIp != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsFreeStaticIp);
      }
      if (bandwidthLabel_ != null) {
        _single_bandwidthLabel_codec.WriteTagAndValue(output, BandwidthLabel);
      }
      if (internationalBandwidth_ != null) {
        _single_internationalBandwidth_codec.WriteTagAndValue(output, InternationalBandwidth);
      }
      if (domesticBandwidth_ != null) {
        _single_domesticBandwidth_codec.WriteTagAndValue(output, DomesticBandwidth);
      }
      if (internationalBandwidthUom_ != null) {
        _single_internationalBandwidthUom_codec.WriteTagAndValue(output, InternationalBandwidthUom);
      }
      if (domesticBandwidthUom_ != null) {
        _single_domesticBandwidthUom_codec.WriteTagAndValue(output, DomesticBandwidthUom);
      }
      if (timeLine_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(TimeLine);
      }
      if (customerCode_ != null) {
        _single_customerCode_codec.WriteTagAndValue(output, CustomerCode);
      }
      if (cId_ != null) {
        _single_cId_codec.WriteTagAndValue(output, CId);
      }
      if (radiusAccount_ != null) {
        _single_radiusAccount_codec.WriteTagAndValue(output, RadiusAccount);
      }
      if (radiusPassword_ != null) {
        _single_radiusPassword_codec.WriteTagAndValue(output, RadiusPassword);
      }
      if (installationFee_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(InstallationFee);
      }
      if (otherFee_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(OtherFee);
      }
      if (orgPackagePrice_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(OrgPackagePrice);
      }
      if (packagePrice_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(PackagePrice);
      }
      if (packagePriceType_ != null) {
        _single_packagePriceType_codec.WriteTagAndValue(output, PackagePriceType);
      }
      if (startPointChannelId_ != null) {
        _single_startPointChannelId_codec.WriteTagAndValue(output, StartPointChannelId);
      }
      if (endPointChannelId_ != null) {
        _single_endPointChannelId_codec.WriteTagAndValue(output, EndPointChannelId);
      }
      if (HasStartAndEndPoint != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(HasStartAndEndPoint);
      }
      if (promotionAmount_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(PromotionAmount);
      }
      if (equipmentAmount_ != null) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(EquipmentAmount);
      }
      if (statusId_ != null) {
        _single_statusId_codec.WriteTagAndValue(output, StatusId);
      }
      if (subTotalBeforeTax_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(SubTotalBeforeTax);
      }
      if (grandTotalBeforeTax_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(GrandTotalBeforeTax);
      }
      if (taxPercent_ != null) {
        _single_taxPercent_codec.WriteTagAndValue(output, TaxPercent);
      }
      if (taxAmount_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(TaxAmount);
      }
      if (subTotal_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(SubTotal);
      }
      if (grandTotal_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(GrandTotal);
      }
      if (transactionServicePackageId_ != null) {
        _single_transactionServicePackageId_codec.WriteTagAndValue(output, TransactionServicePackageId);
      }
      if (IsRadiusAccountCreated != false) {
        output.WriteRawTag(168, 2);
        output.WriteBool(IsRadiusAccountCreated);
      }
      if (oldId_ != null) {
        _single_oldId_codec.WriteTagAndValue(output, OldId);
      }
      if (IsInFirstBilling != false) {
        output.WriteRawTag(184, 2);
        output.WriteBool(IsInFirstBilling);
      }
      if (radiusServerId_ != null) {
        _single_radiusServerId_codec.WriteTagAndValue(output, RadiusServerId);
      }
      if (IsTechnicalConfirmation != false) {
        output.WriteRawTag(200, 2);
        output.WriteBool(IsTechnicalConfirmation);
      }
      if (channelGroupId_ != null) {
        _single_channelGroupId_codec.WriteTagAndValue(output, ChannelGroupId);
      }
      if (IsHasPrice != false) {
        output.WriteRawTag(216, 2);
        output.WriteBool(IsHasPrice);
      }
      if (IsDefaultSLAByServiceId != false) {
        output.WriteRawTag(224, 2);
        output.WriteBool(IsDefaultSLAByServiceId);
      }
      if (paymentTargetId_ != null) {
        _single_paymentTargetId_codec.WriteTagAndValue(output, PaymentTargetId);
      }
      if (Id != 0) {
        output.WriteRawTag(240, 2);
        output.WriteInt32(Id);
      }
      if (organizationPath_ != null) {
        _single_organizationPath_codec.WriteTagAndValue(output, OrganizationPath);
      }
      if (startPoint_ != null) {
        output.WriteRawTag(130, 3);
        output.WriteMessage(StartPoint);
      }
      if (endPoint_ != null) {
        output.WriteRawTag(138, 3);
        output.WriteMessage(EndPoint);
      }
      outContractServicePackageTaxes_.WriteTo(output, _repeated_outContractServicePackageTaxes_codec);
      if (contractCode_ != null) {
        _single_contractCode_codec.WriteTagAndValue(output, ContractCode);
      }
      if (text_ != null) {
        _single_text_codec.WriteTagAndValue(output, Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currencyUnitId_ != null) {
        size += _single_currencyUnitId_codec.CalculateSizeWithTag(CurrencyUnitId);
      }
      if (currencyUnitCode_ != null) {
        size += _single_currencyUnitCode_codec.CalculateSizeWithTag(CurrencyUnitCode);
      }
      if (outContractId_ != null) {
        size += _single_outContractId_codec.CalculateSizeWithTag(OutContractId);
      }
      if (servicePackageId_ != null) {
        size += _single_servicePackageId_codec.CalculateSizeWithTag(ServicePackageId);
      }
      if (serviceId_ != null) {
        size += _single_serviceId_codec.CalculateSizeWithTag(ServiceId);
      }
      if (serviceName_ != null) {
        size += _single_serviceName_codec.CalculateSizeWithTag(ServiceName);
      }
      if (packageName_ != null) {
        size += _single_packageName_codec.CalculateSizeWithTag(PackageName);
      }
      if (IsFreeStaticIp != false) {
        size += 1 + 1;
      }
      if (bandwidthLabel_ != null) {
        size += _single_bandwidthLabel_codec.CalculateSizeWithTag(BandwidthLabel);
      }
      if (internationalBandwidth_ != null) {
        size += _single_internationalBandwidth_codec.CalculateSizeWithTag(InternationalBandwidth);
      }
      if (domesticBandwidth_ != null) {
        size += _single_domesticBandwidth_codec.CalculateSizeWithTag(DomesticBandwidth);
      }
      if (internationalBandwidthUom_ != null) {
        size += _single_internationalBandwidthUom_codec.CalculateSizeWithTag(InternationalBandwidthUom);
      }
      if (domesticBandwidthUom_ != null) {
        size += _single_domesticBandwidthUom_codec.CalculateSizeWithTag(DomesticBandwidthUom);
      }
      if (timeLine_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeLine);
      }
      if (customerCode_ != null) {
        size += _single_customerCode_codec.CalculateSizeWithTag(CustomerCode);
      }
      if (cId_ != null) {
        size += _single_cId_codec.CalculateSizeWithTag(CId);
      }
      if (radiusAccount_ != null) {
        size += _single_radiusAccount_codec.CalculateSizeWithTag(RadiusAccount);
      }
      if (radiusPassword_ != null) {
        size += _single_radiusPassword_codec.CalculateSizeWithTag(RadiusPassword);
      }
      if (installationFee_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(InstallationFee);
      }
      if (otherFee_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OtherFee);
      }
      if (orgPackagePrice_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OrgPackagePrice);
      }
      if (packagePrice_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PackagePrice);
      }
      if (packagePriceType_ != null) {
        size += _single_packagePriceType_codec.CalculateSizeWithTag(PackagePriceType);
      }
      if (startPointChannelId_ != null) {
        size += _single_startPointChannelId_codec.CalculateSizeWithTag(StartPointChannelId);
      }
      if (endPointChannelId_ != null) {
        size += _single_endPointChannelId_codec.CalculateSizeWithTag(EndPointChannelId);
      }
      if (HasStartAndEndPoint != false) {
        size += 2 + 1;
      }
      if (promotionAmount_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PromotionAmount);
      }
      if (equipmentAmount_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EquipmentAmount);
      }
      if (statusId_ != null) {
        size += _single_statusId_codec.CalculateSizeWithTag(StatusId);
      }
      if (subTotalBeforeTax_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubTotalBeforeTax);
      }
      if (grandTotalBeforeTax_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GrandTotalBeforeTax);
      }
      if (taxPercent_ != null) {
        size += _single_taxPercent_codec.CalculateSizeWithTag(TaxPercent);
      }
      if (taxAmount_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TaxAmount);
      }
      if (subTotal_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubTotal);
      }
      if (grandTotal_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GrandTotal);
      }
      if (transactionServicePackageId_ != null) {
        size += _single_transactionServicePackageId_codec.CalculateSizeWithTag(TransactionServicePackageId);
      }
      if (IsRadiusAccountCreated != false) {
        size += 2 + 1;
      }
      if (oldId_ != null) {
        size += _single_oldId_codec.CalculateSizeWithTag(OldId);
      }
      if (IsInFirstBilling != false) {
        size += 2 + 1;
      }
      if (radiusServerId_ != null) {
        size += _single_radiusServerId_codec.CalculateSizeWithTag(RadiusServerId);
      }
      if (IsTechnicalConfirmation != false) {
        size += 2 + 1;
      }
      if (channelGroupId_ != null) {
        size += _single_channelGroupId_codec.CalculateSizeWithTag(ChannelGroupId);
      }
      if (IsHasPrice != false) {
        size += 2 + 1;
      }
      if (IsDefaultSLAByServiceId != false) {
        size += 2 + 1;
      }
      if (paymentTargetId_ != null) {
        size += _single_paymentTargetId_codec.CalculateSizeWithTag(PaymentTargetId);
      }
      if (Id != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (organizationPath_ != null) {
        size += _single_organizationPath_codec.CalculateSizeWithTag(OrganizationPath);
      }
      if (startPoint_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(StartPoint);
      }
      if (endPoint_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EndPoint);
      }
      size += outContractServicePackageTaxes_.CalculateSize(_repeated_outContractServicePackageTaxes_codec);
      if (contractCode_ != null) {
        size += _single_contractCode_codec.CalculateSizeWithTag(ContractCode);
      }
      if (text_ != null) {
        size += _single_text_codec.CalculateSizeWithTag(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutContractServicePackageGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.currencyUnitId_ != null) {
        if (currencyUnitId_ == null || other.CurrencyUnitId != 0) {
          CurrencyUnitId = other.CurrencyUnitId;
        }
      }
      if (other.currencyUnitCode_ != null) {
        if (currencyUnitCode_ == null || other.CurrencyUnitCode != "") {
          CurrencyUnitCode = other.CurrencyUnitCode;
        }
      }
      if (other.outContractId_ != null) {
        if (outContractId_ == null || other.OutContractId != 0) {
          OutContractId = other.OutContractId;
        }
      }
      if (other.servicePackageId_ != null) {
        if (servicePackageId_ == null || other.ServicePackageId != 0) {
          ServicePackageId = other.ServicePackageId;
        }
      }
      if (other.serviceId_ != null) {
        if (serviceId_ == null || other.ServiceId != 0) {
          ServiceId = other.ServiceId;
        }
      }
      if (other.serviceName_ != null) {
        if (serviceName_ == null || other.ServiceName != "") {
          ServiceName = other.ServiceName;
        }
      }
      if (other.packageName_ != null) {
        if (packageName_ == null || other.PackageName != "") {
          PackageName = other.PackageName;
        }
      }
      if (other.IsFreeStaticIp != false) {
        IsFreeStaticIp = other.IsFreeStaticIp;
      }
      if (other.bandwidthLabel_ != null) {
        if (bandwidthLabel_ == null || other.BandwidthLabel != "") {
          BandwidthLabel = other.BandwidthLabel;
        }
      }
      if (other.internationalBandwidth_ != null) {
        if (internationalBandwidth_ == null || other.InternationalBandwidth != 0F) {
          InternationalBandwidth = other.InternationalBandwidth;
        }
      }
      if (other.domesticBandwidth_ != null) {
        if (domesticBandwidth_ == null || other.DomesticBandwidth != 0F) {
          DomesticBandwidth = other.DomesticBandwidth;
        }
      }
      if (other.internationalBandwidthUom_ != null) {
        if (internationalBandwidthUom_ == null || other.InternationalBandwidthUom != "") {
          InternationalBandwidthUom = other.InternationalBandwidthUom;
        }
      }
      if (other.domesticBandwidthUom_ != null) {
        if (domesticBandwidthUom_ == null || other.DomesticBandwidthUom != "") {
          DomesticBandwidthUom = other.DomesticBandwidthUom;
        }
      }
      if (other.timeLine_ != null) {
        if (timeLine_ == null) {
          TimeLine = new global::ContractManagement.API.Protos.BillingTimeLineGrpc();
        }
        TimeLine.MergeFrom(other.TimeLine);
      }
      if (other.customerCode_ != null) {
        if (customerCode_ == null || other.CustomerCode != "") {
          CustomerCode = other.CustomerCode;
        }
      }
      if (other.cId_ != null) {
        if (cId_ == null || other.CId != "") {
          CId = other.CId;
        }
      }
      if (other.radiusAccount_ != null) {
        if (radiusAccount_ == null || other.RadiusAccount != "") {
          RadiusAccount = other.RadiusAccount;
        }
      }
      if (other.radiusPassword_ != null) {
        if (radiusPassword_ == null || other.RadiusPassword != "") {
          RadiusPassword = other.RadiusPassword;
        }
      }
      if (other.installationFee_ != null) {
        if (installationFee_ == null) {
          InstallationFee = new global::ContractManagement.API.Protos.Money();
        }
        InstallationFee.MergeFrom(other.InstallationFee);
      }
      if (other.otherFee_ != null) {
        if (otherFee_ == null) {
          OtherFee = new global::ContractManagement.API.Protos.Money();
        }
        OtherFee.MergeFrom(other.OtherFee);
      }
      if (other.orgPackagePrice_ != null) {
        if (orgPackagePrice_ == null) {
          OrgPackagePrice = new global::ContractManagement.API.Protos.Money();
        }
        OrgPackagePrice.MergeFrom(other.OrgPackagePrice);
      }
      if (other.packagePrice_ != null) {
        if (packagePrice_ == null) {
          PackagePrice = new global::ContractManagement.API.Protos.Money();
        }
        PackagePrice.MergeFrom(other.PackagePrice);
      }
      if (other.packagePriceType_ != null) {
        if (packagePriceType_ == null || other.PackagePriceType != 0) {
          PackagePriceType = other.PackagePriceType;
        }
      }
      if (other.startPointChannelId_ != null) {
        if (startPointChannelId_ == null || other.StartPointChannelId != 0) {
          StartPointChannelId = other.StartPointChannelId;
        }
      }
      if (other.endPointChannelId_ != null) {
        if (endPointChannelId_ == null || other.EndPointChannelId != 0) {
          EndPointChannelId = other.EndPointChannelId;
        }
      }
      if (other.HasStartAndEndPoint != false) {
        HasStartAndEndPoint = other.HasStartAndEndPoint;
      }
      if (other.promotionAmount_ != null) {
        if (promotionAmount_ == null) {
          PromotionAmount = new global::ContractManagement.API.Protos.Money();
        }
        PromotionAmount.MergeFrom(other.PromotionAmount);
      }
      if (other.equipmentAmount_ != null) {
        if (equipmentAmount_ == null) {
          EquipmentAmount = new global::ContractManagement.API.Protos.Money();
        }
        EquipmentAmount.MergeFrom(other.EquipmentAmount);
      }
      if (other.statusId_ != null) {
        if (statusId_ == null || other.StatusId != 0) {
          StatusId = other.StatusId;
        }
      }
      if (other.subTotalBeforeTax_ != null) {
        if (subTotalBeforeTax_ == null) {
          SubTotalBeforeTax = new global::ContractManagement.API.Protos.Money();
        }
        SubTotalBeforeTax.MergeFrom(other.SubTotalBeforeTax);
      }
      if (other.grandTotalBeforeTax_ != null) {
        if (grandTotalBeforeTax_ == null) {
          GrandTotalBeforeTax = new global::ContractManagement.API.Protos.Money();
        }
        GrandTotalBeforeTax.MergeFrom(other.GrandTotalBeforeTax);
      }
      if (other.taxPercent_ != null) {
        if (taxPercent_ == null || other.TaxPercent != 0F) {
          TaxPercent = other.TaxPercent;
        }
      }
      if (other.taxAmount_ != null) {
        if (taxAmount_ == null) {
          TaxAmount = new global::ContractManagement.API.Protos.Money();
        }
        TaxAmount.MergeFrom(other.TaxAmount);
      }
      if (other.subTotal_ != null) {
        if (subTotal_ == null) {
          SubTotal = new global::ContractManagement.API.Protos.Money();
        }
        SubTotal.MergeFrom(other.SubTotal);
      }
      if (other.grandTotal_ != null) {
        if (grandTotal_ == null) {
          GrandTotal = new global::ContractManagement.API.Protos.Money();
        }
        GrandTotal.MergeFrom(other.GrandTotal);
      }
      if (other.transactionServicePackageId_ != null) {
        if (transactionServicePackageId_ == null || other.TransactionServicePackageId != 0) {
          TransactionServicePackageId = other.TransactionServicePackageId;
        }
      }
      if (other.IsRadiusAccountCreated != false) {
        IsRadiusAccountCreated = other.IsRadiusAccountCreated;
      }
      if (other.oldId_ != null) {
        if (oldId_ == null || other.OldId != 0) {
          OldId = other.OldId;
        }
      }
      if (other.IsInFirstBilling != false) {
        IsInFirstBilling = other.IsInFirstBilling;
      }
      if (other.radiusServerId_ != null) {
        if (radiusServerId_ == null || other.RadiusServerId != 0) {
          RadiusServerId = other.RadiusServerId;
        }
      }
      if (other.IsTechnicalConfirmation != false) {
        IsTechnicalConfirmation = other.IsTechnicalConfirmation;
      }
      if (other.channelGroupId_ != null) {
        if (channelGroupId_ == null || other.ChannelGroupId != 0) {
          ChannelGroupId = other.ChannelGroupId;
        }
      }
      if (other.IsHasPrice != false) {
        IsHasPrice = other.IsHasPrice;
      }
      if (other.IsDefaultSLAByServiceId != false) {
        IsDefaultSLAByServiceId = other.IsDefaultSLAByServiceId;
      }
      if (other.paymentTargetId_ != null) {
        if (paymentTargetId_ == null || other.PaymentTargetId != 0) {
          PaymentTargetId = other.PaymentTargetId;
        }
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.organizationPath_ != null) {
        if (organizationPath_ == null || other.OrganizationPath != "") {
          OrganizationPath = other.OrganizationPath;
        }
      }
      if (other.startPoint_ != null) {
        if (startPoint_ == null) {
          StartPoint = new global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO();
        }
        StartPoint.MergeFrom(other.StartPoint);
      }
      if (other.endPoint_ != null) {
        if (endPoint_ == null) {
          EndPoint = new global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO();
        }
        EndPoint.MergeFrom(other.EndPoint);
      }
      outContractServicePackageTaxes_.Add(other.outContractServicePackageTaxes_);
      if (other.contractCode_ != null) {
        if (contractCode_ == null || other.ContractCode != "") {
          ContractCode = other.ContractCode;
        }
      }
      if (other.text_ != null) {
        if (text_ == null || other.Text != "") {
          Text = other.Text;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_currencyUnitId_codec.Read(input);
            if (currencyUnitId_ == null || value != 0) {
              CurrencyUnitId = value;
            }
            break;
          }
          case 18: {
            string value = _single_currencyUnitCode_codec.Read(input);
            if (currencyUnitCode_ == null || value != "") {
              CurrencyUnitCode = value;
            }
            break;
          }
          case 26: {
            int? value = _single_outContractId_codec.Read(input);
            if (outContractId_ == null || value != 0) {
              OutContractId = value;
            }
            break;
          }
          case 34: {
            int? value = _single_servicePackageId_codec.Read(input);
            if (servicePackageId_ == null || value != 0) {
              ServicePackageId = value;
            }
            break;
          }
          case 42: {
            int? value = _single_serviceId_codec.Read(input);
            if (serviceId_ == null || value != 0) {
              ServiceId = value;
            }
            break;
          }
          case 50: {
            string value = _single_serviceName_codec.Read(input);
            if (serviceName_ == null || value != "") {
              ServiceName = value;
            }
            break;
          }
          case 58: {
            string value = _single_packageName_codec.Read(input);
            if (packageName_ == null || value != "") {
              PackageName = value;
            }
            break;
          }
          case 64: {
            IsFreeStaticIp = input.ReadBool();
            break;
          }
          case 74: {
            string value = _single_bandwidthLabel_codec.Read(input);
            if (bandwidthLabel_ == null || value != "") {
              BandwidthLabel = value;
            }
            break;
          }
          case 82: {
            float? value = _single_internationalBandwidth_codec.Read(input);
            if (internationalBandwidth_ == null || value != 0F) {
              InternationalBandwidth = value;
            }
            break;
          }
          case 90: {
            float? value = _single_domesticBandwidth_codec.Read(input);
            if (domesticBandwidth_ == null || value != 0F) {
              DomesticBandwidth = value;
            }
            break;
          }
          case 98: {
            string value = _single_internationalBandwidthUom_codec.Read(input);
            if (internationalBandwidthUom_ == null || value != "") {
              InternationalBandwidthUom = value;
            }
            break;
          }
          case 106: {
            string value = _single_domesticBandwidthUom_codec.Read(input);
            if (domesticBandwidthUom_ == null || value != "") {
              DomesticBandwidthUom = value;
            }
            break;
          }
          case 114: {
            if (timeLine_ == null) {
              TimeLine = new global::ContractManagement.API.Protos.BillingTimeLineGrpc();
            }
            input.ReadMessage(TimeLine);
            break;
          }
          case 122: {
            string value = _single_customerCode_codec.Read(input);
            if (customerCode_ == null || value != "") {
              CustomerCode = value;
            }
            break;
          }
          case 130: {
            string value = _single_cId_codec.Read(input);
            if (cId_ == null || value != "") {
              CId = value;
            }
            break;
          }
          case 138: {
            string value = _single_radiusAccount_codec.Read(input);
            if (radiusAccount_ == null || value != "") {
              RadiusAccount = value;
            }
            break;
          }
          case 146: {
            string value = _single_radiusPassword_codec.Read(input);
            if (radiusPassword_ == null || value != "") {
              RadiusPassword = value;
            }
            break;
          }
          case 154: {
            if (installationFee_ == null) {
              InstallationFee = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(InstallationFee);
            break;
          }
          case 162: {
            if (otherFee_ == null) {
              OtherFee = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(OtherFee);
            break;
          }
          case 170: {
            if (orgPackagePrice_ == null) {
              OrgPackagePrice = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(OrgPackagePrice);
            break;
          }
          case 178: {
            if (packagePrice_ == null) {
              PackagePrice = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(PackagePrice);
            break;
          }
          case 186: {
            int? value = _single_packagePriceType_codec.Read(input);
            if (packagePriceType_ == null || value != 0) {
              PackagePriceType = value;
            }
            break;
          }
          case 194: {
            int? value = _single_startPointChannelId_codec.Read(input);
            if (startPointChannelId_ == null || value != 0) {
              StartPointChannelId = value;
            }
            break;
          }
          case 202: {
            int? value = _single_endPointChannelId_codec.Read(input);
            if (endPointChannelId_ == null || value != 0) {
              EndPointChannelId = value;
            }
            break;
          }
          case 208: {
            HasStartAndEndPoint = input.ReadBool();
            break;
          }
          case 218: {
            if (promotionAmount_ == null) {
              PromotionAmount = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(PromotionAmount);
            break;
          }
          case 226: {
            if (equipmentAmount_ == null) {
              EquipmentAmount = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(EquipmentAmount);
            break;
          }
          case 234: {
            int? value = _single_statusId_codec.Read(input);
            if (statusId_ == null || value != 0) {
              StatusId = value;
            }
            break;
          }
          case 242: {
            if (subTotalBeforeTax_ == null) {
              SubTotalBeforeTax = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(SubTotalBeforeTax);
            break;
          }
          case 250: {
            if (grandTotalBeforeTax_ == null) {
              GrandTotalBeforeTax = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(GrandTotalBeforeTax);
            break;
          }
          case 258: {
            float? value = _single_taxPercent_codec.Read(input);
            if (taxPercent_ == null || value != 0F) {
              TaxPercent = value;
            }
            break;
          }
          case 266: {
            if (taxAmount_ == null) {
              TaxAmount = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(TaxAmount);
            break;
          }
          case 274: {
            if (subTotal_ == null) {
              SubTotal = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(SubTotal);
            break;
          }
          case 282: {
            if (grandTotal_ == null) {
              GrandTotal = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(GrandTotal);
            break;
          }
          case 290: {
            int? value = _single_transactionServicePackageId_codec.Read(input);
            if (transactionServicePackageId_ == null || value != 0) {
              TransactionServicePackageId = value;
            }
            break;
          }
          case 296: {
            IsRadiusAccountCreated = input.ReadBool();
            break;
          }
          case 306: {
            int? value = _single_oldId_codec.Read(input);
            if (oldId_ == null || value != 0) {
              OldId = value;
            }
            break;
          }
          case 312: {
            IsInFirstBilling = input.ReadBool();
            break;
          }
          case 322: {
            int? value = _single_radiusServerId_codec.Read(input);
            if (radiusServerId_ == null || value != 0) {
              RadiusServerId = value;
            }
            break;
          }
          case 328: {
            IsTechnicalConfirmation = input.ReadBool();
            break;
          }
          case 338: {
            int? value = _single_channelGroupId_codec.Read(input);
            if (channelGroupId_ == null || value != 0) {
              ChannelGroupId = value;
            }
            break;
          }
          case 344: {
            IsHasPrice = input.ReadBool();
            break;
          }
          case 352: {
            IsDefaultSLAByServiceId = input.ReadBool();
            break;
          }
          case 362: {
            int? value = _single_paymentTargetId_codec.Read(input);
            if (paymentTargetId_ == null || value != 0) {
              PaymentTargetId = value;
            }
            break;
          }
          case 368: {
            Id = input.ReadInt32();
            break;
          }
          case 378: {
            string value = _single_organizationPath_codec.Read(input);
            if (organizationPath_ == null || value != "") {
              OrganizationPath = value;
            }
            break;
          }
          case 386: {
            if (startPoint_ == null) {
              StartPoint = new global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO();
            }
            input.ReadMessage(StartPoint);
            break;
          }
          case 394: {
            if (endPoint_ == null) {
              EndPoint = new global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO();
            }
            input.ReadMessage(EndPoint);
            break;
          }
          case 402: {
            outContractServicePackageTaxes_.AddEntriesFrom(input, _repeated_outContractServicePackageTaxes_codec);
            break;
          }
          case 410: {
            string value = _single_contractCode_codec.Read(input);
            if (contractCode_ == null || value != "") {
              ContractCode = value;
            }
            break;
          }
          case 418: {
            string value = _single_text_codec.Read(input);
            if (text_ == null || value != "") {
              Text = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutContractServicePackageTaxGrpcDTO : pb::IMessage<OutContractServicePackageTaxGrpcDTO> {
    private static readonly pb::MessageParser<OutContractServicePackageTaxGrpcDTO> _parser = new pb::MessageParser<OutContractServicePackageTaxGrpcDTO>(() => new OutContractServicePackageTaxGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutContractServicePackageTaxGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractServicePackageTaxGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractServicePackageTaxGrpcDTO(OutContractServicePackageTaxGrpcDTO other) : this() {
      OutContractServicePackageId = other.OutContractServicePackageId;
      TaxCategoryId = other.TaxCategoryId;
      TaxCategoryName = other.TaxCategoryName;
      TaxCategoryCode = other.TaxCategoryCode;
      TaxValue = other.TaxValue;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractServicePackageTaxGrpcDTO Clone() {
      return new OutContractServicePackageTaxGrpcDTO(this);
    }

    /// <summary>Field number for the "outContractServicePackageId" field.</summary>
    public const int OutContractServicePackageIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_outContractServicePackageId_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? outContractServicePackageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? OutContractServicePackageId {
      get { return outContractServicePackageId_; }
      set {
        outContractServicePackageId_ = value;
      }
    }


    /// <summary>Field number for the "taxCategoryId" field.</summary>
    public const int TaxCategoryIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_taxCategoryId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? taxCategoryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TaxCategoryId {
      get { return taxCategoryId_; }
      set {
        taxCategoryId_ = value;
      }
    }


    /// <summary>Field number for the "taxCategoryName" field.</summary>
    public const int TaxCategoryNameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_taxCategoryName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string taxCategoryName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaxCategoryName {
      get { return taxCategoryName_; }
      set {
        taxCategoryName_ = value;
      }
    }


    /// <summary>Field number for the "taxCategoryCode" field.</summary>
    public const int TaxCategoryCodeFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_taxCategoryCode_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string taxCategoryCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaxCategoryCode {
      get { return taxCategoryCode_; }
      set {
        taxCategoryCode_ = value;
      }
    }


    /// <summary>Field number for the "taxValue" field.</summary>
    public const int TaxValueFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_taxValue_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? taxValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TaxValue {
      get { return taxValue_; }
      set {
        taxValue_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutContractServicePackageTaxGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutContractServicePackageTaxGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OutContractServicePackageId != other.OutContractServicePackageId) return false;
      if (TaxCategoryId != other.TaxCategoryId) return false;
      if (TaxCategoryName != other.TaxCategoryName) return false;
      if (TaxCategoryCode != other.TaxCategoryCode) return false;
      if (TaxValue != other.TaxValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (outContractServicePackageId_ != null) hash ^= OutContractServicePackageId.GetHashCode();
      if (taxCategoryId_ != null) hash ^= TaxCategoryId.GetHashCode();
      if (taxCategoryName_ != null) hash ^= TaxCategoryName.GetHashCode();
      if (taxCategoryCode_ != null) hash ^= TaxCategoryCode.GetHashCode();
      if (taxValue_ != null) hash ^= TaxValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (outContractServicePackageId_ != null) {
        _single_outContractServicePackageId_codec.WriteTagAndValue(output, OutContractServicePackageId);
      }
      if (taxCategoryId_ != null) {
        _single_taxCategoryId_codec.WriteTagAndValue(output, TaxCategoryId);
      }
      if (taxCategoryName_ != null) {
        _single_taxCategoryName_codec.WriteTagAndValue(output, TaxCategoryName);
      }
      if (taxCategoryCode_ != null) {
        _single_taxCategoryCode_codec.WriteTagAndValue(output, TaxCategoryCode);
      }
      if (taxValue_ != null) {
        _single_taxValue_codec.WriteTagAndValue(output, TaxValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (outContractServicePackageId_ != null) {
        size += _single_outContractServicePackageId_codec.CalculateSizeWithTag(OutContractServicePackageId);
      }
      if (taxCategoryId_ != null) {
        size += _single_taxCategoryId_codec.CalculateSizeWithTag(TaxCategoryId);
      }
      if (taxCategoryName_ != null) {
        size += _single_taxCategoryName_codec.CalculateSizeWithTag(TaxCategoryName);
      }
      if (taxCategoryCode_ != null) {
        size += _single_taxCategoryCode_codec.CalculateSizeWithTag(TaxCategoryCode);
      }
      if (taxValue_ != null) {
        size += _single_taxValue_codec.CalculateSizeWithTag(TaxValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutContractServicePackageTaxGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.outContractServicePackageId_ != null) {
        if (outContractServicePackageId_ == null || other.OutContractServicePackageId != 0) {
          OutContractServicePackageId = other.OutContractServicePackageId;
        }
      }
      if (other.taxCategoryId_ != null) {
        if (taxCategoryId_ == null || other.TaxCategoryId != 0) {
          TaxCategoryId = other.TaxCategoryId;
        }
      }
      if (other.taxCategoryName_ != null) {
        if (taxCategoryName_ == null || other.TaxCategoryName != "") {
          TaxCategoryName = other.TaxCategoryName;
        }
      }
      if (other.taxCategoryCode_ != null) {
        if (taxCategoryCode_ == null || other.TaxCategoryCode != "") {
          TaxCategoryCode = other.TaxCategoryCode;
        }
      }
      if (other.taxValue_ != null) {
        if (taxValue_ == null || other.TaxValue != 0) {
          TaxValue = other.TaxValue;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_outContractServicePackageId_codec.Read(input);
            if (outContractServicePackageId_ == null || value != 0) {
              OutContractServicePackageId = value;
            }
            break;
          }
          case 18: {
            int? value = _single_taxCategoryId_codec.Read(input);
            if (taxCategoryId_ == null || value != 0) {
              TaxCategoryId = value;
            }
            break;
          }
          case 26: {
            string value = _single_taxCategoryName_codec.Read(input);
            if (taxCategoryName_ == null || value != "") {
              TaxCategoryName = value;
            }
            break;
          }
          case 34: {
            string value = _single_taxCategoryCode_codec.Read(input);
            if (taxCategoryCode_ == null || value != "") {
              TaxCategoryCode = value;
            }
            break;
          }
          case 42: {
            int? value = _single_taxValue_codec.Read(input);
            if (taxValue_ == null || value != 0) {
              TaxValue = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutContractEquipmentGrpcDTO : pb::IMessage<OutContractEquipmentGrpcDTO> {
    private static readonly pb::MessageParser<OutContractEquipmentGrpcDTO> _parser = new pb::MessageParser<OutContractEquipmentGrpcDTO>(() => new OutContractEquipmentGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutContractEquipmentGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractEquipmentGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractEquipmentGrpcDTO(OutContractEquipmentGrpcDTO other) : this() {
      Id = other.Id;
      OutContractId = other.OutContractId;
      OutContractPackageId = other.OutContractPackageId;
      ServiceId = other.ServiceId;
      ServiceName = other.ServiceName;
      ServicePackageId = other.ServicePackageId;
      ServicePackageName = other.ServicePackageName;
      EquipmentName = other.EquipmentName;
      EquipmentPictureUrl = other.EquipmentPictureUrl;
      EquipmentUom = other.EquipmentUom;
      unitPrice_ = other.unitPrice_ != null ? other.unitPrice_.Clone() : null;
      ExaminedUnit = other.ExaminedUnit;
      RealUnit = other.RealUnit;
      ReclaimedUnit = other.ReclaimedUnit;
      isInSurveyPlan_ = other.isInSurveyPlan_;
      isFree_ = other.isFree_;
      hasToReclaim_ = other.hasToReclaim_;
      SerialCode = other.SerialCode;
      DeviceCode = other.DeviceCode;
      Manufacturer = other.Manufacturer;
      Specifications = other.Specifications;
      StatusId = other.StatusId;
      EquipmentId = other.EquipmentId;
      grandTotal_ = other.grandTotal_ != null ? other.grandTotal_.Clone() : null;
      unitPriceBeforeTax_ = other.unitPriceBeforeTax_ != null ? other.unitPriceBeforeTax_.Clone() : null;
      TransactionEquipmentId = other.TransactionEquipmentId;
      CurrencyUnitId = other.CurrencyUnitId;
      CurrencyUnitCode = other.CurrencyUnitCode;
      InstallationFullAddress = other.InstallationFullAddress;
      ActivatedUnit = other.ActivatedUnit;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractEquipmentGrpcDTO Clone() {
      return new OutContractEquipmentGrpcDTO(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_id_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "outContractId" field.</summary>
    public const int OutContractIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_outContractId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? outContractId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? OutContractId {
      get { return outContractId_; }
      set {
        outContractId_ = value;
      }
    }


    /// <summary>Field number for the "outContractPackageId" field.</summary>
    public const int OutContractPackageIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_outContractPackageId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? outContractPackageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? OutContractPackageId {
      get { return outContractPackageId_; }
      set {
        outContractPackageId_ = value;
      }
    }


    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_serviceId_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }


    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_serviceName_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string serviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = value;
      }
    }


    /// <summary>Field number for the "servicePackageId" field.</summary>
    public const int ServicePackageIdFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_servicePackageId_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? servicePackageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ServicePackageId {
      get { return servicePackageId_; }
      set {
        servicePackageId_ = value;
      }
    }


    /// <summary>Field number for the "servicePackageName" field.</summary>
    public const int ServicePackageNameFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_servicePackageName_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string servicePackageName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePackageName {
      get { return servicePackageName_; }
      set {
        servicePackageName_ = value;
      }
    }


    /// <summary>Field number for the "equipmentName" field.</summary>
    public const int EquipmentNameFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_equipmentName_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string equipmentName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EquipmentName {
      get { return equipmentName_; }
      set {
        equipmentName_ = value;
      }
    }


    /// <summary>Field number for the "equipmentPictureUrl" field.</summary>
    public const int EquipmentPictureUrlFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_equipmentPictureUrl_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string equipmentPictureUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EquipmentPictureUrl {
      get { return equipmentPictureUrl_; }
      set {
        equipmentPictureUrl_ = value;
      }
    }


    /// <summary>Field number for the "equipmentUom" field.</summary>
    public const int EquipmentUomFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_equipmentUom_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string equipmentUom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EquipmentUom {
      get { return equipmentUom_; }
      set {
        equipmentUom_ = value;
      }
    }


    /// <summary>Field number for the "unitPrice" field.</summary>
    public const int UnitPriceFieldNumber = 11;
    private global::ContractManagement.API.Protos.Money unitPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money UnitPrice {
      get { return unitPrice_; }
      set {
        unitPrice_ = value;
      }
    }

    /// <summary>Field number for the "examinedUnit" field.</summary>
    public const int ExaminedUnitFieldNumber = 12;
    private static readonly pb::FieldCodec<int?> _single_examinedUnit_codec = pb::FieldCodec.ForStructWrapper<int>(98);
    private int? examinedUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ExaminedUnit {
      get { return examinedUnit_; }
      set {
        examinedUnit_ = value;
      }
    }


    /// <summary>Field number for the "realUnit" field.</summary>
    public const int RealUnitFieldNumber = 13;
    private static readonly pb::FieldCodec<int?> _single_realUnit_codec = pb::FieldCodec.ForStructWrapper<int>(106);
    private int? realUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? RealUnit {
      get { return realUnit_; }
      set {
        realUnit_ = value;
      }
    }


    /// <summary>Field number for the "reclaimedUnit" field.</summary>
    public const int ReclaimedUnitFieldNumber = 14;
    private static readonly pb::FieldCodec<int?> _single_reclaimedUnit_codec = pb::FieldCodec.ForStructWrapper<int>(114);
    private int? reclaimedUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ReclaimedUnit {
      get { return reclaimedUnit_; }
      set {
        reclaimedUnit_ = value;
      }
    }


    /// <summary>Field number for the "isInSurveyPlan" field.</summary>
    public const int IsInSurveyPlanFieldNumber = 16;
    private bool isInSurveyPlan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInSurveyPlan {
      get { return isInSurveyPlan_; }
      set {
        isInSurveyPlan_ = value;
      }
    }

    /// <summary>Field number for the "isFree" field.</summary>
    public const int IsFreeFieldNumber = 17;
    private bool isFree_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFree {
      get { return isFree_; }
      set {
        isFree_ = value;
      }
    }

    /// <summary>Field number for the "hasToReclaim" field.</summary>
    public const int HasToReclaimFieldNumber = 18;
    private bool hasToReclaim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToReclaim {
      get { return hasToReclaim_; }
      set {
        hasToReclaim_ = value;
      }
    }

    /// <summary>Field number for the "serialCode" field.</summary>
    public const int SerialCodeFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _single_serialCode_codec = pb::FieldCodec.ForClassWrapper<string>(154);
    private string serialCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SerialCode {
      get { return serialCode_; }
      set {
        serialCode_ = value;
      }
    }


    /// <summary>Field number for the "deviceCode" field.</summary>
    public const int DeviceCodeFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _single_deviceCode_codec = pb::FieldCodec.ForClassWrapper<string>(162);
    private string deviceCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceCode {
      get { return deviceCode_; }
      set {
        deviceCode_ = value;
      }
    }


    /// <summary>Field number for the "manufacturer" field.</summary>
    public const int ManufacturerFieldNumber = 21;
    private static readonly pb::FieldCodec<string> _single_manufacturer_codec = pb::FieldCodec.ForClassWrapper<string>(170);
    private string manufacturer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Manufacturer {
      get { return manufacturer_; }
      set {
        manufacturer_ = value;
      }
    }


    /// <summary>Field number for the "specifications" field.</summary>
    public const int SpecificationsFieldNumber = 22;
    private static readonly pb::FieldCodec<string> _single_specifications_codec = pb::FieldCodec.ForClassWrapper<string>(178);
    private string specifications_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Specifications {
      get { return specifications_; }
      set {
        specifications_ = value;
      }
    }


    /// <summary>Field number for the "statusId" field.</summary>
    public const int StatusIdFieldNumber = 23;
    private static readonly pb::FieldCodec<int?> _single_statusId_codec = pb::FieldCodec.ForStructWrapper<int>(186);
    private int? statusId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? StatusId {
      get { return statusId_; }
      set {
        statusId_ = value;
      }
    }


    /// <summary>Field number for the "equipmentId" field.</summary>
    public const int EquipmentIdFieldNumber = 24;
    private static readonly pb::FieldCodec<int?> _single_equipmentId_codec = pb::FieldCodec.ForStructWrapper<int>(194);
    private int? equipmentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? EquipmentId {
      get { return equipmentId_; }
      set {
        equipmentId_ = value;
      }
    }


    /// <summary>Field number for the "grandTotal" field.</summary>
    public const int GrandTotalFieldNumber = 25;
    private global::ContractManagement.API.Protos.Money grandTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money GrandTotal {
      get { return grandTotal_; }
      set {
        grandTotal_ = value;
      }
    }

    /// <summary>Field number for the "unitPriceBeforeTax" field.</summary>
    public const int UnitPriceBeforeTaxFieldNumber = 26;
    private global::ContractManagement.API.Protos.Money unitPriceBeforeTax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money UnitPriceBeforeTax {
      get { return unitPriceBeforeTax_; }
      set {
        unitPriceBeforeTax_ = value;
      }
    }

    /// <summary>Field number for the "transactionEquipmentId" field.</summary>
    public const int TransactionEquipmentIdFieldNumber = 27;
    private static readonly pb::FieldCodec<int?> _single_transactionEquipmentId_codec = pb::FieldCodec.ForStructWrapper<int>(218);
    private int? transactionEquipmentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TransactionEquipmentId {
      get { return transactionEquipmentId_; }
      set {
        transactionEquipmentId_ = value;
      }
    }


    /// <summary>Field number for the "currencyUnitId" field.</summary>
    public const int CurrencyUnitIdFieldNumber = 28;
    private static readonly pb::FieldCodec<int?> _single_currencyUnitId_codec = pb::FieldCodec.ForStructWrapper<int>(226);
    private int? currencyUnitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? CurrencyUnitId {
      get { return currencyUnitId_; }
      set {
        currencyUnitId_ = value;
      }
    }


    /// <summary>Field number for the "currencyUnitCode" field.</summary>
    public const int CurrencyUnitCodeFieldNumber = 29;
    private static readonly pb::FieldCodec<string> _single_currencyUnitCode_codec = pb::FieldCodec.ForClassWrapper<string>(234);
    private string currencyUnitCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyUnitCode {
      get { return currencyUnitCode_; }
      set {
        currencyUnitCode_ = value;
      }
    }


    /// <summary>Field number for the "installationFullAddress" field.</summary>
    public const int InstallationFullAddressFieldNumber = 30;
    private static readonly pb::FieldCodec<string> _single_installationFullAddress_codec = pb::FieldCodec.ForClassWrapper<string>(242);
    private string installationFullAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstallationFullAddress {
      get { return installationFullAddress_; }
      set {
        installationFullAddress_ = value;
      }
    }


    /// <summary>Field number for the "activatedUnit" field.</summary>
    public const int ActivatedUnitFieldNumber = 31;
    private static readonly pb::FieldCodec<int?> _single_activatedUnit_codec = pb::FieldCodec.ForStructWrapper<int>(250);
    private int? activatedUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ActivatedUnit {
      get { return activatedUnit_; }
      set {
        activatedUnit_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutContractEquipmentGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutContractEquipmentGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OutContractId != other.OutContractId) return false;
      if (OutContractPackageId != other.OutContractPackageId) return false;
      if (ServiceId != other.ServiceId) return false;
      if (ServiceName != other.ServiceName) return false;
      if (ServicePackageId != other.ServicePackageId) return false;
      if (ServicePackageName != other.ServicePackageName) return false;
      if (EquipmentName != other.EquipmentName) return false;
      if (EquipmentPictureUrl != other.EquipmentPictureUrl) return false;
      if (EquipmentUom != other.EquipmentUom) return false;
      if (!object.Equals(UnitPrice, other.UnitPrice)) return false;
      if (ExaminedUnit != other.ExaminedUnit) return false;
      if (RealUnit != other.RealUnit) return false;
      if (ReclaimedUnit != other.ReclaimedUnit) return false;
      if (IsInSurveyPlan != other.IsInSurveyPlan) return false;
      if (IsFree != other.IsFree) return false;
      if (HasToReclaim != other.HasToReclaim) return false;
      if (SerialCode != other.SerialCode) return false;
      if (DeviceCode != other.DeviceCode) return false;
      if (Manufacturer != other.Manufacturer) return false;
      if (Specifications != other.Specifications) return false;
      if (StatusId != other.StatusId) return false;
      if (EquipmentId != other.EquipmentId) return false;
      if (!object.Equals(GrandTotal, other.GrandTotal)) return false;
      if (!object.Equals(UnitPriceBeforeTax, other.UnitPriceBeforeTax)) return false;
      if (TransactionEquipmentId != other.TransactionEquipmentId) return false;
      if (CurrencyUnitId != other.CurrencyUnitId) return false;
      if (CurrencyUnitCode != other.CurrencyUnitCode) return false;
      if (InstallationFullAddress != other.InstallationFullAddress) return false;
      if (ActivatedUnit != other.ActivatedUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (outContractId_ != null) hash ^= OutContractId.GetHashCode();
      if (outContractPackageId_ != null) hash ^= OutContractPackageId.GetHashCode();
      if (serviceId_ != null) hash ^= ServiceId.GetHashCode();
      if (serviceName_ != null) hash ^= ServiceName.GetHashCode();
      if (servicePackageId_ != null) hash ^= ServicePackageId.GetHashCode();
      if (servicePackageName_ != null) hash ^= ServicePackageName.GetHashCode();
      if (equipmentName_ != null) hash ^= EquipmentName.GetHashCode();
      if (equipmentPictureUrl_ != null) hash ^= EquipmentPictureUrl.GetHashCode();
      if (equipmentUom_ != null) hash ^= EquipmentUom.GetHashCode();
      if (unitPrice_ != null) hash ^= UnitPrice.GetHashCode();
      if (examinedUnit_ != null) hash ^= ExaminedUnit.GetHashCode();
      if (realUnit_ != null) hash ^= RealUnit.GetHashCode();
      if (reclaimedUnit_ != null) hash ^= ReclaimedUnit.GetHashCode();
      if (IsInSurveyPlan != false) hash ^= IsInSurveyPlan.GetHashCode();
      if (IsFree != false) hash ^= IsFree.GetHashCode();
      if (HasToReclaim != false) hash ^= HasToReclaim.GetHashCode();
      if (serialCode_ != null) hash ^= SerialCode.GetHashCode();
      if (deviceCode_ != null) hash ^= DeviceCode.GetHashCode();
      if (manufacturer_ != null) hash ^= Manufacturer.GetHashCode();
      if (specifications_ != null) hash ^= Specifications.GetHashCode();
      if (statusId_ != null) hash ^= StatusId.GetHashCode();
      if (equipmentId_ != null) hash ^= EquipmentId.GetHashCode();
      if (grandTotal_ != null) hash ^= GrandTotal.GetHashCode();
      if (unitPriceBeforeTax_ != null) hash ^= UnitPriceBeforeTax.GetHashCode();
      if (transactionEquipmentId_ != null) hash ^= TransactionEquipmentId.GetHashCode();
      if (currencyUnitId_ != null) hash ^= CurrencyUnitId.GetHashCode();
      if (currencyUnitCode_ != null) hash ^= CurrencyUnitCode.GetHashCode();
      if (installationFullAddress_ != null) hash ^= InstallationFullAddress.GetHashCode();
      if (activatedUnit_ != null) hash ^= ActivatedUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (outContractId_ != null) {
        _single_outContractId_codec.WriteTagAndValue(output, OutContractId);
      }
      if (outContractPackageId_ != null) {
        _single_outContractPackageId_codec.WriteTagAndValue(output, OutContractPackageId);
      }
      if (serviceId_ != null) {
        _single_serviceId_codec.WriteTagAndValue(output, ServiceId);
      }
      if (serviceName_ != null) {
        _single_serviceName_codec.WriteTagAndValue(output, ServiceName);
      }
      if (servicePackageId_ != null) {
        _single_servicePackageId_codec.WriteTagAndValue(output, ServicePackageId);
      }
      if (servicePackageName_ != null) {
        _single_servicePackageName_codec.WriteTagAndValue(output, ServicePackageName);
      }
      if (equipmentName_ != null) {
        _single_equipmentName_codec.WriteTagAndValue(output, EquipmentName);
      }
      if (equipmentPictureUrl_ != null) {
        _single_equipmentPictureUrl_codec.WriteTagAndValue(output, EquipmentPictureUrl);
      }
      if (equipmentUom_ != null) {
        _single_equipmentUom_codec.WriteTagAndValue(output, EquipmentUom);
      }
      if (unitPrice_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(UnitPrice);
      }
      if (examinedUnit_ != null) {
        _single_examinedUnit_codec.WriteTagAndValue(output, ExaminedUnit);
      }
      if (realUnit_ != null) {
        _single_realUnit_codec.WriteTagAndValue(output, RealUnit);
      }
      if (reclaimedUnit_ != null) {
        _single_reclaimedUnit_codec.WriteTagAndValue(output, ReclaimedUnit);
      }
      if (IsInSurveyPlan != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsInSurveyPlan);
      }
      if (IsFree != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(IsFree);
      }
      if (HasToReclaim != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(HasToReclaim);
      }
      if (serialCode_ != null) {
        _single_serialCode_codec.WriteTagAndValue(output, SerialCode);
      }
      if (deviceCode_ != null) {
        _single_deviceCode_codec.WriteTagAndValue(output, DeviceCode);
      }
      if (manufacturer_ != null) {
        _single_manufacturer_codec.WriteTagAndValue(output, Manufacturer);
      }
      if (specifications_ != null) {
        _single_specifications_codec.WriteTagAndValue(output, Specifications);
      }
      if (statusId_ != null) {
        _single_statusId_codec.WriteTagAndValue(output, StatusId);
      }
      if (equipmentId_ != null) {
        _single_equipmentId_codec.WriteTagAndValue(output, EquipmentId);
      }
      if (grandTotal_ != null) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(GrandTotal);
      }
      if (unitPriceBeforeTax_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(UnitPriceBeforeTax);
      }
      if (transactionEquipmentId_ != null) {
        _single_transactionEquipmentId_codec.WriteTagAndValue(output, TransactionEquipmentId);
      }
      if (currencyUnitId_ != null) {
        _single_currencyUnitId_codec.WriteTagAndValue(output, CurrencyUnitId);
      }
      if (currencyUnitCode_ != null) {
        _single_currencyUnitCode_codec.WriteTagAndValue(output, CurrencyUnitCode);
      }
      if (installationFullAddress_ != null) {
        _single_installationFullAddress_codec.WriteTagAndValue(output, InstallationFullAddress);
      }
      if (activatedUnit_ != null) {
        _single_activatedUnit_codec.WriteTagAndValue(output, ActivatedUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (outContractId_ != null) {
        size += _single_outContractId_codec.CalculateSizeWithTag(OutContractId);
      }
      if (outContractPackageId_ != null) {
        size += _single_outContractPackageId_codec.CalculateSizeWithTag(OutContractPackageId);
      }
      if (serviceId_ != null) {
        size += _single_serviceId_codec.CalculateSizeWithTag(ServiceId);
      }
      if (serviceName_ != null) {
        size += _single_serviceName_codec.CalculateSizeWithTag(ServiceName);
      }
      if (servicePackageId_ != null) {
        size += _single_servicePackageId_codec.CalculateSizeWithTag(ServicePackageId);
      }
      if (servicePackageName_ != null) {
        size += _single_servicePackageName_codec.CalculateSizeWithTag(ServicePackageName);
      }
      if (equipmentName_ != null) {
        size += _single_equipmentName_codec.CalculateSizeWithTag(EquipmentName);
      }
      if (equipmentPictureUrl_ != null) {
        size += _single_equipmentPictureUrl_codec.CalculateSizeWithTag(EquipmentPictureUrl);
      }
      if (equipmentUom_ != null) {
        size += _single_equipmentUom_codec.CalculateSizeWithTag(EquipmentUom);
      }
      if (unitPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnitPrice);
      }
      if (examinedUnit_ != null) {
        size += _single_examinedUnit_codec.CalculateSizeWithTag(ExaminedUnit);
      }
      if (realUnit_ != null) {
        size += _single_realUnit_codec.CalculateSizeWithTag(RealUnit);
      }
      if (reclaimedUnit_ != null) {
        size += _single_reclaimedUnit_codec.CalculateSizeWithTag(ReclaimedUnit);
      }
      if (IsInSurveyPlan != false) {
        size += 2 + 1;
      }
      if (IsFree != false) {
        size += 2 + 1;
      }
      if (HasToReclaim != false) {
        size += 2 + 1;
      }
      if (serialCode_ != null) {
        size += _single_serialCode_codec.CalculateSizeWithTag(SerialCode);
      }
      if (deviceCode_ != null) {
        size += _single_deviceCode_codec.CalculateSizeWithTag(DeviceCode);
      }
      if (manufacturer_ != null) {
        size += _single_manufacturer_codec.CalculateSizeWithTag(Manufacturer);
      }
      if (specifications_ != null) {
        size += _single_specifications_codec.CalculateSizeWithTag(Specifications);
      }
      if (statusId_ != null) {
        size += _single_statusId_codec.CalculateSizeWithTag(StatusId);
      }
      if (equipmentId_ != null) {
        size += _single_equipmentId_codec.CalculateSizeWithTag(EquipmentId);
      }
      if (grandTotal_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GrandTotal);
      }
      if (unitPriceBeforeTax_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnitPriceBeforeTax);
      }
      if (transactionEquipmentId_ != null) {
        size += _single_transactionEquipmentId_codec.CalculateSizeWithTag(TransactionEquipmentId);
      }
      if (currencyUnitId_ != null) {
        size += _single_currencyUnitId_codec.CalculateSizeWithTag(CurrencyUnitId);
      }
      if (currencyUnitCode_ != null) {
        size += _single_currencyUnitCode_codec.CalculateSizeWithTag(CurrencyUnitCode);
      }
      if (installationFullAddress_ != null) {
        size += _single_installationFullAddress_codec.CalculateSizeWithTag(InstallationFullAddress);
      }
      if (activatedUnit_ != null) {
        size += _single_activatedUnit_codec.CalculateSizeWithTag(ActivatedUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutContractEquipmentGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0) {
          Id = other.Id;
        }
      }
      if (other.outContractId_ != null) {
        if (outContractId_ == null || other.OutContractId != 0) {
          OutContractId = other.OutContractId;
        }
      }
      if (other.outContractPackageId_ != null) {
        if (outContractPackageId_ == null || other.OutContractPackageId != 0) {
          OutContractPackageId = other.OutContractPackageId;
        }
      }
      if (other.serviceId_ != null) {
        if (serviceId_ == null || other.ServiceId != 0) {
          ServiceId = other.ServiceId;
        }
      }
      if (other.serviceName_ != null) {
        if (serviceName_ == null || other.ServiceName != "") {
          ServiceName = other.ServiceName;
        }
      }
      if (other.servicePackageId_ != null) {
        if (servicePackageId_ == null || other.ServicePackageId != 0) {
          ServicePackageId = other.ServicePackageId;
        }
      }
      if (other.servicePackageName_ != null) {
        if (servicePackageName_ == null || other.ServicePackageName != "") {
          ServicePackageName = other.ServicePackageName;
        }
      }
      if (other.equipmentName_ != null) {
        if (equipmentName_ == null || other.EquipmentName != "") {
          EquipmentName = other.EquipmentName;
        }
      }
      if (other.equipmentPictureUrl_ != null) {
        if (equipmentPictureUrl_ == null || other.EquipmentPictureUrl != "") {
          EquipmentPictureUrl = other.EquipmentPictureUrl;
        }
      }
      if (other.equipmentUom_ != null) {
        if (equipmentUom_ == null || other.EquipmentUom != "") {
          EquipmentUom = other.EquipmentUom;
        }
      }
      if (other.unitPrice_ != null) {
        if (unitPrice_ == null) {
          UnitPrice = new global::ContractManagement.API.Protos.Money();
        }
        UnitPrice.MergeFrom(other.UnitPrice);
      }
      if (other.examinedUnit_ != null) {
        if (examinedUnit_ == null || other.ExaminedUnit != 0) {
          ExaminedUnit = other.ExaminedUnit;
        }
      }
      if (other.realUnit_ != null) {
        if (realUnit_ == null || other.RealUnit != 0) {
          RealUnit = other.RealUnit;
        }
      }
      if (other.reclaimedUnit_ != null) {
        if (reclaimedUnit_ == null || other.ReclaimedUnit != 0) {
          ReclaimedUnit = other.ReclaimedUnit;
        }
      }
      if (other.IsInSurveyPlan != false) {
        IsInSurveyPlan = other.IsInSurveyPlan;
      }
      if (other.IsFree != false) {
        IsFree = other.IsFree;
      }
      if (other.HasToReclaim != false) {
        HasToReclaim = other.HasToReclaim;
      }
      if (other.serialCode_ != null) {
        if (serialCode_ == null || other.SerialCode != "") {
          SerialCode = other.SerialCode;
        }
      }
      if (other.deviceCode_ != null) {
        if (deviceCode_ == null || other.DeviceCode != "") {
          DeviceCode = other.DeviceCode;
        }
      }
      if (other.manufacturer_ != null) {
        if (manufacturer_ == null || other.Manufacturer != "") {
          Manufacturer = other.Manufacturer;
        }
      }
      if (other.specifications_ != null) {
        if (specifications_ == null || other.Specifications != "") {
          Specifications = other.Specifications;
        }
      }
      if (other.statusId_ != null) {
        if (statusId_ == null || other.StatusId != 0) {
          StatusId = other.StatusId;
        }
      }
      if (other.equipmentId_ != null) {
        if (equipmentId_ == null || other.EquipmentId != 0) {
          EquipmentId = other.EquipmentId;
        }
      }
      if (other.grandTotal_ != null) {
        if (grandTotal_ == null) {
          GrandTotal = new global::ContractManagement.API.Protos.Money();
        }
        GrandTotal.MergeFrom(other.GrandTotal);
      }
      if (other.unitPriceBeforeTax_ != null) {
        if (unitPriceBeforeTax_ == null) {
          UnitPriceBeforeTax = new global::ContractManagement.API.Protos.Money();
        }
        UnitPriceBeforeTax.MergeFrom(other.UnitPriceBeforeTax);
      }
      if (other.transactionEquipmentId_ != null) {
        if (transactionEquipmentId_ == null || other.TransactionEquipmentId != 0) {
          TransactionEquipmentId = other.TransactionEquipmentId;
        }
      }
      if (other.currencyUnitId_ != null) {
        if (currencyUnitId_ == null || other.CurrencyUnitId != 0) {
          CurrencyUnitId = other.CurrencyUnitId;
        }
      }
      if (other.currencyUnitCode_ != null) {
        if (currencyUnitCode_ == null || other.CurrencyUnitCode != "") {
          CurrencyUnitCode = other.CurrencyUnitCode;
        }
      }
      if (other.installationFullAddress_ != null) {
        if (installationFullAddress_ == null || other.InstallationFullAddress != "") {
          InstallationFullAddress = other.InstallationFullAddress;
        }
      }
      if (other.activatedUnit_ != null) {
        if (activatedUnit_ == null || other.ActivatedUnit != 0) {
          ActivatedUnit = other.ActivatedUnit;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0) {
              Id = value;
            }
            break;
          }
          case 18: {
            int? value = _single_outContractId_codec.Read(input);
            if (outContractId_ == null || value != 0) {
              OutContractId = value;
            }
            break;
          }
          case 26: {
            int? value = _single_outContractPackageId_codec.Read(input);
            if (outContractPackageId_ == null || value != 0) {
              OutContractPackageId = value;
            }
            break;
          }
          case 34: {
            int? value = _single_serviceId_codec.Read(input);
            if (serviceId_ == null || value != 0) {
              ServiceId = value;
            }
            break;
          }
          case 42: {
            string value = _single_serviceName_codec.Read(input);
            if (serviceName_ == null || value != "") {
              ServiceName = value;
            }
            break;
          }
          case 50: {
            int? value = _single_servicePackageId_codec.Read(input);
            if (servicePackageId_ == null || value != 0) {
              ServicePackageId = value;
            }
            break;
          }
          case 58: {
            string value = _single_servicePackageName_codec.Read(input);
            if (servicePackageName_ == null || value != "") {
              ServicePackageName = value;
            }
            break;
          }
          case 66: {
            string value = _single_equipmentName_codec.Read(input);
            if (equipmentName_ == null || value != "") {
              EquipmentName = value;
            }
            break;
          }
          case 74: {
            string value = _single_equipmentPictureUrl_codec.Read(input);
            if (equipmentPictureUrl_ == null || value != "") {
              EquipmentPictureUrl = value;
            }
            break;
          }
          case 82: {
            string value = _single_equipmentUom_codec.Read(input);
            if (equipmentUom_ == null || value != "") {
              EquipmentUom = value;
            }
            break;
          }
          case 90: {
            if (unitPrice_ == null) {
              UnitPrice = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(UnitPrice);
            break;
          }
          case 98: {
            int? value = _single_examinedUnit_codec.Read(input);
            if (examinedUnit_ == null || value != 0) {
              ExaminedUnit = value;
            }
            break;
          }
          case 106: {
            int? value = _single_realUnit_codec.Read(input);
            if (realUnit_ == null || value != 0) {
              RealUnit = value;
            }
            break;
          }
          case 114: {
            int? value = _single_reclaimedUnit_codec.Read(input);
            if (reclaimedUnit_ == null || value != 0) {
              ReclaimedUnit = value;
            }
            break;
          }
          case 128: {
            IsInSurveyPlan = input.ReadBool();
            break;
          }
          case 136: {
            IsFree = input.ReadBool();
            break;
          }
          case 144: {
            HasToReclaim = input.ReadBool();
            break;
          }
          case 154: {
            string value = _single_serialCode_codec.Read(input);
            if (serialCode_ == null || value != "") {
              SerialCode = value;
            }
            break;
          }
          case 162: {
            string value = _single_deviceCode_codec.Read(input);
            if (deviceCode_ == null || value != "") {
              DeviceCode = value;
            }
            break;
          }
          case 170: {
            string value = _single_manufacturer_codec.Read(input);
            if (manufacturer_ == null || value != "") {
              Manufacturer = value;
            }
            break;
          }
          case 178: {
            string value = _single_specifications_codec.Read(input);
            if (specifications_ == null || value != "") {
              Specifications = value;
            }
            break;
          }
          case 186: {
            int? value = _single_statusId_codec.Read(input);
            if (statusId_ == null || value != 0) {
              StatusId = value;
            }
            break;
          }
          case 194: {
            int? value = _single_equipmentId_codec.Read(input);
            if (equipmentId_ == null || value != 0) {
              EquipmentId = value;
            }
            break;
          }
          case 202: {
            if (grandTotal_ == null) {
              GrandTotal = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(GrandTotal);
            break;
          }
          case 210: {
            if (unitPriceBeforeTax_ == null) {
              UnitPriceBeforeTax = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(UnitPriceBeforeTax);
            break;
          }
          case 218: {
            int? value = _single_transactionEquipmentId_codec.Read(input);
            if (transactionEquipmentId_ == null || value != 0) {
              TransactionEquipmentId = value;
            }
            break;
          }
          case 226: {
            int? value = _single_currencyUnitId_codec.Read(input);
            if (currencyUnitId_ == null || value != 0) {
              CurrencyUnitId = value;
            }
            break;
          }
          case 234: {
            string value = _single_currencyUnitCode_codec.Read(input);
            if (currencyUnitCode_ == null || value != "") {
              CurrencyUnitCode = value;
            }
            break;
          }
          case 242: {
            string value = _single_installationFullAddress_codec.Read(input);
            if (installationFullAddress_ == null || value != "") {
              InstallationFullAddress = value;
            }
            break;
          }
          case 250: {
            int? value = _single_activatedUnit_codec.Read(input);
            if (activatedUnit_ == null || value != 0) {
              ActivatedUnit = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractGrpcDTO : pb::IMessage<ContractGrpcDTO> {
    private static readonly pb::MessageParser<ContractGrpcDTO> _parser = new pb::MessageParser<ContractGrpcDTO>(() => new ContractGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractGrpcDTO(ContractGrpcDTO other) : this() {
      Id = other.Id;
      ContractCode = other.ContractCode;
      AgentCode = other.AgentCode;
      ContractTypeId = other.ContractTypeId;
      MarketAreaId = other.MarketAreaId;
      MarketAreaName = other.MarketAreaName;
      ProjectId = other.ProjectId;
      ProjectName = other.ProjectName;
      OrganizationUnitId = other.OrganizationUnitId;
      ContractStatusId = other.ContractStatusId;
      ContractorIdentityGuid = other.ContractorIdentityGuid;
      ContractorId = other.ContractorId;
      SalesmanIdentityGuid = other.SalesmanIdentityGuid;
      PaymentMethodId = other.PaymentMethodId;
      Description = other.Description;
      SignedUserId = other.SignedUserId;
      SalesmanId = other.SalesmanId;
      ContractNote = other.ContractNote;
      TotalTaxPercent = other.TotalTaxPercent;
      ContractStatus = other.ContractStatus;
      totalTaxAmount_ = other.totalTaxAmount_ != null ? other.totalTaxAmount_.Clone() : null;
      installationFee_ = other.installationFee_ != null ? other.installationFee_.Clone() : null;
      otherFee_ = other.otherFee_ != null ? other.otherFee_.Clone() : null;
      subTotal_ = other.subTotal_ != null ? other.subTotal_.Clone() : null;
      grandTotalBeforeTax_ = other.grandTotalBeforeTax_ != null ? other.grandTotalBeforeTax_.Clone() : null;
      grandTotal_ = other.grandTotal_ != null ? other.grandTotal_.Clone() : null;
      payment_ = other.payment_ != null ? other.payment_.Clone() : null;
      timeLine_ = other.timeLine_ != null ? other.timeLine_.Clone() : null;
      contractor_ = other.contractor_ != null ? other.contractor_.Clone() : null;
      FiberNodeInfo = other.FiberNodeInfo;
      AgentContractCode = other.AgentContractCode;
      CashierUserId = other.CashierUserId;
      equipmentAmount_ = other.equipmentAmount_ != null ? other.equipmentAmount_.Clone() : null;
      servicePackageAmount_ = other.servicePackageAmount_ != null ? other.servicePackageAmount_.Clone() : null;
      servicePackages_ = other.servicePackages_.Clone();
      attachmentFiles_ = other.attachmentFiles_.Clone();
      contractOfTaxes_ = other.contractOfTaxes_.Clone();
      ContractStatusName = other.ContractStatusName;
      SignedUserName = other.SignedUserName;
      OrganizationUnitName = other.OrganizationUnitName;
      CashierUserName = other.CashierUserName;
      AgentId = other.AgentId;
      FiberNoteInfo = other.FiberNoteInfo;
      taxCategories_ = other.taxCategories_.Clone();
      NumberBillingLimitDays = other.NumberBillingLimitDays;
      CashierFullName = other.CashierFullName;
      contractContent_ = other.contractContent_ != null ? other.contractContent_.Clone() : null;
      contractorHTC_ = other.contractorHTC_ != null ? other.contractorHTC_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractGrpcDTO Clone() {
      return new ContractGrpcDTO(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_id_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "contractCode" field.</summary>
    public const int ContractCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_contractCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string contractCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = value;
      }
    }


    /// <summary>Field number for the "agentCode" field.</summary>
    public const int AgentCodeFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_agentCode_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string agentCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AgentCode {
      get { return agentCode_; }
      set {
        agentCode_ = value;
      }
    }


    /// <summary>Field number for the "contractTypeId" field.</summary>
    public const int ContractTypeIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_contractTypeId_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? contractTypeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractTypeId {
      get { return contractTypeId_; }
      set {
        contractTypeId_ = value;
      }
    }


    /// <summary>Field number for the "marketAreaId" field.</summary>
    public const int MarketAreaIdFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_marketAreaId_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? marketAreaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? MarketAreaId {
      get { return marketAreaId_; }
      set {
        marketAreaId_ = value;
      }
    }


    /// <summary>Field number for the "marketAreaName" field.</summary>
    public const int MarketAreaNameFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_marketAreaName_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string marketAreaName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketAreaName {
      get { return marketAreaName_; }
      set {
        marketAreaName_ = value;
      }
    }


    /// <summary>Field number for the "projectId" field.</summary>
    public const int ProjectIdFieldNumber = 7;
    private static readonly pb::FieldCodec<int?> _single_projectId_codec = pb::FieldCodec.ForStructWrapper<int>(58);
    private int? projectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ProjectId {
      get { return projectId_; }
      set {
        projectId_ = value;
      }
    }


    /// <summary>Field number for the "projectName" field.</summary>
    public const int ProjectNameFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_projectName_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string projectName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectName {
      get { return projectName_; }
      set {
        projectName_ = value;
      }
    }


    /// <summary>Field number for the "organizationUnitId" field.</summary>
    public const int OrganizationUnitIdFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_organizationUnitId_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string organizationUnitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganizationUnitId {
      get { return organizationUnitId_; }
      set {
        organizationUnitId_ = value;
      }
    }


    /// <summary>Field number for the "contractStatusId" field.</summary>
    public const int ContractStatusIdFieldNumber = 10;
    private static readonly pb::FieldCodec<int?> _single_contractStatusId_codec = pb::FieldCodec.ForStructWrapper<int>(82);
    private int? contractStatusId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractStatusId {
      get { return contractStatusId_; }
      set {
        contractStatusId_ = value;
      }
    }


    /// <summary>Field number for the "contractorIdentityGuid" field.</summary>
    public const int ContractorIdentityGuidFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_contractorIdentityGuid_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string contractorIdentityGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorIdentityGuid {
      get { return contractorIdentityGuid_; }
      set {
        contractorIdentityGuid_ = value;
      }
    }


    /// <summary>Field number for the "contractorId" field.</summary>
    public const int ContractorIdFieldNumber = 12;
    private static readonly pb::FieldCodec<int?> _single_contractorId_codec = pb::FieldCodec.ForStructWrapper<int>(98);
    private int? contractorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractorId {
      get { return contractorId_; }
      set {
        contractorId_ = value;
      }
    }


    /// <summary>Field number for the "salesmanIdentityGuid" field.</summary>
    public const int SalesmanIdentityGuidFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_salesmanIdentityGuid_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string salesmanIdentityGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SalesmanIdentityGuid {
      get { return salesmanIdentityGuid_; }
      set {
        salesmanIdentityGuid_ = value;
      }
    }


    /// <summary>Field number for the "paymentMethodId" field.</summary>
    public const int PaymentMethodIdFieldNumber = 14;
    private static readonly pb::FieldCodec<int?> _single_paymentMethodId_codec = pb::FieldCodec.ForStructWrapper<int>(114);
    private int? paymentMethodId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PaymentMethodId {
      get { return paymentMethodId_; }
      set {
        paymentMethodId_ = value;
      }
    }


    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "signedUserId" field.</summary>
    public const int SignedUserIdFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_signedUserId_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string signedUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignedUserId {
      get { return signedUserId_; }
      set {
        signedUserId_ = value;
      }
    }


    /// <summary>Field number for the "salesmanId" field.</summary>
    public const int SalesmanIdFieldNumber = 17;
    private static readonly pb::FieldCodec<int?> _single_salesmanId_codec = pb::FieldCodec.ForStructWrapper<int>(138);
    private int? salesmanId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? SalesmanId {
      get { return salesmanId_; }
      set {
        salesmanId_ = value;
      }
    }


    /// <summary>Field number for the "contractNote" field.</summary>
    public const int ContractNoteFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _single_contractNote_codec = pb::FieldCodec.ForClassWrapper<string>(146);
    private string contractNote_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNote {
      get { return contractNote_; }
      set {
        contractNote_ = value;
      }
    }


    /// <summary>Field number for the "totalTaxPercent" field.</summary>
    public const int TotalTaxPercentFieldNumber = 19;
    private static readonly pb::FieldCodec<float?> _single_totalTaxPercent_codec = pb::FieldCodec.ForStructWrapper<float>(154);
    private float? totalTaxPercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? TotalTaxPercent {
      get { return totalTaxPercent_; }
      set {
        totalTaxPercent_ = value;
      }
    }


    /// <summary>Field number for the "contractStatus" field.</summary>
    public const int ContractStatusFieldNumber = 20;
    private static readonly pb::FieldCodec<int?> _single_contractStatus_codec = pb::FieldCodec.ForStructWrapper<int>(162);
    private int? contractStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractStatus {
      get { return contractStatus_; }
      set {
        contractStatus_ = value;
      }
    }


    /// <summary>Field number for the "totalTaxAmount" field.</summary>
    public const int TotalTaxAmountFieldNumber = 21;
    private global::ContractManagement.API.Protos.Money totalTaxAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money TotalTaxAmount {
      get { return totalTaxAmount_; }
      set {
        totalTaxAmount_ = value;
      }
    }

    /// <summary>Field number for the "installationFee" field.</summary>
    public const int InstallationFeeFieldNumber = 22;
    private global::ContractManagement.API.Protos.Money installationFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money InstallationFee {
      get { return installationFee_; }
      set {
        installationFee_ = value;
      }
    }

    /// <summary>Field number for the "otherFee" field.</summary>
    public const int OtherFeeFieldNumber = 23;
    private global::ContractManagement.API.Protos.Money otherFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money OtherFee {
      get { return otherFee_; }
      set {
        otherFee_ = value;
      }
    }

    /// <summary>Field number for the "subTotal" field.</summary>
    public const int SubTotalFieldNumber = 24;
    private global::ContractManagement.API.Protos.Money subTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money SubTotal {
      get { return subTotal_; }
      set {
        subTotal_ = value;
      }
    }

    /// <summary>Field number for the "grandTotalBeforeTax" field.</summary>
    public const int GrandTotalBeforeTaxFieldNumber = 26;
    private global::ContractManagement.API.Protos.Money grandTotalBeforeTax_;
    /// <summary>
    ///Money subTotalBeforeTax= 25;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money GrandTotalBeforeTax {
      get { return grandTotalBeforeTax_; }
      set {
        grandTotalBeforeTax_ = value;
      }
    }

    /// <summary>Field number for the "grandTotal" field.</summary>
    public const int GrandTotalFieldNumber = 27;
    private global::ContractManagement.API.Protos.Money grandTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money GrandTotal {
      get { return grandTotal_; }
      set {
        grandTotal_ = value;
      }
    }

    /// <summary>Field number for the "payment" field.</summary>
    public const int PaymentFieldNumber = 29;
    private global::ContractManagement.API.Protos.PaymentMethodGrpc payment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.PaymentMethodGrpc Payment {
      get { return payment_; }
      set {
        payment_ = value;
      }
    }

    /// <summary>Field number for the "timeLine" field.</summary>
    public const int TimeLineFieldNumber = 30;
    private global::ContractManagement.API.Protos.ContractTimeLineGrpc timeLine_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.ContractTimeLineGrpc TimeLine {
      get { return timeLine_; }
      set {
        timeLine_ = value;
      }
    }

    /// <summary>Field number for the "contractor" field.</summary>
    public const int ContractorFieldNumber = 31;
    private global::ContractManagement.API.Protos.ContractorGrpcDTO contractor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.ContractorGrpcDTO Contractor {
      get { return contractor_; }
      set {
        contractor_ = value;
      }
    }

    /// <summary>Field number for the "fiberNodeInfo" field.</summary>
    public const int FiberNodeInfoFieldNumber = 32;
    private static readonly pb::FieldCodec<string> _single_fiberNodeInfo_codec = pb::FieldCodec.ForClassWrapper<string>(258);
    private string fiberNodeInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FiberNodeInfo {
      get { return fiberNodeInfo_; }
      set {
        fiberNodeInfo_ = value;
      }
    }


    /// <summary>Field number for the "agentContractCode" field.</summary>
    public const int AgentContractCodeFieldNumber = 33;
    private static readonly pb::FieldCodec<string> _single_agentContractCode_codec = pb::FieldCodec.ForClassWrapper<string>(266);
    private string agentContractCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AgentContractCode {
      get { return agentContractCode_; }
      set {
        agentContractCode_ = value;
      }
    }


    /// <summary>Field number for the "cashierUserId" field.</summary>
    public const int CashierUserIdFieldNumber = 34;
    private static readonly pb::FieldCodec<string> _single_cashierUserId_codec = pb::FieldCodec.ForClassWrapper<string>(274);
    private string cashierUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CashierUserId {
      get { return cashierUserId_; }
      set {
        cashierUserId_ = value;
      }
    }


    /// <summary>Field number for the "equipmentAmount" field.</summary>
    public const int EquipmentAmountFieldNumber = 35;
    private global::ContractManagement.API.Protos.Money equipmentAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money EquipmentAmount {
      get { return equipmentAmount_; }
      set {
        equipmentAmount_ = value;
      }
    }

    /// <summary>Field number for the "servicePackageAmount" field.</summary>
    public const int ServicePackageAmountFieldNumber = 37;
    private global::ContractManagement.API.Protos.Money servicePackageAmount_;
    /// <summary>
    ///Money equipmentAmountBeforeTax = 36;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money ServicePackageAmount {
      get { return servicePackageAmount_; }
      set {
        servicePackageAmount_ = value;
      }
    }

    /// <summary>Field number for the "servicePackages" field.</summary>
    public const int ServicePackagesFieldNumber = 39;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO> _repeated_servicePackages_codec
        = pb::FieldCodec.ForMessage(314, global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO> servicePackages_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO>();
    /// <summary>
    ///Money servicePackageAmountBeforeTax = 38;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractServicePackageGrpcDTO> ServicePackages {
      get { return servicePackages_; }
    }

    /// <summary>Field number for the "attachmentFiles" field.</summary>
    public const int AttachmentFilesFieldNumber = 41;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.AttachmentFileGrpcDTO> _repeated_attachmentFiles_codec
        = pb::FieldCodec.ForMessage(330, global::ContractManagement.API.Protos.AttachmentFileGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.AttachmentFileGrpcDTO> attachmentFiles_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.AttachmentFileGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.AttachmentFileGrpcDTO> AttachmentFiles {
      get { return attachmentFiles_; }
    }

    /// <summary>Field number for the "contractOfTaxes" field.</summary>
    public const int ContractOfTaxesFieldNumber = 42;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ContractOfTaxGrpcDTO> _repeated_contractOfTaxes_codec
        = pb::FieldCodec.ForMessage(338, global::ContractManagement.API.Protos.ContractOfTaxGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ContractOfTaxGrpcDTO> contractOfTaxes_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ContractOfTaxGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ContractOfTaxGrpcDTO> ContractOfTaxes {
      get { return contractOfTaxes_; }
    }

    /// <summary>Field number for the "contractStatusName" field.</summary>
    public const int ContractStatusNameFieldNumber = 43;
    private static readonly pb::FieldCodec<string> _single_contractStatusName_codec = pb::FieldCodec.ForClassWrapper<string>(346);
    private string contractStatusName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusName {
      get { return contractStatusName_; }
      set {
        contractStatusName_ = value;
      }
    }


    /// <summary>Field number for the "signedUserName" field.</summary>
    public const int SignedUserNameFieldNumber = 44;
    private static readonly pb::FieldCodec<string> _single_signedUserName_codec = pb::FieldCodec.ForClassWrapper<string>(354);
    private string signedUserName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignedUserName {
      get { return signedUserName_; }
      set {
        signedUserName_ = value;
      }
    }


    /// <summary>Field number for the "organizationUnitName" field.</summary>
    public const int OrganizationUnitNameFieldNumber = 45;
    private static readonly pb::FieldCodec<string> _single_organizationUnitName_codec = pb::FieldCodec.ForClassWrapper<string>(362);
    private string organizationUnitName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganizationUnitName {
      get { return organizationUnitName_; }
      set {
        organizationUnitName_ = value;
      }
    }


    /// <summary>Field number for the "cashierUserName" field.</summary>
    public const int CashierUserNameFieldNumber = 46;
    private static readonly pb::FieldCodec<string> _single_cashierUserName_codec = pb::FieldCodec.ForClassWrapper<string>(370);
    private string cashierUserName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CashierUserName {
      get { return cashierUserName_; }
      set {
        cashierUserName_ = value;
      }
    }


    /// <summary>Field number for the "agentId" field.</summary>
    public const int AgentIdFieldNumber = 47;
    private static readonly pb::FieldCodec<string> _single_agentId_codec = pb::FieldCodec.ForClassWrapper<string>(378);
    private string agentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AgentId {
      get { return agentId_; }
      set {
        agentId_ = value;
      }
    }


    /// <summary>Field number for the "fiberNoteInfo" field.</summary>
    public const int FiberNoteInfoFieldNumber = 48;
    private static readonly pb::FieldCodec<string> _single_fiberNoteInfo_codec = pb::FieldCodec.ForClassWrapper<string>(386);
    private string fiberNoteInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FiberNoteInfo {
      get { return fiberNoteInfo_; }
      set {
        fiberNoteInfo_ = value;
      }
    }


    /// <summary>Field number for the "taxCategories" field.</summary>
    public const int TaxCategoriesFieldNumber = 49;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.TaxCategoryGrpcDTO> _repeated_taxCategories_codec
        = pb::FieldCodec.ForMessage(394, global::ContractManagement.API.Protos.TaxCategoryGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.TaxCategoryGrpcDTO> taxCategories_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.TaxCategoryGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.TaxCategoryGrpcDTO> TaxCategories {
      get { return taxCategories_; }
    }

    /// <summary>Field number for the "numberBillingLimitDays" field.</summary>
    public const int NumberBillingLimitDaysFieldNumber = 50;
    private static readonly pb::FieldCodec<int?> _single_numberBillingLimitDays_codec = pb::FieldCodec.ForStructWrapper<int>(402);
    private int? numberBillingLimitDays_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? NumberBillingLimitDays {
      get { return numberBillingLimitDays_; }
      set {
        numberBillingLimitDays_ = value;
      }
    }


    /// <summary>Field number for the "cashierFullName" field.</summary>
    public const int CashierFullNameFieldNumber = 51;
    private static readonly pb::FieldCodec<string> _single_cashierFullName_codec = pb::FieldCodec.ForClassWrapper<string>(410);
    private string cashierFullName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CashierFullName {
      get { return cashierFullName_; }
      set {
        cashierFullName_ = value;
      }
    }


    /// <summary>Field number for the "contractContent" field.</summary>
    public const int ContractContentFieldNumber = 52;
    private global::ContractManagement.API.Protos.ContractContentDTOGrpc contractContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.ContractContentDTOGrpc ContractContent {
      get { return contractContent_; }
      set {
        contractContent_ = value;
      }
    }

    /// <summary>Field number for the "contractorHTC" field.</summary>
    public const int ContractorHTCFieldNumber = 53;
    private global::ContractManagement.API.Protos.ContractorGrpcDTO contractorHTC_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.ContractorGrpcDTO ContractorHTC {
      get { return contractorHTC_; }
      set {
        contractorHTC_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ContractCode != other.ContractCode) return false;
      if (AgentCode != other.AgentCode) return false;
      if (ContractTypeId != other.ContractTypeId) return false;
      if (MarketAreaId != other.MarketAreaId) return false;
      if (MarketAreaName != other.MarketAreaName) return false;
      if (ProjectId != other.ProjectId) return false;
      if (ProjectName != other.ProjectName) return false;
      if (OrganizationUnitId != other.OrganizationUnitId) return false;
      if (ContractStatusId != other.ContractStatusId) return false;
      if (ContractorIdentityGuid != other.ContractorIdentityGuid) return false;
      if (ContractorId != other.ContractorId) return false;
      if (SalesmanIdentityGuid != other.SalesmanIdentityGuid) return false;
      if (PaymentMethodId != other.PaymentMethodId) return false;
      if (Description != other.Description) return false;
      if (SignedUserId != other.SignedUserId) return false;
      if (SalesmanId != other.SalesmanId) return false;
      if (ContractNote != other.ContractNote) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(TotalTaxPercent, other.TotalTaxPercent)) return false;
      if (ContractStatus != other.ContractStatus) return false;
      if (!object.Equals(TotalTaxAmount, other.TotalTaxAmount)) return false;
      if (!object.Equals(InstallationFee, other.InstallationFee)) return false;
      if (!object.Equals(OtherFee, other.OtherFee)) return false;
      if (!object.Equals(SubTotal, other.SubTotal)) return false;
      if (!object.Equals(GrandTotalBeforeTax, other.GrandTotalBeforeTax)) return false;
      if (!object.Equals(GrandTotal, other.GrandTotal)) return false;
      if (!object.Equals(Payment, other.Payment)) return false;
      if (!object.Equals(TimeLine, other.TimeLine)) return false;
      if (!object.Equals(Contractor, other.Contractor)) return false;
      if (FiberNodeInfo != other.FiberNodeInfo) return false;
      if (AgentContractCode != other.AgentContractCode) return false;
      if (CashierUserId != other.CashierUserId) return false;
      if (!object.Equals(EquipmentAmount, other.EquipmentAmount)) return false;
      if (!object.Equals(ServicePackageAmount, other.ServicePackageAmount)) return false;
      if(!servicePackages_.Equals(other.servicePackages_)) return false;
      if(!attachmentFiles_.Equals(other.attachmentFiles_)) return false;
      if(!contractOfTaxes_.Equals(other.contractOfTaxes_)) return false;
      if (ContractStatusName != other.ContractStatusName) return false;
      if (SignedUserName != other.SignedUserName) return false;
      if (OrganizationUnitName != other.OrganizationUnitName) return false;
      if (CashierUserName != other.CashierUserName) return false;
      if (AgentId != other.AgentId) return false;
      if (FiberNoteInfo != other.FiberNoteInfo) return false;
      if(!taxCategories_.Equals(other.taxCategories_)) return false;
      if (NumberBillingLimitDays != other.NumberBillingLimitDays) return false;
      if (CashierFullName != other.CashierFullName) return false;
      if (!object.Equals(ContractContent, other.ContractContent)) return false;
      if (!object.Equals(ContractorHTC, other.ContractorHTC)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (contractCode_ != null) hash ^= ContractCode.GetHashCode();
      if (agentCode_ != null) hash ^= AgentCode.GetHashCode();
      if (contractTypeId_ != null) hash ^= ContractTypeId.GetHashCode();
      if (marketAreaId_ != null) hash ^= MarketAreaId.GetHashCode();
      if (marketAreaName_ != null) hash ^= MarketAreaName.GetHashCode();
      if (projectId_ != null) hash ^= ProjectId.GetHashCode();
      if (projectName_ != null) hash ^= ProjectName.GetHashCode();
      if (organizationUnitId_ != null) hash ^= OrganizationUnitId.GetHashCode();
      if (contractStatusId_ != null) hash ^= ContractStatusId.GetHashCode();
      if (contractorIdentityGuid_ != null) hash ^= ContractorIdentityGuid.GetHashCode();
      if (contractorId_ != null) hash ^= ContractorId.GetHashCode();
      if (salesmanIdentityGuid_ != null) hash ^= SalesmanIdentityGuid.GetHashCode();
      if (paymentMethodId_ != null) hash ^= PaymentMethodId.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (signedUserId_ != null) hash ^= SignedUserId.GetHashCode();
      if (salesmanId_ != null) hash ^= SalesmanId.GetHashCode();
      if (contractNote_ != null) hash ^= ContractNote.GetHashCode();
      if (totalTaxPercent_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(TotalTaxPercent);
      if (contractStatus_ != null) hash ^= ContractStatus.GetHashCode();
      if (totalTaxAmount_ != null) hash ^= TotalTaxAmount.GetHashCode();
      if (installationFee_ != null) hash ^= InstallationFee.GetHashCode();
      if (otherFee_ != null) hash ^= OtherFee.GetHashCode();
      if (subTotal_ != null) hash ^= SubTotal.GetHashCode();
      if (grandTotalBeforeTax_ != null) hash ^= GrandTotalBeforeTax.GetHashCode();
      if (grandTotal_ != null) hash ^= GrandTotal.GetHashCode();
      if (payment_ != null) hash ^= Payment.GetHashCode();
      if (timeLine_ != null) hash ^= TimeLine.GetHashCode();
      if (contractor_ != null) hash ^= Contractor.GetHashCode();
      if (fiberNodeInfo_ != null) hash ^= FiberNodeInfo.GetHashCode();
      if (agentContractCode_ != null) hash ^= AgentContractCode.GetHashCode();
      if (cashierUserId_ != null) hash ^= CashierUserId.GetHashCode();
      if (equipmentAmount_ != null) hash ^= EquipmentAmount.GetHashCode();
      if (servicePackageAmount_ != null) hash ^= ServicePackageAmount.GetHashCode();
      hash ^= servicePackages_.GetHashCode();
      hash ^= attachmentFiles_.GetHashCode();
      hash ^= contractOfTaxes_.GetHashCode();
      if (contractStatusName_ != null) hash ^= ContractStatusName.GetHashCode();
      if (signedUserName_ != null) hash ^= SignedUserName.GetHashCode();
      if (organizationUnitName_ != null) hash ^= OrganizationUnitName.GetHashCode();
      if (cashierUserName_ != null) hash ^= CashierUserName.GetHashCode();
      if (agentId_ != null) hash ^= AgentId.GetHashCode();
      if (fiberNoteInfo_ != null) hash ^= FiberNoteInfo.GetHashCode();
      hash ^= taxCategories_.GetHashCode();
      if (numberBillingLimitDays_ != null) hash ^= NumberBillingLimitDays.GetHashCode();
      if (cashierFullName_ != null) hash ^= CashierFullName.GetHashCode();
      if (contractContent_ != null) hash ^= ContractContent.GetHashCode();
      if (contractorHTC_ != null) hash ^= ContractorHTC.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (contractCode_ != null) {
        _single_contractCode_codec.WriteTagAndValue(output, ContractCode);
      }
      if (agentCode_ != null) {
        _single_agentCode_codec.WriteTagAndValue(output, AgentCode);
      }
      if (contractTypeId_ != null) {
        _single_contractTypeId_codec.WriteTagAndValue(output, ContractTypeId);
      }
      if (marketAreaId_ != null) {
        _single_marketAreaId_codec.WriteTagAndValue(output, MarketAreaId);
      }
      if (marketAreaName_ != null) {
        _single_marketAreaName_codec.WriteTagAndValue(output, MarketAreaName);
      }
      if (projectId_ != null) {
        _single_projectId_codec.WriteTagAndValue(output, ProjectId);
      }
      if (projectName_ != null) {
        _single_projectName_codec.WriteTagAndValue(output, ProjectName);
      }
      if (organizationUnitId_ != null) {
        _single_organizationUnitId_codec.WriteTagAndValue(output, OrganizationUnitId);
      }
      if (contractStatusId_ != null) {
        _single_contractStatusId_codec.WriteTagAndValue(output, ContractStatusId);
      }
      if (contractorIdentityGuid_ != null) {
        _single_contractorIdentityGuid_codec.WriteTagAndValue(output, ContractorIdentityGuid);
      }
      if (contractorId_ != null) {
        _single_contractorId_codec.WriteTagAndValue(output, ContractorId);
      }
      if (salesmanIdentityGuid_ != null) {
        _single_salesmanIdentityGuid_codec.WriteTagAndValue(output, SalesmanIdentityGuid);
      }
      if (paymentMethodId_ != null) {
        _single_paymentMethodId_codec.WriteTagAndValue(output, PaymentMethodId);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (signedUserId_ != null) {
        _single_signedUserId_codec.WriteTagAndValue(output, SignedUserId);
      }
      if (salesmanId_ != null) {
        _single_salesmanId_codec.WriteTagAndValue(output, SalesmanId);
      }
      if (contractNote_ != null) {
        _single_contractNote_codec.WriteTagAndValue(output, ContractNote);
      }
      if (totalTaxPercent_ != null) {
        _single_totalTaxPercent_codec.WriteTagAndValue(output, TotalTaxPercent);
      }
      if (contractStatus_ != null) {
        _single_contractStatus_codec.WriteTagAndValue(output, ContractStatus);
      }
      if (totalTaxAmount_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(TotalTaxAmount);
      }
      if (installationFee_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(InstallationFee);
      }
      if (otherFee_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(OtherFee);
      }
      if (subTotal_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(SubTotal);
      }
      if (grandTotalBeforeTax_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(GrandTotalBeforeTax);
      }
      if (grandTotal_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(GrandTotal);
      }
      if (payment_ != null) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(Payment);
      }
      if (timeLine_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(TimeLine);
      }
      if (contractor_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(Contractor);
      }
      if (fiberNodeInfo_ != null) {
        _single_fiberNodeInfo_codec.WriteTagAndValue(output, FiberNodeInfo);
      }
      if (agentContractCode_ != null) {
        _single_agentContractCode_codec.WriteTagAndValue(output, AgentContractCode);
      }
      if (cashierUserId_ != null) {
        _single_cashierUserId_codec.WriteTagAndValue(output, CashierUserId);
      }
      if (equipmentAmount_ != null) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(EquipmentAmount);
      }
      if (servicePackageAmount_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(ServicePackageAmount);
      }
      servicePackages_.WriteTo(output, _repeated_servicePackages_codec);
      attachmentFiles_.WriteTo(output, _repeated_attachmentFiles_codec);
      contractOfTaxes_.WriteTo(output, _repeated_contractOfTaxes_codec);
      if (contractStatusName_ != null) {
        _single_contractStatusName_codec.WriteTagAndValue(output, ContractStatusName);
      }
      if (signedUserName_ != null) {
        _single_signedUserName_codec.WriteTagAndValue(output, SignedUserName);
      }
      if (organizationUnitName_ != null) {
        _single_organizationUnitName_codec.WriteTagAndValue(output, OrganizationUnitName);
      }
      if (cashierUserName_ != null) {
        _single_cashierUserName_codec.WriteTagAndValue(output, CashierUserName);
      }
      if (agentId_ != null) {
        _single_agentId_codec.WriteTagAndValue(output, AgentId);
      }
      if (fiberNoteInfo_ != null) {
        _single_fiberNoteInfo_codec.WriteTagAndValue(output, FiberNoteInfo);
      }
      taxCategories_.WriteTo(output, _repeated_taxCategories_codec);
      if (numberBillingLimitDays_ != null) {
        _single_numberBillingLimitDays_codec.WriteTagAndValue(output, NumberBillingLimitDays);
      }
      if (cashierFullName_ != null) {
        _single_cashierFullName_codec.WriteTagAndValue(output, CashierFullName);
      }
      if (contractContent_ != null) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(ContractContent);
      }
      if (contractorHTC_ != null) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(ContractorHTC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (contractCode_ != null) {
        size += _single_contractCode_codec.CalculateSizeWithTag(ContractCode);
      }
      if (agentCode_ != null) {
        size += _single_agentCode_codec.CalculateSizeWithTag(AgentCode);
      }
      if (contractTypeId_ != null) {
        size += _single_contractTypeId_codec.CalculateSizeWithTag(ContractTypeId);
      }
      if (marketAreaId_ != null) {
        size += _single_marketAreaId_codec.CalculateSizeWithTag(MarketAreaId);
      }
      if (marketAreaName_ != null) {
        size += _single_marketAreaName_codec.CalculateSizeWithTag(MarketAreaName);
      }
      if (projectId_ != null) {
        size += _single_projectId_codec.CalculateSizeWithTag(ProjectId);
      }
      if (projectName_ != null) {
        size += _single_projectName_codec.CalculateSizeWithTag(ProjectName);
      }
      if (organizationUnitId_ != null) {
        size += _single_organizationUnitId_codec.CalculateSizeWithTag(OrganizationUnitId);
      }
      if (contractStatusId_ != null) {
        size += _single_contractStatusId_codec.CalculateSizeWithTag(ContractStatusId);
      }
      if (contractorIdentityGuid_ != null) {
        size += _single_contractorIdentityGuid_codec.CalculateSizeWithTag(ContractorIdentityGuid);
      }
      if (contractorId_ != null) {
        size += _single_contractorId_codec.CalculateSizeWithTag(ContractorId);
      }
      if (salesmanIdentityGuid_ != null) {
        size += _single_salesmanIdentityGuid_codec.CalculateSizeWithTag(SalesmanIdentityGuid);
      }
      if (paymentMethodId_ != null) {
        size += _single_paymentMethodId_codec.CalculateSizeWithTag(PaymentMethodId);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (signedUserId_ != null) {
        size += _single_signedUserId_codec.CalculateSizeWithTag(SignedUserId);
      }
      if (salesmanId_ != null) {
        size += _single_salesmanId_codec.CalculateSizeWithTag(SalesmanId);
      }
      if (contractNote_ != null) {
        size += _single_contractNote_codec.CalculateSizeWithTag(ContractNote);
      }
      if (totalTaxPercent_ != null) {
        size += _single_totalTaxPercent_codec.CalculateSizeWithTag(TotalTaxPercent);
      }
      if (contractStatus_ != null) {
        size += _single_contractStatus_codec.CalculateSizeWithTag(ContractStatus);
      }
      if (totalTaxAmount_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TotalTaxAmount);
      }
      if (installationFee_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(InstallationFee);
      }
      if (otherFee_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OtherFee);
      }
      if (subTotal_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SubTotal);
      }
      if (grandTotalBeforeTax_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GrandTotalBeforeTax);
      }
      if (grandTotal_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GrandTotal);
      }
      if (payment_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Payment);
      }
      if (timeLine_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TimeLine);
      }
      if (contractor_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Contractor);
      }
      if (fiberNodeInfo_ != null) {
        size += _single_fiberNodeInfo_codec.CalculateSizeWithTag(FiberNodeInfo);
      }
      if (agentContractCode_ != null) {
        size += _single_agentContractCode_codec.CalculateSizeWithTag(AgentContractCode);
      }
      if (cashierUserId_ != null) {
        size += _single_cashierUserId_codec.CalculateSizeWithTag(CashierUserId);
      }
      if (equipmentAmount_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EquipmentAmount);
      }
      if (servicePackageAmount_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ServicePackageAmount);
      }
      size += servicePackages_.CalculateSize(_repeated_servicePackages_codec);
      size += attachmentFiles_.CalculateSize(_repeated_attachmentFiles_codec);
      size += contractOfTaxes_.CalculateSize(_repeated_contractOfTaxes_codec);
      if (contractStatusName_ != null) {
        size += _single_contractStatusName_codec.CalculateSizeWithTag(ContractStatusName);
      }
      if (signedUserName_ != null) {
        size += _single_signedUserName_codec.CalculateSizeWithTag(SignedUserName);
      }
      if (organizationUnitName_ != null) {
        size += _single_organizationUnitName_codec.CalculateSizeWithTag(OrganizationUnitName);
      }
      if (cashierUserName_ != null) {
        size += _single_cashierUserName_codec.CalculateSizeWithTag(CashierUserName);
      }
      if (agentId_ != null) {
        size += _single_agentId_codec.CalculateSizeWithTag(AgentId);
      }
      if (fiberNoteInfo_ != null) {
        size += _single_fiberNoteInfo_codec.CalculateSizeWithTag(FiberNoteInfo);
      }
      size += taxCategories_.CalculateSize(_repeated_taxCategories_codec);
      if (numberBillingLimitDays_ != null) {
        size += _single_numberBillingLimitDays_codec.CalculateSizeWithTag(NumberBillingLimitDays);
      }
      if (cashierFullName_ != null) {
        size += _single_cashierFullName_codec.CalculateSizeWithTag(CashierFullName);
      }
      if (contractContent_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContractContent);
      }
      if (contractorHTC_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContractorHTC);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0) {
          Id = other.Id;
        }
      }
      if (other.contractCode_ != null) {
        if (contractCode_ == null || other.ContractCode != "") {
          ContractCode = other.ContractCode;
        }
      }
      if (other.agentCode_ != null) {
        if (agentCode_ == null || other.AgentCode != "") {
          AgentCode = other.AgentCode;
        }
      }
      if (other.contractTypeId_ != null) {
        if (contractTypeId_ == null || other.ContractTypeId != 0) {
          ContractTypeId = other.ContractTypeId;
        }
      }
      if (other.marketAreaId_ != null) {
        if (marketAreaId_ == null || other.MarketAreaId != 0) {
          MarketAreaId = other.MarketAreaId;
        }
      }
      if (other.marketAreaName_ != null) {
        if (marketAreaName_ == null || other.MarketAreaName != "") {
          MarketAreaName = other.MarketAreaName;
        }
      }
      if (other.projectId_ != null) {
        if (projectId_ == null || other.ProjectId != 0) {
          ProjectId = other.ProjectId;
        }
      }
      if (other.projectName_ != null) {
        if (projectName_ == null || other.ProjectName != "") {
          ProjectName = other.ProjectName;
        }
      }
      if (other.organizationUnitId_ != null) {
        if (organizationUnitId_ == null || other.OrganizationUnitId != "") {
          OrganizationUnitId = other.OrganizationUnitId;
        }
      }
      if (other.contractStatusId_ != null) {
        if (contractStatusId_ == null || other.ContractStatusId != 0) {
          ContractStatusId = other.ContractStatusId;
        }
      }
      if (other.contractorIdentityGuid_ != null) {
        if (contractorIdentityGuid_ == null || other.ContractorIdentityGuid != "") {
          ContractorIdentityGuid = other.ContractorIdentityGuid;
        }
      }
      if (other.contractorId_ != null) {
        if (contractorId_ == null || other.ContractorId != 0) {
          ContractorId = other.ContractorId;
        }
      }
      if (other.salesmanIdentityGuid_ != null) {
        if (salesmanIdentityGuid_ == null || other.SalesmanIdentityGuid != "") {
          SalesmanIdentityGuid = other.SalesmanIdentityGuid;
        }
      }
      if (other.paymentMethodId_ != null) {
        if (paymentMethodId_ == null || other.PaymentMethodId != 0) {
          PaymentMethodId = other.PaymentMethodId;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.signedUserId_ != null) {
        if (signedUserId_ == null || other.SignedUserId != "") {
          SignedUserId = other.SignedUserId;
        }
      }
      if (other.salesmanId_ != null) {
        if (salesmanId_ == null || other.SalesmanId != 0) {
          SalesmanId = other.SalesmanId;
        }
      }
      if (other.contractNote_ != null) {
        if (contractNote_ == null || other.ContractNote != "") {
          ContractNote = other.ContractNote;
        }
      }
      if (other.totalTaxPercent_ != null) {
        if (totalTaxPercent_ == null || other.TotalTaxPercent != 0F) {
          TotalTaxPercent = other.TotalTaxPercent;
        }
      }
      if (other.contractStatus_ != null) {
        if (contractStatus_ == null || other.ContractStatus != 0) {
          ContractStatus = other.ContractStatus;
        }
      }
      if (other.totalTaxAmount_ != null) {
        if (totalTaxAmount_ == null) {
          TotalTaxAmount = new global::ContractManagement.API.Protos.Money();
        }
        TotalTaxAmount.MergeFrom(other.TotalTaxAmount);
      }
      if (other.installationFee_ != null) {
        if (installationFee_ == null) {
          InstallationFee = new global::ContractManagement.API.Protos.Money();
        }
        InstallationFee.MergeFrom(other.InstallationFee);
      }
      if (other.otherFee_ != null) {
        if (otherFee_ == null) {
          OtherFee = new global::ContractManagement.API.Protos.Money();
        }
        OtherFee.MergeFrom(other.OtherFee);
      }
      if (other.subTotal_ != null) {
        if (subTotal_ == null) {
          SubTotal = new global::ContractManagement.API.Protos.Money();
        }
        SubTotal.MergeFrom(other.SubTotal);
      }
      if (other.grandTotalBeforeTax_ != null) {
        if (grandTotalBeforeTax_ == null) {
          GrandTotalBeforeTax = new global::ContractManagement.API.Protos.Money();
        }
        GrandTotalBeforeTax.MergeFrom(other.GrandTotalBeforeTax);
      }
      if (other.grandTotal_ != null) {
        if (grandTotal_ == null) {
          GrandTotal = new global::ContractManagement.API.Protos.Money();
        }
        GrandTotal.MergeFrom(other.GrandTotal);
      }
      if (other.payment_ != null) {
        if (payment_ == null) {
          Payment = new global::ContractManagement.API.Protos.PaymentMethodGrpc();
        }
        Payment.MergeFrom(other.Payment);
      }
      if (other.timeLine_ != null) {
        if (timeLine_ == null) {
          TimeLine = new global::ContractManagement.API.Protos.ContractTimeLineGrpc();
        }
        TimeLine.MergeFrom(other.TimeLine);
      }
      if (other.contractor_ != null) {
        if (contractor_ == null) {
          Contractor = new global::ContractManagement.API.Protos.ContractorGrpcDTO();
        }
        Contractor.MergeFrom(other.Contractor);
      }
      if (other.fiberNodeInfo_ != null) {
        if (fiberNodeInfo_ == null || other.FiberNodeInfo != "") {
          FiberNodeInfo = other.FiberNodeInfo;
        }
      }
      if (other.agentContractCode_ != null) {
        if (agentContractCode_ == null || other.AgentContractCode != "") {
          AgentContractCode = other.AgentContractCode;
        }
      }
      if (other.cashierUserId_ != null) {
        if (cashierUserId_ == null || other.CashierUserId != "") {
          CashierUserId = other.CashierUserId;
        }
      }
      if (other.equipmentAmount_ != null) {
        if (equipmentAmount_ == null) {
          EquipmentAmount = new global::ContractManagement.API.Protos.Money();
        }
        EquipmentAmount.MergeFrom(other.EquipmentAmount);
      }
      if (other.servicePackageAmount_ != null) {
        if (servicePackageAmount_ == null) {
          ServicePackageAmount = new global::ContractManagement.API.Protos.Money();
        }
        ServicePackageAmount.MergeFrom(other.ServicePackageAmount);
      }
      servicePackages_.Add(other.servicePackages_);
      attachmentFiles_.Add(other.attachmentFiles_);
      contractOfTaxes_.Add(other.contractOfTaxes_);
      if (other.contractStatusName_ != null) {
        if (contractStatusName_ == null || other.ContractStatusName != "") {
          ContractStatusName = other.ContractStatusName;
        }
      }
      if (other.signedUserName_ != null) {
        if (signedUserName_ == null || other.SignedUserName != "") {
          SignedUserName = other.SignedUserName;
        }
      }
      if (other.organizationUnitName_ != null) {
        if (organizationUnitName_ == null || other.OrganizationUnitName != "") {
          OrganizationUnitName = other.OrganizationUnitName;
        }
      }
      if (other.cashierUserName_ != null) {
        if (cashierUserName_ == null || other.CashierUserName != "") {
          CashierUserName = other.CashierUserName;
        }
      }
      if (other.agentId_ != null) {
        if (agentId_ == null || other.AgentId != "") {
          AgentId = other.AgentId;
        }
      }
      if (other.fiberNoteInfo_ != null) {
        if (fiberNoteInfo_ == null || other.FiberNoteInfo != "") {
          FiberNoteInfo = other.FiberNoteInfo;
        }
      }
      taxCategories_.Add(other.taxCategories_);
      if (other.numberBillingLimitDays_ != null) {
        if (numberBillingLimitDays_ == null || other.NumberBillingLimitDays != 0) {
          NumberBillingLimitDays = other.NumberBillingLimitDays;
        }
      }
      if (other.cashierFullName_ != null) {
        if (cashierFullName_ == null || other.CashierFullName != "") {
          CashierFullName = other.CashierFullName;
        }
      }
      if (other.contractContent_ != null) {
        if (contractContent_ == null) {
          ContractContent = new global::ContractManagement.API.Protos.ContractContentDTOGrpc();
        }
        ContractContent.MergeFrom(other.ContractContent);
      }
      if (other.contractorHTC_ != null) {
        if (contractorHTC_ == null) {
          ContractorHTC = new global::ContractManagement.API.Protos.ContractorGrpcDTO();
        }
        ContractorHTC.MergeFrom(other.ContractorHTC);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0) {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_contractCode_codec.Read(input);
            if (contractCode_ == null || value != "") {
              ContractCode = value;
            }
            break;
          }
          case 26: {
            string value = _single_agentCode_codec.Read(input);
            if (agentCode_ == null || value != "") {
              AgentCode = value;
            }
            break;
          }
          case 34: {
            int? value = _single_contractTypeId_codec.Read(input);
            if (contractTypeId_ == null || value != 0) {
              ContractTypeId = value;
            }
            break;
          }
          case 42: {
            int? value = _single_marketAreaId_codec.Read(input);
            if (marketAreaId_ == null || value != 0) {
              MarketAreaId = value;
            }
            break;
          }
          case 50: {
            string value = _single_marketAreaName_codec.Read(input);
            if (marketAreaName_ == null || value != "") {
              MarketAreaName = value;
            }
            break;
          }
          case 58: {
            int? value = _single_projectId_codec.Read(input);
            if (projectId_ == null || value != 0) {
              ProjectId = value;
            }
            break;
          }
          case 66: {
            string value = _single_projectName_codec.Read(input);
            if (projectName_ == null || value != "") {
              ProjectName = value;
            }
            break;
          }
          case 74: {
            string value = _single_organizationUnitId_codec.Read(input);
            if (organizationUnitId_ == null || value != "") {
              OrganizationUnitId = value;
            }
            break;
          }
          case 82: {
            int? value = _single_contractStatusId_codec.Read(input);
            if (contractStatusId_ == null || value != 0) {
              ContractStatusId = value;
            }
            break;
          }
          case 90: {
            string value = _single_contractorIdentityGuid_codec.Read(input);
            if (contractorIdentityGuid_ == null || value != "") {
              ContractorIdentityGuid = value;
            }
            break;
          }
          case 98: {
            int? value = _single_contractorId_codec.Read(input);
            if (contractorId_ == null || value != 0) {
              ContractorId = value;
            }
            break;
          }
          case 106: {
            string value = _single_salesmanIdentityGuid_codec.Read(input);
            if (salesmanIdentityGuid_ == null || value != "") {
              SalesmanIdentityGuid = value;
            }
            break;
          }
          case 114: {
            int? value = _single_paymentMethodId_codec.Read(input);
            if (paymentMethodId_ == null || value != 0) {
              PaymentMethodId = value;
            }
            break;
          }
          case 122: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 130: {
            string value = _single_signedUserId_codec.Read(input);
            if (signedUserId_ == null || value != "") {
              SignedUserId = value;
            }
            break;
          }
          case 138: {
            int? value = _single_salesmanId_codec.Read(input);
            if (salesmanId_ == null || value != 0) {
              SalesmanId = value;
            }
            break;
          }
          case 146: {
            string value = _single_contractNote_codec.Read(input);
            if (contractNote_ == null || value != "") {
              ContractNote = value;
            }
            break;
          }
          case 154: {
            float? value = _single_totalTaxPercent_codec.Read(input);
            if (totalTaxPercent_ == null || value != 0F) {
              TotalTaxPercent = value;
            }
            break;
          }
          case 162: {
            int? value = _single_contractStatus_codec.Read(input);
            if (contractStatus_ == null || value != 0) {
              ContractStatus = value;
            }
            break;
          }
          case 170: {
            if (totalTaxAmount_ == null) {
              TotalTaxAmount = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(TotalTaxAmount);
            break;
          }
          case 178: {
            if (installationFee_ == null) {
              InstallationFee = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(InstallationFee);
            break;
          }
          case 186: {
            if (otherFee_ == null) {
              OtherFee = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(OtherFee);
            break;
          }
          case 194: {
            if (subTotal_ == null) {
              SubTotal = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(SubTotal);
            break;
          }
          case 210: {
            if (grandTotalBeforeTax_ == null) {
              GrandTotalBeforeTax = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(GrandTotalBeforeTax);
            break;
          }
          case 218: {
            if (grandTotal_ == null) {
              GrandTotal = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(GrandTotal);
            break;
          }
          case 234: {
            if (payment_ == null) {
              Payment = new global::ContractManagement.API.Protos.PaymentMethodGrpc();
            }
            input.ReadMessage(Payment);
            break;
          }
          case 242: {
            if (timeLine_ == null) {
              TimeLine = new global::ContractManagement.API.Protos.ContractTimeLineGrpc();
            }
            input.ReadMessage(TimeLine);
            break;
          }
          case 250: {
            if (contractor_ == null) {
              Contractor = new global::ContractManagement.API.Protos.ContractorGrpcDTO();
            }
            input.ReadMessage(Contractor);
            break;
          }
          case 258: {
            string value = _single_fiberNodeInfo_codec.Read(input);
            if (fiberNodeInfo_ == null || value != "") {
              FiberNodeInfo = value;
            }
            break;
          }
          case 266: {
            string value = _single_agentContractCode_codec.Read(input);
            if (agentContractCode_ == null || value != "") {
              AgentContractCode = value;
            }
            break;
          }
          case 274: {
            string value = _single_cashierUserId_codec.Read(input);
            if (cashierUserId_ == null || value != "") {
              CashierUserId = value;
            }
            break;
          }
          case 282: {
            if (equipmentAmount_ == null) {
              EquipmentAmount = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(EquipmentAmount);
            break;
          }
          case 298: {
            if (servicePackageAmount_ == null) {
              ServicePackageAmount = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(ServicePackageAmount);
            break;
          }
          case 314: {
            servicePackages_.AddEntriesFrom(input, _repeated_servicePackages_codec);
            break;
          }
          case 330: {
            attachmentFiles_.AddEntriesFrom(input, _repeated_attachmentFiles_codec);
            break;
          }
          case 338: {
            contractOfTaxes_.AddEntriesFrom(input, _repeated_contractOfTaxes_codec);
            break;
          }
          case 346: {
            string value = _single_contractStatusName_codec.Read(input);
            if (contractStatusName_ == null || value != "") {
              ContractStatusName = value;
            }
            break;
          }
          case 354: {
            string value = _single_signedUserName_codec.Read(input);
            if (signedUserName_ == null || value != "") {
              SignedUserName = value;
            }
            break;
          }
          case 362: {
            string value = _single_organizationUnitName_codec.Read(input);
            if (organizationUnitName_ == null || value != "") {
              OrganizationUnitName = value;
            }
            break;
          }
          case 370: {
            string value = _single_cashierUserName_codec.Read(input);
            if (cashierUserName_ == null || value != "") {
              CashierUserName = value;
            }
            break;
          }
          case 378: {
            string value = _single_agentId_codec.Read(input);
            if (agentId_ == null || value != "") {
              AgentId = value;
            }
            break;
          }
          case 386: {
            string value = _single_fiberNoteInfo_codec.Read(input);
            if (fiberNoteInfo_ == null || value != "") {
              FiberNoteInfo = value;
            }
            break;
          }
          case 394: {
            taxCategories_.AddEntriesFrom(input, _repeated_taxCategories_codec);
            break;
          }
          case 402: {
            int? value = _single_numberBillingLimitDays_codec.Read(input);
            if (numberBillingLimitDays_ == null || value != 0) {
              NumberBillingLimitDays = value;
            }
            break;
          }
          case 410: {
            string value = _single_cashierFullName_codec.Read(input);
            if (cashierFullName_ == null || value != "") {
              CashierFullName = value;
            }
            break;
          }
          case 418: {
            if (contractContent_ == null) {
              ContractContent = new global::ContractManagement.API.Protos.ContractContentDTOGrpc();
            }
            input.ReadMessage(ContractContent);
            break;
          }
          case 426: {
            if (contractorHTC_ == null) {
              ContractorHTC = new global::ContractManagement.API.Protos.ContractorGrpcDTO();
            }
            input.ReadMessage(ContractorHTC);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutContractSimpleGrpcDTO : pb::IMessage<OutContractSimpleGrpcDTO> {
    private static readonly pb::MessageParser<OutContractSimpleGrpcDTO> _parser = new pb::MessageParser<OutContractSimpleGrpcDTO>(() => new OutContractSimpleGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutContractSimpleGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractSimpleGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractSimpleGrpcDTO(OutContractSimpleGrpcDTO other) : this() {
      id_ = other.id_;
      ContractCode = other.ContractCode;
      AgentCode = other.AgentCode;
      ContractTypeId = other.ContractTypeId;
      MarketAreaId = other.MarketAreaId;
      MarketAreaName = other.MarketAreaName;
      ProjectId = other.ProjectId;
      ProjectName = other.ProjectName;
      OrganizationUnitId = other.OrganizationUnitId;
      ContractStatusId = other.ContractStatusId;
      ContractorIdentityGuid = other.ContractorIdentityGuid;
      ContractorId = other.ContractorId;
      Description = other.Description;
      SignedUserId = other.SignedUserId;
      SalesmanId = other.SalesmanId;
      ContractNote = other.ContractNote;
      grandTotal_ = other.grandTotal_ != null ? other.grandTotal_.Clone() : null;
      ContractorFullName = other.ContractorFullName;
      ContractStatusName = other.ContractStatusName;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractSimpleGrpcDTO Clone() {
      return new OutContractSimpleGrpcDTO(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "contractCode" field.</summary>
    public const int ContractCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_contractCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string contractCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractCode {
      get { return contractCode_; }
      set {
        contractCode_ = value;
      }
    }


    /// <summary>Field number for the "agentCode" field.</summary>
    public const int AgentCodeFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_agentCode_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string agentCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AgentCode {
      get { return agentCode_; }
      set {
        agentCode_ = value;
      }
    }


    /// <summary>Field number for the "contractTypeId" field.</summary>
    public const int ContractTypeIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_contractTypeId_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? contractTypeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractTypeId {
      get { return contractTypeId_; }
      set {
        contractTypeId_ = value;
      }
    }


    /// <summary>Field number for the "marketAreaId" field.</summary>
    public const int MarketAreaIdFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_marketAreaId_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? marketAreaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? MarketAreaId {
      get { return marketAreaId_; }
      set {
        marketAreaId_ = value;
      }
    }


    /// <summary>Field number for the "marketAreaName" field.</summary>
    public const int MarketAreaNameFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_marketAreaName_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string marketAreaName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketAreaName {
      get { return marketAreaName_; }
      set {
        marketAreaName_ = value;
      }
    }


    /// <summary>Field number for the "projectId" field.</summary>
    public const int ProjectIdFieldNumber = 7;
    private static readonly pb::FieldCodec<int?> _single_projectId_codec = pb::FieldCodec.ForStructWrapper<int>(58);
    private int? projectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ProjectId {
      get { return projectId_; }
      set {
        projectId_ = value;
      }
    }


    /// <summary>Field number for the "projectName" field.</summary>
    public const int ProjectNameFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_projectName_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string projectName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectName {
      get { return projectName_; }
      set {
        projectName_ = value;
      }
    }


    /// <summary>Field number for the "organizationUnitId" field.</summary>
    public const int OrganizationUnitIdFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_organizationUnitId_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string organizationUnitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrganizationUnitId {
      get { return organizationUnitId_; }
      set {
        organizationUnitId_ = value;
      }
    }


    /// <summary>Field number for the "contractStatusId" field.</summary>
    public const int ContractStatusIdFieldNumber = 10;
    private static readonly pb::FieldCodec<int?> _single_contractStatusId_codec = pb::FieldCodec.ForStructWrapper<int>(82);
    private int? contractStatusId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractStatusId {
      get { return contractStatusId_; }
      set {
        contractStatusId_ = value;
      }
    }


    /// <summary>Field number for the "contractorIdentityGuid" field.</summary>
    public const int ContractorIdentityGuidFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_contractorIdentityGuid_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string contractorIdentityGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorIdentityGuid {
      get { return contractorIdentityGuid_; }
      set {
        contractorIdentityGuid_ = value;
      }
    }


    /// <summary>Field number for the "contractorId" field.</summary>
    public const int ContractorIdFieldNumber = 12;
    private static readonly pb::FieldCodec<int?> _single_contractorId_codec = pb::FieldCodec.ForStructWrapper<int>(98);
    private int? contractorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractorId {
      get { return contractorId_; }
      set {
        contractorId_ = value;
      }
    }


    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "signedUserId" field.</summary>
    public const int SignedUserIdFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_signedUserId_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string signedUserId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignedUserId {
      get { return signedUserId_; }
      set {
        signedUserId_ = value;
      }
    }


    /// <summary>Field number for the "salesmanId" field.</summary>
    public const int SalesmanIdFieldNumber = 17;
    private static readonly pb::FieldCodec<int?> _single_salesmanId_codec = pb::FieldCodec.ForStructWrapper<int>(138);
    private int? salesmanId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? SalesmanId {
      get { return salesmanId_; }
      set {
        salesmanId_ = value;
      }
    }


    /// <summary>Field number for the "contractNote" field.</summary>
    public const int ContractNoteFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _single_contractNote_codec = pb::FieldCodec.ForClassWrapper<string>(146);
    private string contractNote_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNote {
      get { return contractNote_; }
      set {
        contractNote_ = value;
      }
    }


    /// <summary>Field number for the "grandTotal" field.</summary>
    public const int GrandTotalFieldNumber = 19;
    private global::ContractManagement.API.Protos.Money grandTotal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money GrandTotal {
      get { return grandTotal_; }
      set {
        grandTotal_ = value;
      }
    }

    /// <summary>Field number for the "contractorFullName" field.</summary>
    public const int ContractorFullNameFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _single_contractorFullName_codec = pb::FieldCodec.ForClassWrapper<string>(162);
    private string contractorFullName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorFullName {
      get { return contractorFullName_; }
      set {
        contractorFullName_ = value;
      }
    }


    /// <summary>Field number for the "contractStatusName" field.</summary>
    public const int ContractStatusNameFieldNumber = 21;
    private static readonly pb::FieldCodec<string> _single_contractStatusName_codec = pb::FieldCodec.ForClassWrapper<string>(170);
    private string contractStatusName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusName {
      get { return contractStatusName_; }
      set {
        contractStatusName_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutContractSimpleGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutContractSimpleGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ContractCode != other.ContractCode) return false;
      if (AgentCode != other.AgentCode) return false;
      if (ContractTypeId != other.ContractTypeId) return false;
      if (MarketAreaId != other.MarketAreaId) return false;
      if (MarketAreaName != other.MarketAreaName) return false;
      if (ProjectId != other.ProjectId) return false;
      if (ProjectName != other.ProjectName) return false;
      if (OrganizationUnitId != other.OrganizationUnitId) return false;
      if (ContractStatusId != other.ContractStatusId) return false;
      if (ContractorIdentityGuid != other.ContractorIdentityGuid) return false;
      if (ContractorId != other.ContractorId) return false;
      if (Description != other.Description) return false;
      if (SignedUserId != other.SignedUserId) return false;
      if (SalesmanId != other.SalesmanId) return false;
      if (ContractNote != other.ContractNote) return false;
      if (!object.Equals(GrandTotal, other.GrandTotal)) return false;
      if (ContractorFullName != other.ContractorFullName) return false;
      if (ContractStatusName != other.ContractStatusName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (contractCode_ != null) hash ^= ContractCode.GetHashCode();
      if (agentCode_ != null) hash ^= AgentCode.GetHashCode();
      if (contractTypeId_ != null) hash ^= ContractTypeId.GetHashCode();
      if (marketAreaId_ != null) hash ^= MarketAreaId.GetHashCode();
      if (marketAreaName_ != null) hash ^= MarketAreaName.GetHashCode();
      if (projectId_ != null) hash ^= ProjectId.GetHashCode();
      if (projectName_ != null) hash ^= ProjectName.GetHashCode();
      if (organizationUnitId_ != null) hash ^= OrganizationUnitId.GetHashCode();
      if (contractStatusId_ != null) hash ^= ContractStatusId.GetHashCode();
      if (contractorIdentityGuid_ != null) hash ^= ContractorIdentityGuid.GetHashCode();
      if (contractorId_ != null) hash ^= ContractorId.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (signedUserId_ != null) hash ^= SignedUserId.GetHashCode();
      if (salesmanId_ != null) hash ^= SalesmanId.GetHashCode();
      if (contractNote_ != null) hash ^= ContractNote.GetHashCode();
      if (grandTotal_ != null) hash ^= GrandTotal.GetHashCode();
      if (contractorFullName_ != null) hash ^= ContractorFullName.GetHashCode();
      if (contractStatusName_ != null) hash ^= ContractStatusName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (contractCode_ != null) {
        _single_contractCode_codec.WriteTagAndValue(output, ContractCode);
      }
      if (agentCode_ != null) {
        _single_agentCode_codec.WriteTagAndValue(output, AgentCode);
      }
      if (contractTypeId_ != null) {
        _single_contractTypeId_codec.WriteTagAndValue(output, ContractTypeId);
      }
      if (marketAreaId_ != null) {
        _single_marketAreaId_codec.WriteTagAndValue(output, MarketAreaId);
      }
      if (marketAreaName_ != null) {
        _single_marketAreaName_codec.WriteTagAndValue(output, MarketAreaName);
      }
      if (projectId_ != null) {
        _single_projectId_codec.WriteTagAndValue(output, ProjectId);
      }
      if (projectName_ != null) {
        _single_projectName_codec.WriteTagAndValue(output, ProjectName);
      }
      if (organizationUnitId_ != null) {
        _single_organizationUnitId_codec.WriteTagAndValue(output, OrganizationUnitId);
      }
      if (contractStatusId_ != null) {
        _single_contractStatusId_codec.WriteTagAndValue(output, ContractStatusId);
      }
      if (contractorIdentityGuid_ != null) {
        _single_contractorIdentityGuid_codec.WriteTagAndValue(output, ContractorIdentityGuid);
      }
      if (contractorId_ != null) {
        _single_contractorId_codec.WriteTagAndValue(output, ContractorId);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (signedUserId_ != null) {
        _single_signedUserId_codec.WriteTagAndValue(output, SignedUserId);
      }
      if (salesmanId_ != null) {
        _single_salesmanId_codec.WriteTagAndValue(output, SalesmanId);
      }
      if (contractNote_ != null) {
        _single_contractNote_codec.WriteTagAndValue(output, ContractNote);
      }
      if (grandTotal_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(GrandTotal);
      }
      if (contractorFullName_ != null) {
        _single_contractorFullName_codec.WriteTagAndValue(output, ContractorFullName);
      }
      if (contractStatusName_ != null) {
        _single_contractStatusName_codec.WriteTagAndValue(output, ContractStatusName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (contractCode_ != null) {
        size += _single_contractCode_codec.CalculateSizeWithTag(ContractCode);
      }
      if (agentCode_ != null) {
        size += _single_agentCode_codec.CalculateSizeWithTag(AgentCode);
      }
      if (contractTypeId_ != null) {
        size += _single_contractTypeId_codec.CalculateSizeWithTag(ContractTypeId);
      }
      if (marketAreaId_ != null) {
        size += _single_marketAreaId_codec.CalculateSizeWithTag(MarketAreaId);
      }
      if (marketAreaName_ != null) {
        size += _single_marketAreaName_codec.CalculateSizeWithTag(MarketAreaName);
      }
      if (projectId_ != null) {
        size += _single_projectId_codec.CalculateSizeWithTag(ProjectId);
      }
      if (projectName_ != null) {
        size += _single_projectName_codec.CalculateSizeWithTag(ProjectName);
      }
      if (organizationUnitId_ != null) {
        size += _single_organizationUnitId_codec.CalculateSizeWithTag(OrganizationUnitId);
      }
      if (contractStatusId_ != null) {
        size += _single_contractStatusId_codec.CalculateSizeWithTag(ContractStatusId);
      }
      if (contractorIdentityGuid_ != null) {
        size += _single_contractorIdentityGuid_codec.CalculateSizeWithTag(ContractorIdentityGuid);
      }
      if (contractorId_ != null) {
        size += _single_contractorId_codec.CalculateSizeWithTag(ContractorId);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (signedUserId_ != null) {
        size += _single_signedUserId_codec.CalculateSizeWithTag(SignedUserId);
      }
      if (salesmanId_ != null) {
        size += _single_salesmanId_codec.CalculateSizeWithTag(SalesmanId);
      }
      if (contractNote_ != null) {
        size += _single_contractNote_codec.CalculateSizeWithTag(ContractNote);
      }
      if (grandTotal_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GrandTotal);
      }
      if (contractorFullName_ != null) {
        size += _single_contractorFullName_codec.CalculateSizeWithTag(ContractorFullName);
      }
      if (contractStatusName_ != null) {
        size += _single_contractStatusName_codec.CalculateSizeWithTag(ContractStatusName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutContractSimpleGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.contractCode_ != null) {
        if (contractCode_ == null || other.ContractCode != "") {
          ContractCode = other.ContractCode;
        }
      }
      if (other.agentCode_ != null) {
        if (agentCode_ == null || other.AgentCode != "") {
          AgentCode = other.AgentCode;
        }
      }
      if (other.contractTypeId_ != null) {
        if (contractTypeId_ == null || other.ContractTypeId != 0) {
          ContractTypeId = other.ContractTypeId;
        }
      }
      if (other.marketAreaId_ != null) {
        if (marketAreaId_ == null || other.MarketAreaId != 0) {
          MarketAreaId = other.MarketAreaId;
        }
      }
      if (other.marketAreaName_ != null) {
        if (marketAreaName_ == null || other.MarketAreaName != "") {
          MarketAreaName = other.MarketAreaName;
        }
      }
      if (other.projectId_ != null) {
        if (projectId_ == null || other.ProjectId != 0) {
          ProjectId = other.ProjectId;
        }
      }
      if (other.projectName_ != null) {
        if (projectName_ == null || other.ProjectName != "") {
          ProjectName = other.ProjectName;
        }
      }
      if (other.organizationUnitId_ != null) {
        if (organizationUnitId_ == null || other.OrganizationUnitId != "") {
          OrganizationUnitId = other.OrganizationUnitId;
        }
      }
      if (other.contractStatusId_ != null) {
        if (contractStatusId_ == null || other.ContractStatusId != 0) {
          ContractStatusId = other.ContractStatusId;
        }
      }
      if (other.contractorIdentityGuid_ != null) {
        if (contractorIdentityGuid_ == null || other.ContractorIdentityGuid != "") {
          ContractorIdentityGuid = other.ContractorIdentityGuid;
        }
      }
      if (other.contractorId_ != null) {
        if (contractorId_ == null || other.ContractorId != 0) {
          ContractorId = other.ContractorId;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.signedUserId_ != null) {
        if (signedUserId_ == null || other.SignedUserId != "") {
          SignedUserId = other.SignedUserId;
        }
      }
      if (other.salesmanId_ != null) {
        if (salesmanId_ == null || other.SalesmanId != 0) {
          SalesmanId = other.SalesmanId;
        }
      }
      if (other.contractNote_ != null) {
        if (contractNote_ == null || other.ContractNote != "") {
          ContractNote = other.ContractNote;
        }
      }
      if (other.grandTotal_ != null) {
        if (grandTotal_ == null) {
          GrandTotal = new global::ContractManagement.API.Protos.Money();
        }
        GrandTotal.MergeFrom(other.GrandTotal);
      }
      if (other.contractorFullName_ != null) {
        if (contractorFullName_ == null || other.ContractorFullName != "") {
          ContractorFullName = other.ContractorFullName;
        }
      }
      if (other.contractStatusName_ != null) {
        if (contractStatusName_ == null || other.ContractStatusName != "") {
          ContractStatusName = other.ContractStatusName;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            string value = _single_contractCode_codec.Read(input);
            if (contractCode_ == null || value != "") {
              ContractCode = value;
            }
            break;
          }
          case 26: {
            string value = _single_agentCode_codec.Read(input);
            if (agentCode_ == null || value != "") {
              AgentCode = value;
            }
            break;
          }
          case 34: {
            int? value = _single_contractTypeId_codec.Read(input);
            if (contractTypeId_ == null || value != 0) {
              ContractTypeId = value;
            }
            break;
          }
          case 42: {
            int? value = _single_marketAreaId_codec.Read(input);
            if (marketAreaId_ == null || value != 0) {
              MarketAreaId = value;
            }
            break;
          }
          case 50: {
            string value = _single_marketAreaName_codec.Read(input);
            if (marketAreaName_ == null || value != "") {
              MarketAreaName = value;
            }
            break;
          }
          case 58: {
            int? value = _single_projectId_codec.Read(input);
            if (projectId_ == null || value != 0) {
              ProjectId = value;
            }
            break;
          }
          case 66: {
            string value = _single_projectName_codec.Read(input);
            if (projectName_ == null || value != "") {
              ProjectName = value;
            }
            break;
          }
          case 74: {
            string value = _single_organizationUnitId_codec.Read(input);
            if (organizationUnitId_ == null || value != "") {
              OrganizationUnitId = value;
            }
            break;
          }
          case 82: {
            int? value = _single_contractStatusId_codec.Read(input);
            if (contractStatusId_ == null || value != 0) {
              ContractStatusId = value;
            }
            break;
          }
          case 90: {
            string value = _single_contractorIdentityGuid_codec.Read(input);
            if (contractorIdentityGuid_ == null || value != "") {
              ContractorIdentityGuid = value;
            }
            break;
          }
          case 98: {
            int? value = _single_contractorId_codec.Read(input);
            if (contractorId_ == null || value != 0) {
              ContractorId = value;
            }
            break;
          }
          case 122: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 130: {
            string value = _single_signedUserId_codec.Read(input);
            if (signedUserId_ == null || value != "") {
              SignedUserId = value;
            }
            break;
          }
          case 138: {
            int? value = _single_salesmanId_codec.Read(input);
            if (salesmanId_ == null || value != 0) {
              SalesmanId = value;
            }
            break;
          }
          case 146: {
            string value = _single_contractNote_codec.Read(input);
            if (contractNote_ == null || value != "") {
              ContractNote = value;
            }
            break;
          }
          case 154: {
            if (grandTotal_ == null) {
              GrandTotal = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(GrandTotal);
            break;
          }
          case 162: {
            string value = _single_contractorFullName_codec.Read(input);
            if (contractorFullName_ == null || value != "") {
              ContractorFullName = value;
            }
            break;
          }
          case 170: {
            string value = _single_contractStatusName_codec.Read(input);
            if (contractStatusName_ == null || value != "") {
              ContractStatusName = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutputChannelPointGrpcDTO : pb::IMessage<OutputChannelPointGrpcDTO> {
    private static readonly pb::MessageParser<OutputChannelPointGrpcDTO> _parser = new pb::MessageParser<OutputChannelPointGrpcDTO>(() => new OutputChannelPointGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutputChannelPointGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputChannelPointGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputChannelPointGrpcDTO(OutputChannelPointGrpcDTO other) : this() {
      id_ = other.id_;
      currencyUnitId_ = other.currencyUnitId_;
      LocationId = other.LocationId;
      pointType_ = other.pointType_;
      CurrencyUnitCode = other.CurrencyUnitCode;
      installationAddress_ = other.installationAddress_ != null ? other.installationAddress_.Clone() : null;
      installationFee_ = other.installationFee_ != null ? other.installationFee_.Clone() : null;
      otherFee_ = other.otherFee_ != null ? other.otherFee_.Clone() : null;
      monthlyCost_ = other.monthlyCost_ != null ? other.monthlyCost_.Clone() : null;
      equipmentAmount_ = other.equipmentAmount_ != null ? other.equipmentAmount_.Clone() : null;
      InstallationPointSpliter = other.InstallationPointSpliter;
      equipments_ = other.equipments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputChannelPointGrpcDTO Clone() {
      return new OutputChannelPointGrpcDTO(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "currencyUnitId" field.</summary>
    public const int CurrencyUnitIdFieldNumber = 2;
    private int currencyUnitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrencyUnitId {
      get { return currencyUnitId_; }
      set {
        currencyUnitId_ = value;
      }
    }

    /// <summary>Field number for the "locationId" field.</summary>
    public const int LocationIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_locationId_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string locationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationId {
      get { return locationId_; }
      set {
        locationId_ = value;
      }
    }


    /// <summary>Field number for the "pointType" field.</summary>
    public const int PointTypeFieldNumber = 4;
    private int pointType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PointType {
      get { return pointType_; }
      set {
        pointType_ = value;
      }
    }

    /// <summary>Field number for the "currencyUnitCode" field.</summary>
    public const int CurrencyUnitCodeFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_currencyUnitCode_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string currencyUnitCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyUnitCode {
      get { return currencyUnitCode_; }
      set {
        currencyUnitCode_ = value;
      }
    }


    /// <summary>Field number for the "installationAddress" field.</summary>
    public const int InstallationAddressFieldNumber = 6;
    private global::ContractManagement.API.Protos.InstallationAddressGrpc installationAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.InstallationAddressGrpc InstallationAddress {
      get { return installationAddress_; }
      set {
        installationAddress_ = value;
      }
    }

    /// <summary>Field number for the "installationFee" field.</summary>
    public const int InstallationFeeFieldNumber = 7;
    private global::ContractManagement.API.Protos.Money installationFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money InstallationFee {
      get { return installationFee_; }
      set {
        installationFee_ = value;
      }
    }

    /// <summary>Field number for the "otherFee" field.</summary>
    public const int OtherFeeFieldNumber = 8;
    private global::ContractManagement.API.Protos.Money otherFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money OtherFee {
      get { return otherFee_; }
      set {
        otherFee_ = value;
      }
    }

    /// <summary>Field number for the "monthlyCost" field.</summary>
    public const int MonthlyCostFieldNumber = 9;
    private global::ContractManagement.API.Protos.Money monthlyCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money MonthlyCost {
      get { return monthlyCost_; }
      set {
        monthlyCost_ = value;
      }
    }

    /// <summary>Field number for the "equipmentAmount" field.</summary>
    public const int EquipmentAmountFieldNumber = 10;
    private global::ContractManagement.API.Protos.Money equipmentAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money EquipmentAmount {
      get { return equipmentAmount_; }
      set {
        equipmentAmount_ = value;
      }
    }

    /// <summary>Field number for the "installationPointSpliter" field.</summary>
    public const int InstallationPointSpliterFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_installationPointSpliter_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string installationPointSpliter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstallationPointSpliter {
      get { return installationPointSpliter_; }
      set {
        installationPointSpliter_ = value;
      }
    }


    /// <summary>Field number for the "equipments" field.</summary>
    public const int EquipmentsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO> _repeated_equipments_codec
        = pb::FieldCodec.ForMessage(98, global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO> equipments_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO> Equipments {
      get { return equipments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutputChannelPointGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutputChannelPointGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CurrencyUnitId != other.CurrencyUnitId) return false;
      if (LocationId != other.LocationId) return false;
      if (PointType != other.PointType) return false;
      if (CurrencyUnitCode != other.CurrencyUnitCode) return false;
      if (!object.Equals(InstallationAddress, other.InstallationAddress)) return false;
      if (!object.Equals(InstallationFee, other.InstallationFee)) return false;
      if (!object.Equals(OtherFee, other.OtherFee)) return false;
      if (!object.Equals(MonthlyCost, other.MonthlyCost)) return false;
      if (!object.Equals(EquipmentAmount, other.EquipmentAmount)) return false;
      if (InstallationPointSpliter != other.InstallationPointSpliter) return false;
      if(!equipments_.Equals(other.equipments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CurrencyUnitId != 0) hash ^= CurrencyUnitId.GetHashCode();
      if (locationId_ != null) hash ^= LocationId.GetHashCode();
      if (PointType != 0) hash ^= PointType.GetHashCode();
      if (currencyUnitCode_ != null) hash ^= CurrencyUnitCode.GetHashCode();
      if (installationAddress_ != null) hash ^= InstallationAddress.GetHashCode();
      if (installationFee_ != null) hash ^= InstallationFee.GetHashCode();
      if (otherFee_ != null) hash ^= OtherFee.GetHashCode();
      if (monthlyCost_ != null) hash ^= MonthlyCost.GetHashCode();
      if (equipmentAmount_ != null) hash ^= EquipmentAmount.GetHashCode();
      if (installationPointSpliter_ != null) hash ^= InstallationPointSpliter.GetHashCode();
      hash ^= equipments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CurrencyUnitId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrencyUnitId);
      }
      if (locationId_ != null) {
        _single_locationId_codec.WriteTagAndValue(output, LocationId);
      }
      if (PointType != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PointType);
      }
      if (currencyUnitCode_ != null) {
        _single_currencyUnitCode_codec.WriteTagAndValue(output, CurrencyUnitCode);
      }
      if (installationAddress_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(InstallationAddress);
      }
      if (installationFee_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(InstallationFee);
      }
      if (otherFee_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(OtherFee);
      }
      if (monthlyCost_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(MonthlyCost);
      }
      if (equipmentAmount_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EquipmentAmount);
      }
      if (installationPointSpliter_ != null) {
        _single_installationPointSpliter_codec.WriteTagAndValue(output, InstallationPointSpliter);
      }
      equipments_.WriteTo(output, _repeated_equipments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CurrencyUnitId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrencyUnitId);
      }
      if (locationId_ != null) {
        size += _single_locationId_codec.CalculateSizeWithTag(LocationId);
      }
      if (PointType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PointType);
      }
      if (currencyUnitCode_ != null) {
        size += _single_currencyUnitCode_codec.CalculateSizeWithTag(CurrencyUnitCode);
      }
      if (installationAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstallationAddress);
      }
      if (installationFee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InstallationFee);
      }
      if (otherFee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtherFee);
      }
      if (monthlyCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MonthlyCost);
      }
      if (equipmentAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EquipmentAmount);
      }
      if (installationPointSpliter_ != null) {
        size += _single_installationPointSpliter_codec.CalculateSizeWithTag(InstallationPointSpliter);
      }
      size += equipments_.CalculateSize(_repeated_equipments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutputChannelPointGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CurrencyUnitId != 0) {
        CurrencyUnitId = other.CurrencyUnitId;
      }
      if (other.locationId_ != null) {
        if (locationId_ == null || other.LocationId != "") {
          LocationId = other.LocationId;
        }
      }
      if (other.PointType != 0) {
        PointType = other.PointType;
      }
      if (other.currencyUnitCode_ != null) {
        if (currencyUnitCode_ == null || other.CurrencyUnitCode != "") {
          CurrencyUnitCode = other.CurrencyUnitCode;
        }
      }
      if (other.installationAddress_ != null) {
        if (installationAddress_ == null) {
          InstallationAddress = new global::ContractManagement.API.Protos.InstallationAddressGrpc();
        }
        InstallationAddress.MergeFrom(other.InstallationAddress);
      }
      if (other.installationFee_ != null) {
        if (installationFee_ == null) {
          InstallationFee = new global::ContractManagement.API.Protos.Money();
        }
        InstallationFee.MergeFrom(other.InstallationFee);
      }
      if (other.otherFee_ != null) {
        if (otherFee_ == null) {
          OtherFee = new global::ContractManagement.API.Protos.Money();
        }
        OtherFee.MergeFrom(other.OtherFee);
      }
      if (other.monthlyCost_ != null) {
        if (monthlyCost_ == null) {
          MonthlyCost = new global::ContractManagement.API.Protos.Money();
        }
        MonthlyCost.MergeFrom(other.MonthlyCost);
      }
      if (other.equipmentAmount_ != null) {
        if (equipmentAmount_ == null) {
          EquipmentAmount = new global::ContractManagement.API.Protos.Money();
        }
        EquipmentAmount.MergeFrom(other.EquipmentAmount);
      }
      if (other.installationPointSpliter_ != null) {
        if (installationPointSpliter_ == null || other.InstallationPointSpliter != "") {
          InstallationPointSpliter = other.InstallationPointSpliter;
        }
      }
      equipments_.Add(other.equipments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CurrencyUnitId = input.ReadInt32();
            break;
          }
          case 26: {
            string value = _single_locationId_codec.Read(input);
            if (locationId_ == null || value != "") {
              LocationId = value;
            }
            break;
          }
          case 32: {
            PointType = input.ReadInt32();
            break;
          }
          case 42: {
            string value = _single_currencyUnitCode_codec.Read(input);
            if (currencyUnitCode_ == null || value != "") {
              CurrencyUnitCode = value;
            }
            break;
          }
          case 50: {
            if (installationAddress_ == null) {
              InstallationAddress = new global::ContractManagement.API.Protos.InstallationAddressGrpc();
            }
            input.ReadMessage(InstallationAddress);
            break;
          }
          case 58: {
            if (installationFee_ == null) {
              InstallationFee = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(InstallationFee);
            break;
          }
          case 66: {
            if (otherFee_ == null) {
              OtherFee = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(OtherFee);
            break;
          }
          case 74: {
            if (monthlyCost_ == null) {
              MonthlyCost = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(MonthlyCost);
            break;
          }
          case 82: {
            if (equipmentAmount_ == null) {
              EquipmentAmount = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(EquipmentAmount);
            break;
          }
          case 90: {
            string value = _single_installationPointSpliter_codec.Read(input);
            if (installationPointSpliter_ == null || value != "") {
              InstallationPointSpliter = value;
            }
            break;
          }
          case 98: {
            equipments_.AddEntriesFrom(input, _repeated_equipments_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutContractEquipmentListGrpc : pb::IMessage<OutContractEquipmentListGrpc> {
    private static readonly pb::MessageParser<OutContractEquipmentListGrpc> _parser = new pb::MessageParser<OutContractEquipmentListGrpc>(() => new OutContractEquipmentListGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutContractEquipmentListGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractEquipmentListGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractEquipmentListGrpc(OutContractEquipmentListGrpc other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutContractEquipmentListGrpc Clone() {
      return new OutContractEquipmentListGrpc(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO> data_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.OutContractEquipmentGrpcDTO> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutContractEquipmentListGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutContractEquipmentListGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutContractEquipmentListGrpc other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutputChannelPointRequestGrpc : pb::IMessage<OutputChannelPointRequestGrpc> {
    private static readonly pb::MessageParser<OutputChannelPointRequestGrpc> _parser = new pb::MessageParser<OutputChannelPointRequestGrpc>(() => new OutputChannelPointRequestGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutputChannelPointRequestGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputChannelPointRequestGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputChannelPointRequestGrpc(OutputChannelPointRequestGrpc other) : this() {
      OrderBy = other.OrderBy;
      Dir = other.Dir;
      Skip = other.Skip;
      Take = other.Take;
      Filters = other.Filters;
      paging_ = other.paging_;
      Keywords = other.Keywords;
      PointType = other.PointType;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputChannelPointRequestGrpc Clone() {
      return new OutputChannelPointRequestGrpc(this);
    }

    /// <summary>Field number for the "orderBy" field.</summary>
    public const int OrderByFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_orderBy_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string orderBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = value;
      }
    }


    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_dir_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_filters_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string filters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }


    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 6;
    private bool paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "keywords" field.</summary>
    public const int KeywordsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_keywords_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string keywords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Keywords {
      get { return keywords_; }
      set {
        keywords_ = value;
      }
    }


    /// <summary>Field number for the "pointType" field.</summary>
    public const int PointTypeFieldNumber = 8;
    private static readonly pb::FieldCodec<int?> _single_pointType_codec = pb::FieldCodec.ForStructWrapper<int>(66);
    private int? pointType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PointType {
      get { return pointType_; }
      set {
        pointType_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutputChannelPointRequestGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutputChannelPointRequestGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderBy != other.OrderBy) return false;
      if (Dir != other.Dir) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (Filters != other.Filters) return false;
      if (Paging != other.Paging) return false;
      if (Keywords != other.Keywords) return false;
      if (PointType != other.PointType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (orderBy_ != null) hash ^= OrderBy.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (filters_ != null) hash ^= Filters.GetHashCode();
      if (Paging != false) hash ^= Paging.GetHashCode();
      if (keywords_ != null) hash ^= Keywords.GetHashCode();
      if (pointType_ != null) hash ^= PointType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (orderBy_ != null) {
        _single_orderBy_codec.WriteTagAndValue(output, OrderBy);
      }
      if (dir_ != null) {
        _single_dir_codec.WriteTagAndValue(output, Dir);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (filters_ != null) {
        _single_filters_codec.WriteTagAndValue(output, Filters);
      }
      if (Paging != false) {
        output.WriteRawTag(48);
        output.WriteBool(Paging);
      }
      if (keywords_ != null) {
        _single_keywords_codec.WriteTagAndValue(output, Keywords);
      }
      if (pointType_ != null) {
        _single_pointType_codec.WriteTagAndValue(output, PointType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (orderBy_ != null) {
        size += _single_orderBy_codec.CalculateSizeWithTag(OrderBy);
      }
      if (dir_ != null) {
        size += _single_dir_codec.CalculateSizeWithTag(Dir);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (filters_ != null) {
        size += _single_filters_codec.CalculateSizeWithTag(Filters);
      }
      if (Paging != false) {
        size += 1 + 1;
      }
      if (keywords_ != null) {
        size += _single_keywords_codec.CalculateSizeWithTag(Keywords);
      }
      if (pointType_ != null) {
        size += _single_pointType_codec.CalculateSizeWithTag(PointType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutputChannelPointRequestGrpc other) {
      if (other == null) {
        return;
      }
      if (other.orderBy_ != null) {
        if (orderBy_ == null || other.OrderBy != "") {
          OrderBy = other.OrderBy;
        }
      }
      if (other.dir_ != null) {
        if (dir_ == null || other.Dir != "") {
          Dir = other.Dir;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.filters_ != null) {
        if (filters_ == null || other.Filters != "") {
          Filters = other.Filters;
        }
      }
      if (other.Paging != false) {
        Paging = other.Paging;
      }
      if (other.keywords_ != null) {
        if (keywords_ == null || other.Keywords != "") {
          Keywords = other.Keywords;
        }
      }
      if (other.pointType_ != null) {
        if (pointType_ == null || other.PointType != 0) {
          PointType = other.PointType;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_orderBy_codec.Read(input);
            if (orderBy_ == null || value != "") {
              OrderBy = value;
            }
            break;
          }
          case 18: {
            string value = _single_dir_codec.Read(input);
            if (dir_ == null || value != "") {
              Dir = value;
            }
            break;
          }
          case 26: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 34: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 42: {
            string value = _single_filters_codec.Read(input);
            if (filters_ == null || value != "") {
              Filters = value;
            }
            break;
          }
          case 48: {
            Paging = input.ReadBool();
            break;
          }
          case 58: {
            string value = _single_keywords_codec.Read(input);
            if (keywords_ == null || value != "") {
              Keywords = value;
            }
            break;
          }
          case 66: {
            int? value = _single_pointType_codec.Read(input);
            if (pointType_ == null || value != 0) {
              PointType = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class OutputChannelPointListGrpc : pb::IMessage<OutputChannelPointListGrpc> {
    private static readonly pb::MessageParser<OutputChannelPointListGrpc> _parser = new pb::MessageParser<OutputChannelPointListGrpc>(() => new OutputChannelPointListGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OutputChannelPointListGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputChannelPointListGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputChannelPointListGrpc(OutputChannelPointListGrpc other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OutputChannelPointListGrpc Clone() {
      return new OutputChannelPointListGrpc(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO> data_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.OutputChannelPointGrpcDTO> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OutputChannelPointListGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OutputChannelPointListGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OutputChannelPointListGrpc other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractContentDTOGrpc : pb::IMessage<ContractContentDTOGrpc> {
    private static readonly pb::MessageParser<ContractContentDTOGrpc> _parser = new pb::MessageParser<ContractContentDTOGrpc>(() => new ContractContentDTOGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractContentDTOGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractContentDTOGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractContentDTOGrpc(ContractContentDTOGrpc other) : this() {
      Content = other.Content;
      DigitalSignatureId = other.DigitalSignatureId;
      ContractFormSignatureId = other.ContractFormSignatureId;
      digitalSignature_ = other.digitalSignature_ != null ? other.digitalSignature_.Clone() : null;
      contractFormSignature_ = other.contractFormSignature_ != null ? other.contractFormSignature_.Clone() : null;
      OutContractId = other.OutContractId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractContentDTOGrpc Clone() {
      return new ContractContentDTOGrpc(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_content_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }


    /// <summary>Field number for the "digitalSignatureId" field.</summary>
    public const int DigitalSignatureIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_digitalSignatureId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? digitalSignatureId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? DigitalSignatureId {
      get { return digitalSignatureId_; }
      set {
        digitalSignatureId_ = value;
      }
    }


    /// <summary>Field number for the "contractFormSignatureId" field.</summary>
    public const int ContractFormSignatureIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_contractFormSignatureId_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? contractFormSignatureId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractFormSignatureId {
      get { return contractFormSignatureId_; }
      set {
        contractFormSignatureId_ = value;
      }
    }


    /// <summary>Field number for the "digitalSignature" field.</summary>
    public const int DigitalSignatureFieldNumber = 4;
    private global::ContractManagement.API.Protos.PictureDTOGrpc digitalSignature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.PictureDTOGrpc DigitalSignature {
      get { return digitalSignature_; }
      set {
        digitalSignature_ = value;
      }
    }

    /// <summary>Field number for the "contractFormSignature" field.</summary>
    public const int ContractFormSignatureFieldNumber = 5;
    private global::ContractManagement.API.Protos.PictureDTOGrpc contractFormSignature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.PictureDTOGrpc ContractFormSignature {
      get { return contractFormSignature_; }
      set {
        contractFormSignature_ = value;
      }
    }

    /// <summary>Field number for the "outContractId" field.</summary>
    public const int OutContractIdFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_outContractId_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? outContractId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? OutContractId {
      get { return outContractId_; }
      set {
        outContractId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractContentDTOGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractContentDTOGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (DigitalSignatureId != other.DigitalSignatureId) return false;
      if (ContractFormSignatureId != other.ContractFormSignatureId) return false;
      if (!object.Equals(DigitalSignature, other.DigitalSignature)) return false;
      if (!object.Equals(ContractFormSignature, other.ContractFormSignature)) return false;
      if (OutContractId != other.OutContractId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (content_ != null) hash ^= Content.GetHashCode();
      if (digitalSignatureId_ != null) hash ^= DigitalSignatureId.GetHashCode();
      if (contractFormSignatureId_ != null) hash ^= ContractFormSignatureId.GetHashCode();
      if (digitalSignature_ != null) hash ^= DigitalSignature.GetHashCode();
      if (contractFormSignature_ != null) hash ^= ContractFormSignature.GetHashCode();
      if (outContractId_ != null) hash ^= OutContractId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (content_ != null) {
        _single_content_codec.WriteTagAndValue(output, Content);
      }
      if (digitalSignatureId_ != null) {
        _single_digitalSignatureId_codec.WriteTagAndValue(output, DigitalSignatureId);
      }
      if (contractFormSignatureId_ != null) {
        _single_contractFormSignatureId_codec.WriteTagAndValue(output, ContractFormSignatureId);
      }
      if (digitalSignature_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DigitalSignature);
      }
      if (contractFormSignature_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ContractFormSignature);
      }
      if (outContractId_ != null) {
        _single_outContractId_codec.WriteTagAndValue(output, OutContractId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (content_ != null) {
        size += _single_content_codec.CalculateSizeWithTag(Content);
      }
      if (digitalSignatureId_ != null) {
        size += _single_digitalSignatureId_codec.CalculateSizeWithTag(DigitalSignatureId);
      }
      if (contractFormSignatureId_ != null) {
        size += _single_contractFormSignatureId_codec.CalculateSizeWithTag(ContractFormSignatureId);
      }
      if (digitalSignature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DigitalSignature);
      }
      if (contractFormSignature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContractFormSignature);
      }
      if (outContractId_ != null) {
        size += _single_outContractId_codec.CalculateSizeWithTag(OutContractId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractContentDTOGrpc other) {
      if (other == null) {
        return;
      }
      if (other.content_ != null) {
        if (content_ == null || other.Content != "") {
          Content = other.Content;
        }
      }
      if (other.digitalSignatureId_ != null) {
        if (digitalSignatureId_ == null || other.DigitalSignatureId != 0) {
          DigitalSignatureId = other.DigitalSignatureId;
        }
      }
      if (other.contractFormSignatureId_ != null) {
        if (contractFormSignatureId_ == null || other.ContractFormSignatureId != 0) {
          ContractFormSignatureId = other.ContractFormSignatureId;
        }
      }
      if (other.digitalSignature_ != null) {
        if (digitalSignature_ == null) {
          DigitalSignature = new global::ContractManagement.API.Protos.PictureDTOGrpc();
        }
        DigitalSignature.MergeFrom(other.DigitalSignature);
      }
      if (other.contractFormSignature_ != null) {
        if (contractFormSignature_ == null) {
          ContractFormSignature = new global::ContractManagement.API.Protos.PictureDTOGrpc();
        }
        ContractFormSignature.MergeFrom(other.ContractFormSignature);
      }
      if (other.outContractId_ != null) {
        if (outContractId_ == null || other.OutContractId != 0) {
          OutContractId = other.OutContractId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_content_codec.Read(input);
            if (content_ == null || value != "") {
              Content = value;
            }
            break;
          }
          case 18: {
            int? value = _single_digitalSignatureId_codec.Read(input);
            if (digitalSignatureId_ == null || value != 0) {
              DigitalSignatureId = value;
            }
            break;
          }
          case 26: {
            int? value = _single_contractFormSignatureId_codec.Read(input);
            if (contractFormSignatureId_ == null || value != 0) {
              ContractFormSignatureId = value;
            }
            break;
          }
          case 34: {
            if (digitalSignature_ == null) {
              DigitalSignature = new global::ContractManagement.API.Protos.PictureDTOGrpc();
            }
            input.ReadMessage(DigitalSignature);
            break;
          }
          case 42: {
            if (contractFormSignature_ == null) {
              ContractFormSignature = new global::ContractManagement.API.Protos.PictureDTOGrpc();
            }
            input.ReadMessage(ContractFormSignature);
            break;
          }
          case 50: {
            int? value = _single_outContractId_codec.Read(input);
            if (outContractId_ == null || value != 0) {
              OutContractId = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatusReportFilterGrpc : pb::IMessage<ContractStatusReportFilterGrpc> {
    private static readonly pb::MessageParser<ContractStatusReportFilterGrpc> _parser = new pb::MessageParser<ContractStatusReportFilterGrpc>(() => new ContractStatusReportFilterGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatusReportFilterGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusReportFilterGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusReportFilterGrpc(ContractStatusReportFilterGrpc other) : this() {
      fromDate_ = other.fromDate_ != null ? other.fromDate_.Clone() : null;
      toDate_ = other.toDate_ != null ? other.toDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusReportFilterGrpc Clone() {
      return new ContractStatusReportFilterGrpc(this);
    }

    /// <summary>Field number for the "fromDate" field.</summary>
    public const int FromDateFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp fromDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FromDate {
      get { return fromDate_; }
      set {
        fromDate_ = value;
      }
    }

    /// <summary>Field number for the "toDate" field.</summary>
    public const int ToDateFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp toDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ToDate {
      get { return toDate_; }
      set {
        toDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatusReportFilterGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatusReportFilterGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FromDate, other.FromDate)) return false;
      if (!object.Equals(ToDate, other.ToDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fromDate_ != null) hash ^= FromDate.GetHashCode();
      if (toDate_ != null) hash ^= ToDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fromDate_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FromDate);
      }
      if (toDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ToDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fromDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromDate);
      }
      if (toDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatusReportFilterGrpc other) {
      if (other == null) {
        return;
      }
      if (other.fromDate_ != null) {
        if (fromDate_ == null) {
          FromDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FromDate.MergeFrom(other.FromDate);
      }
      if (other.toDate_ != null) {
        if (toDate_ == null) {
          ToDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ToDate.MergeFrom(other.ToDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fromDate_ == null) {
              FromDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FromDate);
            break;
          }
          case 18: {
            if (toDate_ == null) {
              ToDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ToDate);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatusReportResponseGrpc : pb::IMessage<ContractStatusReportResponseGrpc> {
    private static readonly pb::MessageParser<ContractStatusReportResponseGrpc> _parser = new pb::MessageParser<ContractStatusReportResponseGrpc>(() => new ContractStatusReportResponseGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatusReportResponseGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusReportResponseGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusReportResponseGrpc(ContractStatusReportResponseGrpc other) : this() {
      data_ = other.data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusReportResponseGrpc Clone() {
      return new ContractStatusReportResponseGrpc(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ContractStatusReportModelGrpc> _repeated_data_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.ContractStatusReportModelGrpc.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ContractStatusReportModelGrpc> data_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ContractStatusReportModelGrpc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ContractStatusReportModelGrpc> Data {
      get { return data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatusReportResponseGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatusReportResponseGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!data_.Equals(other.data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      data_.WriteTo(output, _repeated_data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += data_.CalculateSize(_repeated_data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatusReportResponseGrpc other) {
      if (other == null) {
        return;
      }
      data_.Add(other.data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractStatusReportModelGrpc : pb::IMessage<ContractStatusReportModelGrpc> {
    private static readonly pb::MessageParser<ContractStatusReportModelGrpc> _parser = new pb::MessageParser<ContractStatusReportModelGrpc>(() => new ContractStatusReportModelGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractStatusReportModelGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusReportModelGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusReportModelGrpc(ContractStatusReportModelGrpc other) : this() {
      ContractStatusName = other.ContractStatusName;
      contractStatusId_ = other.contractStatusId_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractStatusReportModelGrpc Clone() {
      return new ContractStatusReportModelGrpc(this);
    }

    /// <summary>Field number for the "contractStatusName" field.</summary>
    public const int ContractStatusNameFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_contractStatusName_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string contractStatusName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractStatusName {
      get { return contractStatusName_; }
      set {
        contractStatusName_ = value;
      }
    }


    /// <summary>Field number for the "contractStatusId" field.</summary>
    public const int ContractStatusIdFieldNumber = 2;
    private int contractStatusId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContractStatusId {
      get { return contractStatusId_; }
      set {
        contractStatusId_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractStatusReportModelGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractStatusReportModelGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractStatusName != other.ContractStatusName) return false;
      if (ContractStatusId != other.ContractStatusId) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contractStatusName_ != null) hash ^= ContractStatusName.GetHashCode();
      if (ContractStatusId != 0) hash ^= ContractStatusId.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (contractStatusName_ != null) {
        _single_contractStatusName_codec.WriteTagAndValue(output, ContractStatusName);
      }
      if (ContractStatusId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ContractStatusId);
      }
      if (Amount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contractStatusName_ != null) {
        size += _single_contractStatusName_codec.CalculateSizeWithTag(ContractStatusName);
      }
      if (ContractStatusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContractStatusId);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractStatusReportModelGrpc other) {
      if (other == null) {
        return;
      }
      if (other.contractStatusName_ != null) {
        if (contractStatusName_ == null || other.ContractStatusName != "") {
          ContractStatusName = other.ContractStatusName;
        }
      }
      if (other.ContractStatusId != 0) {
        ContractStatusId = other.ContractStatusId;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_contractStatusName_codec.Read(input);
            if (contractStatusName_ == null || value != "") {
              ContractStatusName = value;
            }
            break;
          }
          case 16: {
            ContractStatusId = input.ReadInt32();
            break;
          }
          case 24: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PromotionDetailGrpcModel : pb::IMessage<PromotionDetailGrpcModel> {
    private static readonly pb::MessageParser<PromotionDetailGrpcModel> _parser = new pb::MessageParser<PromotionDetailGrpcModel>(() => new PromotionDetailGrpcModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PromotionDetailGrpcModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PromotionDetailGrpcModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PromotionDetailGrpcModel(PromotionDetailGrpcModel other) : this() {
      Id = other.Id;
      PromotionId = other.PromotionId;
      PromotionCode = other.PromotionCode;
      PromotionValueType = other.PromotionValueType;
      PromotionValueTypeString = other.PromotionValueTypeString;
      PromotionValue = other.PromotionValue;
      Quantity = other.Quantity;
      CurrencyUnitId = other.CurrencyUnitId;
      CurrencyUnitCode = other.CurrencyUnitCode;
      City = other.City;
      CityId = other.CityId;
      District = other.District;
      DistrictId = other.DistrictId;
      Country = other.Country;
      CountryId = other.CountryId;
      ServiceId = other.ServiceId;
      ServiceName = other.ServiceName;
      ServicePackageId = other.ServicePackageId;
      ServicePackageName = other.ServicePackageName;
      ProjectId = other.ProjectId;
      ProjectName = other.ProjectName;
      UpdatePerson = other.UpdatePerson;
      NumberOfMonthApplied = other.NumberOfMonthApplied;
      SubjectId = other.SubjectId;
      isChange_ = other.isChange_;
      isActive_ = other.isActive_;
      MinPaymentPeriod = other.MinPaymentPeriod;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PromotionDetailGrpcModel Clone() {
      return new PromotionDetailGrpcModel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_id_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "promotionId" field.</summary>
    public const int PromotionIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_promotionId_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? promotionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PromotionId {
      get { return promotionId_; }
      set {
        promotionId_ = value;
      }
    }


    /// <summary>Field number for the "promotionCode" field.</summary>
    public const int PromotionCodeFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_promotionCode_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string promotionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromotionCode {
      get { return promotionCode_; }
      set {
        promotionCode_ = value;
      }
    }


    /// <summary>Field number for the "promotionValueType" field.</summary>
    public const int PromotionValueTypeFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_promotionValueType_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? promotionValueType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PromotionValueType {
      get { return promotionValueType_; }
      set {
        promotionValueType_ = value;
      }
    }


    /// <summary>Field number for the "promotionValueTypeString" field.</summary>
    public const int PromotionValueTypeStringFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_promotionValueTypeString_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string promotionValueTypeString_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromotionValueTypeString {
      get { return promotionValueTypeString_; }
      set {
        promotionValueTypeString_ = value;
      }
    }


    /// <summary>Field number for the "promotionValue" field.</summary>
    public const int PromotionValueFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_promotionValue_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string promotionValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromotionValue {
      get { return promotionValue_; }
      set {
        promotionValue_ = value;
      }
    }


    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 7;
    private static readonly pb::FieldCodec<int?> _single_quantity_codec = pb::FieldCodec.ForStructWrapper<int>(58);
    private int? quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }


    /// <summary>Field number for the "currencyUnitId" field.</summary>
    public const int CurrencyUnitIdFieldNumber = 8;
    private static readonly pb::FieldCodec<int?> _single_currencyUnitId_codec = pb::FieldCodec.ForStructWrapper<int>(66);
    private int? currencyUnitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? CurrencyUnitId {
      get { return currencyUnitId_; }
      set {
        currencyUnitId_ = value;
      }
    }


    /// <summary>Field number for the "currencyUnitCode" field.</summary>
    public const int CurrencyUnitCodeFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_currencyUnitCode_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string currencyUnitCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrencyUnitCode {
      get { return currencyUnitCode_; }
      set {
        currencyUnitCode_ = value;
      }
    }


    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_city_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = value;
      }
    }


    /// <summary>Field number for the "cityId" field.</summary>
    public const int CityIdFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_cityId_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }


    /// <summary>Field number for the "district" field.</summary>
    public const int DistrictFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_district_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string district_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string District {
      get { return district_; }
      set {
        district_ = value;
      }
    }


    /// <summary>Field number for the "districtId" field.</summary>
    public const int DistrictIdFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_districtId_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string districtId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DistrictId {
      get { return districtId_; }
      set {
        districtId_ = value;
      }
    }


    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_country_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string country_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = value;
      }
    }


    /// <summary>Field number for the "countryId" field.</summary>
    public const int CountryIdFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_countryId_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string countryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryId {
      get { return countryId_; }
      set {
        countryId_ = value;
      }
    }


    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 16;
    private static readonly pb::FieldCodec<int?> _single_serviceId_codec = pb::FieldCodec.ForStructWrapper<int>(130);
    private int? serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }


    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _single_serviceName_codec = pb::FieldCodec.ForClassWrapper<string>(138);
    private string serviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = value;
      }
    }


    /// <summary>Field number for the "servicePackageId" field.</summary>
    public const int ServicePackageIdFieldNumber = 18;
    private static readonly pb::FieldCodec<int?> _single_servicePackageId_codec = pb::FieldCodec.ForStructWrapper<int>(146);
    private int? servicePackageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ServicePackageId {
      get { return servicePackageId_; }
      set {
        servicePackageId_ = value;
      }
    }


    /// <summary>Field number for the "servicePackageName" field.</summary>
    public const int ServicePackageNameFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _single_servicePackageName_codec = pb::FieldCodec.ForClassWrapper<string>(154);
    private string servicePackageName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicePackageName {
      get { return servicePackageName_; }
      set {
        servicePackageName_ = value;
      }
    }


    /// <summary>Field number for the "projectId" field.</summary>
    public const int ProjectIdFieldNumber = 20;
    private static readonly pb::FieldCodec<int?> _single_projectId_codec = pb::FieldCodec.ForStructWrapper<int>(162);
    private int? projectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ProjectId {
      get { return projectId_; }
      set {
        projectId_ = value;
      }
    }


    /// <summary>Field number for the "projectName" field.</summary>
    public const int ProjectNameFieldNumber = 21;
    private static readonly pb::FieldCodec<string> _single_projectName_codec = pb::FieldCodec.ForClassWrapper<string>(170);
    private string projectName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectName {
      get { return projectName_; }
      set {
        projectName_ = value;
      }
    }


    /// <summary>Field number for the "updatePerson" field.</summary>
    public const int UpdatePersonFieldNumber = 22;
    private static readonly pb::FieldCodec<string> _single_updatePerson_codec = pb::FieldCodec.ForClassWrapper<string>(178);
    private string updatePerson_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatePerson {
      get { return updatePerson_; }
      set {
        updatePerson_ = value;
      }
    }


    /// <summary>Field number for the "numberOfMonthApplied" field.</summary>
    public const int NumberOfMonthAppliedFieldNumber = 23;
    private static readonly pb::FieldCodec<int?> _single_numberOfMonthApplied_codec = pb::FieldCodec.ForStructWrapper<int>(186);
    private int? numberOfMonthApplied_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? NumberOfMonthApplied {
      get { return numberOfMonthApplied_; }
      set {
        numberOfMonthApplied_ = value;
      }
    }


    /// <summary>Field number for the "subjectId" field.</summary>
    public const int SubjectIdFieldNumber = 24;
    private static readonly pb::FieldCodec<string> _single_subjectId_codec = pb::FieldCodec.ForClassWrapper<string>(194);
    private string subjectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubjectId {
      get { return subjectId_; }
      set {
        subjectId_ = value;
      }
    }


    /// <summary>Field number for the "isChange" field.</summary>
    public const int IsChangeFieldNumber = 25;
    private bool isChange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsChange {
      get { return isChange_; }
      set {
        isChange_ = value;
      }
    }

    /// <summary>Field number for the "isActive" field.</summary>
    public const int IsActiveFieldNumber = 26;
    private bool isActive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsActive {
      get { return isActive_; }
      set {
        isActive_ = value;
      }
    }

    /// <summary>Field number for the "minPaymentPeriod" field.</summary>
    public const int MinPaymentPeriodFieldNumber = 27;
    private static readonly pb::FieldCodec<int?> _single_minPaymentPeriod_codec = pb::FieldCodec.ForStructWrapper<int>(218);
    private int? minPaymentPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? MinPaymentPeriod {
      get { return minPaymentPeriod_; }
      set {
        minPaymentPeriod_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PromotionDetailGrpcModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PromotionDetailGrpcModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PromotionId != other.PromotionId) return false;
      if (PromotionCode != other.PromotionCode) return false;
      if (PromotionValueType != other.PromotionValueType) return false;
      if (PromotionValueTypeString != other.PromotionValueTypeString) return false;
      if (PromotionValue != other.PromotionValue) return false;
      if (Quantity != other.Quantity) return false;
      if (CurrencyUnitId != other.CurrencyUnitId) return false;
      if (CurrencyUnitCode != other.CurrencyUnitCode) return false;
      if (City != other.City) return false;
      if (CityId != other.CityId) return false;
      if (District != other.District) return false;
      if (DistrictId != other.DistrictId) return false;
      if (Country != other.Country) return false;
      if (CountryId != other.CountryId) return false;
      if (ServiceId != other.ServiceId) return false;
      if (ServiceName != other.ServiceName) return false;
      if (ServicePackageId != other.ServicePackageId) return false;
      if (ServicePackageName != other.ServicePackageName) return false;
      if (ProjectId != other.ProjectId) return false;
      if (ProjectName != other.ProjectName) return false;
      if (UpdatePerson != other.UpdatePerson) return false;
      if (NumberOfMonthApplied != other.NumberOfMonthApplied) return false;
      if (SubjectId != other.SubjectId) return false;
      if (IsChange != other.IsChange) return false;
      if (IsActive != other.IsActive) return false;
      if (MinPaymentPeriod != other.MinPaymentPeriod) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (promotionId_ != null) hash ^= PromotionId.GetHashCode();
      if (promotionCode_ != null) hash ^= PromotionCode.GetHashCode();
      if (promotionValueType_ != null) hash ^= PromotionValueType.GetHashCode();
      if (promotionValueTypeString_ != null) hash ^= PromotionValueTypeString.GetHashCode();
      if (promotionValue_ != null) hash ^= PromotionValue.GetHashCode();
      if (quantity_ != null) hash ^= Quantity.GetHashCode();
      if (currencyUnitId_ != null) hash ^= CurrencyUnitId.GetHashCode();
      if (currencyUnitCode_ != null) hash ^= CurrencyUnitCode.GetHashCode();
      if (city_ != null) hash ^= City.GetHashCode();
      if (cityId_ != null) hash ^= CityId.GetHashCode();
      if (district_ != null) hash ^= District.GetHashCode();
      if (districtId_ != null) hash ^= DistrictId.GetHashCode();
      if (country_ != null) hash ^= Country.GetHashCode();
      if (countryId_ != null) hash ^= CountryId.GetHashCode();
      if (serviceId_ != null) hash ^= ServiceId.GetHashCode();
      if (serviceName_ != null) hash ^= ServiceName.GetHashCode();
      if (servicePackageId_ != null) hash ^= ServicePackageId.GetHashCode();
      if (servicePackageName_ != null) hash ^= ServicePackageName.GetHashCode();
      if (projectId_ != null) hash ^= ProjectId.GetHashCode();
      if (projectName_ != null) hash ^= ProjectName.GetHashCode();
      if (updatePerson_ != null) hash ^= UpdatePerson.GetHashCode();
      if (numberOfMonthApplied_ != null) hash ^= NumberOfMonthApplied.GetHashCode();
      if (subjectId_ != null) hash ^= SubjectId.GetHashCode();
      if (IsChange != false) hash ^= IsChange.GetHashCode();
      if (IsActive != false) hash ^= IsActive.GetHashCode();
      if (minPaymentPeriod_ != null) hash ^= MinPaymentPeriod.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (promotionId_ != null) {
        _single_promotionId_codec.WriteTagAndValue(output, PromotionId);
      }
      if (promotionCode_ != null) {
        _single_promotionCode_codec.WriteTagAndValue(output, PromotionCode);
      }
      if (promotionValueType_ != null) {
        _single_promotionValueType_codec.WriteTagAndValue(output, PromotionValueType);
      }
      if (promotionValueTypeString_ != null) {
        _single_promotionValueTypeString_codec.WriteTagAndValue(output, PromotionValueTypeString);
      }
      if (promotionValue_ != null) {
        _single_promotionValue_codec.WriteTagAndValue(output, PromotionValue);
      }
      if (quantity_ != null) {
        _single_quantity_codec.WriteTagAndValue(output, Quantity);
      }
      if (currencyUnitId_ != null) {
        _single_currencyUnitId_codec.WriteTagAndValue(output, CurrencyUnitId);
      }
      if (currencyUnitCode_ != null) {
        _single_currencyUnitCode_codec.WriteTagAndValue(output, CurrencyUnitCode);
      }
      if (city_ != null) {
        _single_city_codec.WriteTagAndValue(output, City);
      }
      if (cityId_ != null) {
        _single_cityId_codec.WriteTagAndValue(output, CityId);
      }
      if (district_ != null) {
        _single_district_codec.WriteTagAndValue(output, District);
      }
      if (districtId_ != null) {
        _single_districtId_codec.WriteTagAndValue(output, DistrictId);
      }
      if (country_ != null) {
        _single_country_codec.WriteTagAndValue(output, Country);
      }
      if (countryId_ != null) {
        _single_countryId_codec.WriteTagAndValue(output, CountryId);
      }
      if (serviceId_ != null) {
        _single_serviceId_codec.WriteTagAndValue(output, ServiceId);
      }
      if (serviceName_ != null) {
        _single_serviceName_codec.WriteTagAndValue(output, ServiceName);
      }
      if (servicePackageId_ != null) {
        _single_servicePackageId_codec.WriteTagAndValue(output, ServicePackageId);
      }
      if (servicePackageName_ != null) {
        _single_servicePackageName_codec.WriteTagAndValue(output, ServicePackageName);
      }
      if (projectId_ != null) {
        _single_projectId_codec.WriteTagAndValue(output, ProjectId);
      }
      if (projectName_ != null) {
        _single_projectName_codec.WriteTagAndValue(output, ProjectName);
      }
      if (updatePerson_ != null) {
        _single_updatePerson_codec.WriteTagAndValue(output, UpdatePerson);
      }
      if (numberOfMonthApplied_ != null) {
        _single_numberOfMonthApplied_codec.WriteTagAndValue(output, NumberOfMonthApplied);
      }
      if (subjectId_ != null) {
        _single_subjectId_codec.WriteTagAndValue(output, SubjectId);
      }
      if (IsChange != false) {
        output.WriteRawTag(200, 1);
        output.WriteBool(IsChange);
      }
      if (IsActive != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(IsActive);
      }
      if (minPaymentPeriod_ != null) {
        _single_minPaymentPeriod_codec.WriteTagAndValue(output, MinPaymentPeriod);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (promotionId_ != null) {
        size += _single_promotionId_codec.CalculateSizeWithTag(PromotionId);
      }
      if (promotionCode_ != null) {
        size += _single_promotionCode_codec.CalculateSizeWithTag(PromotionCode);
      }
      if (promotionValueType_ != null) {
        size += _single_promotionValueType_codec.CalculateSizeWithTag(PromotionValueType);
      }
      if (promotionValueTypeString_ != null) {
        size += _single_promotionValueTypeString_codec.CalculateSizeWithTag(PromotionValueTypeString);
      }
      if (promotionValue_ != null) {
        size += _single_promotionValue_codec.CalculateSizeWithTag(PromotionValue);
      }
      if (quantity_ != null) {
        size += _single_quantity_codec.CalculateSizeWithTag(Quantity);
      }
      if (currencyUnitId_ != null) {
        size += _single_currencyUnitId_codec.CalculateSizeWithTag(CurrencyUnitId);
      }
      if (currencyUnitCode_ != null) {
        size += _single_currencyUnitCode_codec.CalculateSizeWithTag(CurrencyUnitCode);
      }
      if (city_ != null) {
        size += _single_city_codec.CalculateSizeWithTag(City);
      }
      if (cityId_ != null) {
        size += _single_cityId_codec.CalculateSizeWithTag(CityId);
      }
      if (district_ != null) {
        size += _single_district_codec.CalculateSizeWithTag(District);
      }
      if (districtId_ != null) {
        size += _single_districtId_codec.CalculateSizeWithTag(DistrictId);
      }
      if (country_ != null) {
        size += _single_country_codec.CalculateSizeWithTag(Country);
      }
      if (countryId_ != null) {
        size += _single_countryId_codec.CalculateSizeWithTag(CountryId);
      }
      if (serviceId_ != null) {
        size += _single_serviceId_codec.CalculateSizeWithTag(ServiceId);
      }
      if (serviceName_ != null) {
        size += _single_serviceName_codec.CalculateSizeWithTag(ServiceName);
      }
      if (servicePackageId_ != null) {
        size += _single_servicePackageId_codec.CalculateSizeWithTag(ServicePackageId);
      }
      if (servicePackageName_ != null) {
        size += _single_servicePackageName_codec.CalculateSizeWithTag(ServicePackageName);
      }
      if (projectId_ != null) {
        size += _single_projectId_codec.CalculateSizeWithTag(ProjectId);
      }
      if (projectName_ != null) {
        size += _single_projectName_codec.CalculateSizeWithTag(ProjectName);
      }
      if (updatePerson_ != null) {
        size += _single_updatePerson_codec.CalculateSizeWithTag(UpdatePerson);
      }
      if (numberOfMonthApplied_ != null) {
        size += _single_numberOfMonthApplied_codec.CalculateSizeWithTag(NumberOfMonthApplied);
      }
      if (subjectId_ != null) {
        size += _single_subjectId_codec.CalculateSizeWithTag(SubjectId);
      }
      if (IsChange != false) {
        size += 2 + 1;
      }
      if (IsActive != false) {
        size += 2 + 1;
      }
      if (minPaymentPeriod_ != null) {
        size += _single_minPaymentPeriod_codec.CalculateSizeWithTag(MinPaymentPeriod);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PromotionDetailGrpcModel other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0) {
          Id = other.Id;
        }
      }
      if (other.promotionId_ != null) {
        if (promotionId_ == null || other.PromotionId != 0) {
          PromotionId = other.PromotionId;
        }
      }
      if (other.promotionCode_ != null) {
        if (promotionCode_ == null || other.PromotionCode != "") {
          PromotionCode = other.PromotionCode;
        }
      }
      if (other.promotionValueType_ != null) {
        if (promotionValueType_ == null || other.PromotionValueType != 0) {
          PromotionValueType = other.PromotionValueType;
        }
      }
      if (other.promotionValueTypeString_ != null) {
        if (promotionValueTypeString_ == null || other.PromotionValueTypeString != "") {
          PromotionValueTypeString = other.PromotionValueTypeString;
        }
      }
      if (other.promotionValue_ != null) {
        if (promotionValue_ == null || other.PromotionValue != "") {
          PromotionValue = other.PromotionValue;
        }
      }
      if (other.quantity_ != null) {
        if (quantity_ == null || other.Quantity != 0) {
          Quantity = other.Quantity;
        }
      }
      if (other.currencyUnitId_ != null) {
        if (currencyUnitId_ == null || other.CurrencyUnitId != 0) {
          CurrencyUnitId = other.CurrencyUnitId;
        }
      }
      if (other.currencyUnitCode_ != null) {
        if (currencyUnitCode_ == null || other.CurrencyUnitCode != "") {
          CurrencyUnitCode = other.CurrencyUnitCode;
        }
      }
      if (other.city_ != null) {
        if (city_ == null || other.City != "") {
          City = other.City;
        }
      }
      if (other.cityId_ != null) {
        if (cityId_ == null || other.CityId != "") {
          CityId = other.CityId;
        }
      }
      if (other.district_ != null) {
        if (district_ == null || other.District != "") {
          District = other.District;
        }
      }
      if (other.districtId_ != null) {
        if (districtId_ == null || other.DistrictId != "") {
          DistrictId = other.DistrictId;
        }
      }
      if (other.country_ != null) {
        if (country_ == null || other.Country != "") {
          Country = other.Country;
        }
      }
      if (other.countryId_ != null) {
        if (countryId_ == null || other.CountryId != "") {
          CountryId = other.CountryId;
        }
      }
      if (other.serviceId_ != null) {
        if (serviceId_ == null || other.ServiceId != 0) {
          ServiceId = other.ServiceId;
        }
      }
      if (other.serviceName_ != null) {
        if (serviceName_ == null || other.ServiceName != "") {
          ServiceName = other.ServiceName;
        }
      }
      if (other.servicePackageId_ != null) {
        if (servicePackageId_ == null || other.ServicePackageId != 0) {
          ServicePackageId = other.ServicePackageId;
        }
      }
      if (other.servicePackageName_ != null) {
        if (servicePackageName_ == null || other.ServicePackageName != "") {
          ServicePackageName = other.ServicePackageName;
        }
      }
      if (other.projectId_ != null) {
        if (projectId_ == null || other.ProjectId != 0) {
          ProjectId = other.ProjectId;
        }
      }
      if (other.projectName_ != null) {
        if (projectName_ == null || other.ProjectName != "") {
          ProjectName = other.ProjectName;
        }
      }
      if (other.updatePerson_ != null) {
        if (updatePerson_ == null || other.UpdatePerson != "") {
          UpdatePerson = other.UpdatePerson;
        }
      }
      if (other.numberOfMonthApplied_ != null) {
        if (numberOfMonthApplied_ == null || other.NumberOfMonthApplied != 0) {
          NumberOfMonthApplied = other.NumberOfMonthApplied;
        }
      }
      if (other.subjectId_ != null) {
        if (subjectId_ == null || other.SubjectId != "") {
          SubjectId = other.SubjectId;
        }
      }
      if (other.IsChange != false) {
        IsChange = other.IsChange;
      }
      if (other.IsActive != false) {
        IsActive = other.IsActive;
      }
      if (other.minPaymentPeriod_ != null) {
        if (minPaymentPeriod_ == null || other.MinPaymentPeriod != 0) {
          MinPaymentPeriod = other.MinPaymentPeriod;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0) {
              Id = value;
            }
            break;
          }
          case 18: {
            int? value = _single_promotionId_codec.Read(input);
            if (promotionId_ == null || value != 0) {
              PromotionId = value;
            }
            break;
          }
          case 26: {
            string value = _single_promotionCode_codec.Read(input);
            if (promotionCode_ == null || value != "") {
              PromotionCode = value;
            }
            break;
          }
          case 34: {
            int? value = _single_promotionValueType_codec.Read(input);
            if (promotionValueType_ == null || value != 0) {
              PromotionValueType = value;
            }
            break;
          }
          case 42: {
            string value = _single_promotionValueTypeString_codec.Read(input);
            if (promotionValueTypeString_ == null || value != "") {
              PromotionValueTypeString = value;
            }
            break;
          }
          case 50: {
            string value = _single_promotionValue_codec.Read(input);
            if (promotionValue_ == null || value != "") {
              PromotionValue = value;
            }
            break;
          }
          case 58: {
            int? value = _single_quantity_codec.Read(input);
            if (quantity_ == null || value != 0) {
              Quantity = value;
            }
            break;
          }
          case 66: {
            int? value = _single_currencyUnitId_codec.Read(input);
            if (currencyUnitId_ == null || value != 0) {
              CurrencyUnitId = value;
            }
            break;
          }
          case 74: {
            string value = _single_currencyUnitCode_codec.Read(input);
            if (currencyUnitCode_ == null || value != "") {
              CurrencyUnitCode = value;
            }
            break;
          }
          case 82: {
            string value = _single_city_codec.Read(input);
            if (city_ == null || value != "") {
              City = value;
            }
            break;
          }
          case 90: {
            string value = _single_cityId_codec.Read(input);
            if (cityId_ == null || value != "") {
              CityId = value;
            }
            break;
          }
          case 98: {
            string value = _single_district_codec.Read(input);
            if (district_ == null || value != "") {
              District = value;
            }
            break;
          }
          case 106: {
            string value = _single_districtId_codec.Read(input);
            if (districtId_ == null || value != "") {
              DistrictId = value;
            }
            break;
          }
          case 114: {
            string value = _single_country_codec.Read(input);
            if (country_ == null || value != "") {
              Country = value;
            }
            break;
          }
          case 122: {
            string value = _single_countryId_codec.Read(input);
            if (countryId_ == null || value != "") {
              CountryId = value;
            }
            break;
          }
          case 130: {
            int? value = _single_serviceId_codec.Read(input);
            if (serviceId_ == null || value != 0) {
              ServiceId = value;
            }
            break;
          }
          case 138: {
            string value = _single_serviceName_codec.Read(input);
            if (serviceName_ == null || value != "") {
              ServiceName = value;
            }
            break;
          }
          case 146: {
            int? value = _single_servicePackageId_codec.Read(input);
            if (servicePackageId_ == null || value != 0) {
              ServicePackageId = value;
            }
            break;
          }
          case 154: {
            string value = _single_servicePackageName_codec.Read(input);
            if (servicePackageName_ == null || value != "") {
              ServicePackageName = value;
            }
            break;
          }
          case 162: {
            int? value = _single_projectId_codec.Read(input);
            if (projectId_ == null || value != 0) {
              ProjectId = value;
            }
            break;
          }
          case 170: {
            string value = _single_projectName_codec.Read(input);
            if (projectName_ == null || value != "") {
              ProjectName = value;
            }
            break;
          }
          case 178: {
            string value = _single_updatePerson_codec.Read(input);
            if (updatePerson_ == null || value != "") {
              UpdatePerson = value;
            }
            break;
          }
          case 186: {
            int? value = _single_numberOfMonthApplied_codec.Read(input);
            if (numberOfMonthApplied_ == null || value != 0) {
              NumberOfMonthApplied = value;
            }
            break;
          }
          case 194: {
            string value = _single_subjectId_codec.Read(input);
            if (subjectId_ == null || value != "") {
              SubjectId = value;
            }
            break;
          }
          case 200: {
            IsChange = input.ReadBool();
            break;
          }
          case 208: {
            IsActive = input.ReadBool();
            break;
          }
          case 218: {
            int? value = _single_minPaymentPeriod_codec.Read(input);
            if (minPaymentPeriod_ == null || value != 0) {
              MinPaymentPeriod = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class PromotionGrpcModel : pb::IMessage<PromotionGrpcModel> {
    private static readonly pb::MessageParser<PromotionGrpcModel> _parser = new pb::MessageParser<PromotionGrpcModel>(() => new PromotionGrpcModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PromotionGrpcModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PromotionGrpcModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PromotionGrpcModel(PromotionGrpcModel other) : this() {
      Id = other.Id;
      PromotionCode = other.PromotionCode;
      PromotionName = other.PromotionName;
      PromotionDetailId = other.PromotionDetailId;
      PromotionType = other.PromotionType;
      PromotionTypeString = other.PromotionTypeString;
      startDate_ = other.startDate_ != null ? other.startDate_.Clone() : null;
      endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
      Description = other.Description;
      ContractId = other.ContractId;
      PromotionValueType = other.PromotionValueType;
      Quantity = other.Quantity;
      NumberOfMonthApplied = other.NumberOfMonthApplied;
      OutContractServicePackageId = other.OutContractServicePackageId;
      PromotionForContractId = other.PromotionForContractId;
      ServiceId = other.ServiceId;
      ServicePackageId = other.ServicePackageId;
      ProjectId = other.ProjectId;
      CityId = other.CityId;
      DistrictId = other.DistrictId;
      promotionDetails_ = other.promotionDetails_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PromotionGrpcModel Clone() {
      return new PromotionGrpcModel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_id_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "promotionCode" field.</summary>
    public const int PromotionCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_promotionCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string promotionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromotionCode {
      get { return promotionCode_; }
      set {
        promotionCode_ = value;
      }
    }


    /// <summary>Field number for the "promotionName" field.</summary>
    public const int PromotionNameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_promotionName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string promotionName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromotionName {
      get { return promotionName_; }
      set {
        promotionName_ = value;
      }
    }


    /// <summary>Field number for the "promotionDetailId" field.</summary>
    public const int PromotionDetailIdFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_promotionDetailId_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string promotionDetailId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromotionDetailId {
      get { return promotionDetailId_; }
      set {
        promotionDetailId_ = value;
      }
    }


    /// <summary>Field number for the "promotionType" field.</summary>
    public const int PromotionTypeFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_promotionType_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? promotionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PromotionType {
      get { return promotionType_; }
      set {
        promotionType_ = value;
      }
    }


    /// <summary>Field number for the "promotionTypeString" field.</summary>
    public const int PromotionTypeStringFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_promotionTypeString_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string promotionTypeString_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PromotionTypeString {
      get { return promotionTypeString_; }
      set {
        promotionTypeString_ = value;
      }
    }


    /// <summary>Field number for the "startDate" field.</summary>
    public const int StartDateFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "endDate" field.</summary>
    public const int EndDateFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "contractId" field.</summary>
    public const int ContractIdFieldNumber = 10;
    private static readonly pb::FieldCodec<int?> _single_contractId_codec = pb::FieldCodec.ForStructWrapper<int>(82);
    private int? contractId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ContractId {
      get { return contractId_; }
      set {
        contractId_ = value;
      }
    }


    /// <summary>Field number for the "promotionValueType" field.</summary>
    public const int PromotionValueTypeFieldNumber = 11;
    private static readonly pb::FieldCodec<int?> _single_promotionValueType_codec = pb::FieldCodec.ForStructWrapper<int>(90);
    private int? promotionValueType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PromotionValueType {
      get { return promotionValueType_; }
      set {
        promotionValueType_ = value;
      }
    }


    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 12;
    private static readonly pb::FieldCodec<int?> _single_quantity_codec = pb::FieldCodec.ForStructWrapper<int>(98);
    private int? quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }


    /// <summary>Field number for the "numberOfMonthApplied" field.</summary>
    public const int NumberOfMonthAppliedFieldNumber = 13;
    private static readonly pb::FieldCodec<int?> _single_numberOfMonthApplied_codec = pb::FieldCodec.ForStructWrapper<int>(106);
    private int? numberOfMonthApplied_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? NumberOfMonthApplied {
      get { return numberOfMonthApplied_; }
      set {
        numberOfMonthApplied_ = value;
      }
    }


    /// <summary>Field number for the "outContractServicePackageId" field.</summary>
    public const int OutContractServicePackageIdFieldNumber = 14;
    private static readonly pb::FieldCodec<int?> _single_outContractServicePackageId_codec = pb::FieldCodec.ForStructWrapper<int>(114);
    private int? outContractServicePackageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? OutContractServicePackageId {
      get { return outContractServicePackageId_; }
      set {
        outContractServicePackageId_ = value;
      }
    }


    /// <summary>Field number for the "promotionForContractId" field.</summary>
    public const int PromotionForContractIdFieldNumber = 15;
    private static readonly pb::FieldCodec<int?> _single_promotionForContractId_codec = pb::FieldCodec.ForStructWrapper<int>(122);
    private int? promotionForContractId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PromotionForContractId {
      get { return promotionForContractId_; }
      set {
        promotionForContractId_ = value;
      }
    }


    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 16;
    private static readonly pb::FieldCodec<int?> _single_serviceId_codec = pb::FieldCodec.ForStructWrapper<int>(130);
    private int? serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }


    /// <summary>Field number for the "servicePackageId" field.</summary>
    public const int ServicePackageIdFieldNumber = 17;
    private static readonly pb::FieldCodec<int?> _single_servicePackageId_codec = pb::FieldCodec.ForStructWrapper<int>(138);
    private int? servicePackageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ServicePackageId {
      get { return servicePackageId_; }
      set {
        servicePackageId_ = value;
      }
    }


    /// <summary>Field number for the "projectId" field.</summary>
    public const int ProjectIdFieldNumber = 18;
    private static readonly pb::FieldCodec<int?> _single_projectId_codec = pb::FieldCodec.ForStructWrapper<int>(146);
    private int? projectId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ProjectId {
      get { return projectId_; }
      set {
        projectId_ = value;
      }
    }


    /// <summary>Field number for the "cityId" field.</summary>
    public const int CityIdFieldNumber = 19;
    private static readonly pb::FieldCodec<int?> _single_cityId_codec = pb::FieldCodec.ForStructWrapper<int>(154);
    private int? cityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? CityId {
      get { return cityId_; }
      set {
        cityId_ = value;
      }
    }


    /// <summary>Field number for the "districtId" field.</summary>
    public const int DistrictIdFieldNumber = 20;
    private static readonly pb::FieldCodec<int?> _single_districtId_codec = pb::FieldCodec.ForStructWrapper<int>(162);
    private int? districtId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? DistrictId {
      get { return districtId_; }
      set {
        districtId_ = value;
      }
    }


    /// <summary>Field number for the "promotionDetails" field.</summary>
    public const int PromotionDetailsFieldNumber = 21;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.PromotionDetailGrpcModel> _repeated_promotionDetails_codec
        = pb::FieldCodec.ForMessage(170, global::ContractManagement.API.Protos.PromotionDetailGrpcModel.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.PromotionDetailGrpcModel> promotionDetails_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.PromotionDetailGrpcModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.PromotionDetailGrpcModel> PromotionDetails {
      get { return promotionDetails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PromotionGrpcModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PromotionGrpcModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PromotionCode != other.PromotionCode) return false;
      if (PromotionName != other.PromotionName) return false;
      if (PromotionDetailId != other.PromotionDetailId) return false;
      if (PromotionType != other.PromotionType) return false;
      if (PromotionTypeString != other.PromotionTypeString) return false;
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      if (Description != other.Description) return false;
      if (ContractId != other.ContractId) return false;
      if (PromotionValueType != other.PromotionValueType) return false;
      if (Quantity != other.Quantity) return false;
      if (NumberOfMonthApplied != other.NumberOfMonthApplied) return false;
      if (OutContractServicePackageId != other.OutContractServicePackageId) return false;
      if (PromotionForContractId != other.PromotionForContractId) return false;
      if (ServiceId != other.ServiceId) return false;
      if (ServicePackageId != other.ServicePackageId) return false;
      if (ProjectId != other.ProjectId) return false;
      if (CityId != other.CityId) return false;
      if (DistrictId != other.DistrictId) return false;
      if(!promotionDetails_.Equals(other.promotionDetails_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (promotionCode_ != null) hash ^= PromotionCode.GetHashCode();
      if (promotionName_ != null) hash ^= PromotionName.GetHashCode();
      if (promotionDetailId_ != null) hash ^= PromotionDetailId.GetHashCode();
      if (promotionType_ != null) hash ^= PromotionType.GetHashCode();
      if (promotionTypeString_ != null) hash ^= PromotionTypeString.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (contractId_ != null) hash ^= ContractId.GetHashCode();
      if (promotionValueType_ != null) hash ^= PromotionValueType.GetHashCode();
      if (quantity_ != null) hash ^= Quantity.GetHashCode();
      if (numberOfMonthApplied_ != null) hash ^= NumberOfMonthApplied.GetHashCode();
      if (outContractServicePackageId_ != null) hash ^= OutContractServicePackageId.GetHashCode();
      if (promotionForContractId_ != null) hash ^= PromotionForContractId.GetHashCode();
      if (serviceId_ != null) hash ^= ServiceId.GetHashCode();
      if (servicePackageId_ != null) hash ^= ServicePackageId.GetHashCode();
      if (projectId_ != null) hash ^= ProjectId.GetHashCode();
      if (cityId_ != null) hash ^= CityId.GetHashCode();
      if (districtId_ != null) hash ^= DistrictId.GetHashCode();
      hash ^= promotionDetails_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (promotionCode_ != null) {
        _single_promotionCode_codec.WriteTagAndValue(output, PromotionCode);
      }
      if (promotionName_ != null) {
        _single_promotionName_codec.WriteTagAndValue(output, PromotionName);
      }
      if (promotionDetailId_ != null) {
        _single_promotionDetailId_codec.WriteTagAndValue(output, PromotionDetailId);
      }
      if (promotionType_ != null) {
        _single_promotionType_codec.WriteTagAndValue(output, PromotionType);
      }
      if (promotionTypeString_ != null) {
        _single_promotionTypeString_codec.WriteTagAndValue(output, PromotionTypeString);
      }
      if (startDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EndDate);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (contractId_ != null) {
        _single_contractId_codec.WriteTagAndValue(output, ContractId);
      }
      if (promotionValueType_ != null) {
        _single_promotionValueType_codec.WriteTagAndValue(output, PromotionValueType);
      }
      if (quantity_ != null) {
        _single_quantity_codec.WriteTagAndValue(output, Quantity);
      }
      if (numberOfMonthApplied_ != null) {
        _single_numberOfMonthApplied_codec.WriteTagAndValue(output, NumberOfMonthApplied);
      }
      if (outContractServicePackageId_ != null) {
        _single_outContractServicePackageId_codec.WriteTagAndValue(output, OutContractServicePackageId);
      }
      if (promotionForContractId_ != null) {
        _single_promotionForContractId_codec.WriteTagAndValue(output, PromotionForContractId);
      }
      if (serviceId_ != null) {
        _single_serviceId_codec.WriteTagAndValue(output, ServiceId);
      }
      if (servicePackageId_ != null) {
        _single_servicePackageId_codec.WriteTagAndValue(output, ServicePackageId);
      }
      if (projectId_ != null) {
        _single_projectId_codec.WriteTagAndValue(output, ProjectId);
      }
      if (cityId_ != null) {
        _single_cityId_codec.WriteTagAndValue(output, CityId);
      }
      if (districtId_ != null) {
        _single_districtId_codec.WriteTagAndValue(output, DistrictId);
      }
      promotionDetails_.WriteTo(output, _repeated_promotionDetails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (promotionCode_ != null) {
        size += _single_promotionCode_codec.CalculateSizeWithTag(PromotionCode);
      }
      if (promotionName_ != null) {
        size += _single_promotionName_codec.CalculateSizeWithTag(PromotionName);
      }
      if (promotionDetailId_ != null) {
        size += _single_promotionDetailId_codec.CalculateSizeWithTag(PromotionDetailId);
      }
      if (promotionType_ != null) {
        size += _single_promotionType_codec.CalculateSizeWithTag(PromotionType);
      }
      if (promotionTypeString_ != null) {
        size += _single_promotionTypeString_codec.CalculateSizeWithTag(PromotionTypeString);
      }
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (contractId_ != null) {
        size += _single_contractId_codec.CalculateSizeWithTag(ContractId);
      }
      if (promotionValueType_ != null) {
        size += _single_promotionValueType_codec.CalculateSizeWithTag(PromotionValueType);
      }
      if (quantity_ != null) {
        size += _single_quantity_codec.CalculateSizeWithTag(Quantity);
      }
      if (numberOfMonthApplied_ != null) {
        size += _single_numberOfMonthApplied_codec.CalculateSizeWithTag(NumberOfMonthApplied);
      }
      if (outContractServicePackageId_ != null) {
        size += _single_outContractServicePackageId_codec.CalculateSizeWithTag(OutContractServicePackageId);
      }
      if (promotionForContractId_ != null) {
        size += _single_promotionForContractId_codec.CalculateSizeWithTag(PromotionForContractId);
      }
      if (serviceId_ != null) {
        size += _single_serviceId_codec.CalculateSizeWithTag(ServiceId);
      }
      if (servicePackageId_ != null) {
        size += _single_servicePackageId_codec.CalculateSizeWithTag(ServicePackageId);
      }
      if (projectId_ != null) {
        size += _single_projectId_codec.CalculateSizeWithTag(ProjectId);
      }
      if (cityId_ != null) {
        size += _single_cityId_codec.CalculateSizeWithTag(CityId);
      }
      if (districtId_ != null) {
        size += _single_districtId_codec.CalculateSizeWithTag(DistrictId);
      }
      size += promotionDetails_.CalculateSize(_repeated_promotionDetails_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PromotionGrpcModel other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0) {
          Id = other.Id;
        }
      }
      if (other.promotionCode_ != null) {
        if (promotionCode_ == null || other.PromotionCode != "") {
          PromotionCode = other.PromotionCode;
        }
      }
      if (other.promotionName_ != null) {
        if (promotionName_ == null || other.PromotionName != "") {
          PromotionName = other.PromotionName;
        }
      }
      if (other.promotionDetailId_ != null) {
        if (promotionDetailId_ == null || other.PromotionDetailId != "") {
          PromotionDetailId = other.PromotionDetailId;
        }
      }
      if (other.promotionType_ != null) {
        if (promotionType_ == null || other.PromotionType != 0) {
          PromotionType = other.PromotionType;
        }
      }
      if (other.promotionTypeString_ != null) {
        if (promotionTypeString_ == null || other.PromotionTypeString != "") {
          PromotionTypeString = other.PromotionTypeString;
        }
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          StartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.contractId_ != null) {
        if (contractId_ == null || other.ContractId != 0) {
          ContractId = other.ContractId;
        }
      }
      if (other.promotionValueType_ != null) {
        if (promotionValueType_ == null || other.PromotionValueType != 0) {
          PromotionValueType = other.PromotionValueType;
        }
      }
      if (other.quantity_ != null) {
        if (quantity_ == null || other.Quantity != 0) {
          Quantity = other.Quantity;
        }
      }
      if (other.numberOfMonthApplied_ != null) {
        if (numberOfMonthApplied_ == null || other.NumberOfMonthApplied != 0) {
          NumberOfMonthApplied = other.NumberOfMonthApplied;
        }
      }
      if (other.outContractServicePackageId_ != null) {
        if (outContractServicePackageId_ == null || other.OutContractServicePackageId != 0) {
          OutContractServicePackageId = other.OutContractServicePackageId;
        }
      }
      if (other.promotionForContractId_ != null) {
        if (promotionForContractId_ == null || other.PromotionForContractId != 0) {
          PromotionForContractId = other.PromotionForContractId;
        }
      }
      if (other.serviceId_ != null) {
        if (serviceId_ == null || other.ServiceId != 0) {
          ServiceId = other.ServiceId;
        }
      }
      if (other.servicePackageId_ != null) {
        if (servicePackageId_ == null || other.ServicePackageId != 0) {
          ServicePackageId = other.ServicePackageId;
        }
      }
      if (other.projectId_ != null) {
        if (projectId_ == null || other.ProjectId != 0) {
          ProjectId = other.ProjectId;
        }
      }
      if (other.cityId_ != null) {
        if (cityId_ == null || other.CityId != 0) {
          CityId = other.CityId;
        }
      }
      if (other.districtId_ != null) {
        if (districtId_ == null || other.DistrictId != 0) {
          DistrictId = other.DistrictId;
        }
      }
      promotionDetails_.Add(other.promotionDetails_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0) {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_promotionCode_codec.Read(input);
            if (promotionCode_ == null || value != "") {
              PromotionCode = value;
            }
            break;
          }
          case 26: {
            string value = _single_promotionName_codec.Read(input);
            if (promotionName_ == null || value != "") {
              PromotionName = value;
            }
            break;
          }
          case 34: {
            string value = _single_promotionDetailId_codec.Read(input);
            if (promotionDetailId_ == null || value != "") {
              PromotionDetailId = value;
            }
            break;
          }
          case 42: {
            int? value = _single_promotionType_codec.Read(input);
            if (promotionType_ == null || value != 0) {
              PromotionType = value;
            }
            break;
          }
          case 50: {
            string value = _single_promotionTypeString_codec.Read(input);
            if (promotionTypeString_ == null || value != "") {
              PromotionTypeString = value;
            }
            break;
          }
          case 58: {
            if (startDate_ == null) {
              StartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 66: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 74: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 82: {
            int? value = _single_contractId_codec.Read(input);
            if (contractId_ == null || value != 0) {
              ContractId = value;
            }
            break;
          }
          case 90: {
            int? value = _single_promotionValueType_codec.Read(input);
            if (promotionValueType_ == null || value != 0) {
              PromotionValueType = value;
            }
            break;
          }
          case 98: {
            int? value = _single_quantity_codec.Read(input);
            if (quantity_ == null || value != 0) {
              Quantity = value;
            }
            break;
          }
          case 106: {
            int? value = _single_numberOfMonthApplied_codec.Read(input);
            if (numberOfMonthApplied_ == null || value != 0) {
              NumberOfMonthApplied = value;
            }
            break;
          }
          case 114: {
            int? value = _single_outContractServicePackageId_codec.Read(input);
            if (outContractServicePackageId_ == null || value != 0) {
              OutContractServicePackageId = value;
            }
            break;
          }
          case 122: {
            int? value = _single_promotionForContractId_codec.Read(input);
            if (promotionForContractId_ == null || value != 0) {
              PromotionForContractId = value;
            }
            break;
          }
          case 130: {
            int? value = _single_serviceId_codec.Read(input);
            if (serviceId_ == null || value != 0) {
              ServiceId = value;
            }
            break;
          }
          case 138: {
            int? value = _single_servicePackageId_codec.Read(input);
            if (servicePackageId_ == null || value != 0) {
              ServicePackageId = value;
            }
            break;
          }
          case 146: {
            int? value = _single_projectId_codec.Read(input);
            if (projectId_ == null || value != 0) {
              ProjectId = value;
            }
            break;
          }
          case 154: {
            int? value = _single_cityId_codec.Read(input);
            if (cityId_ == null || value != 0) {
              CityId = value;
            }
            break;
          }
          case 162: {
            int? value = _single_districtId_codec.Read(input);
            if (districtId_ == null || value != 0) {
              DistrictId = value;
            }
            break;
          }
          case 170: {
            promotionDetails_.AddEntriesFrom(input, _repeated_promotionDetails_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailabelPromotionResponse : pb::IMessage<AvailabelPromotionResponse> {
    private static readonly pb::MessageParser<AvailabelPromotionResponse> _parser = new pb::MessageParser<AvailabelPromotionResponse>(() => new AvailabelPromotionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailabelPromotionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.OutcontractsReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailabelPromotionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailabelPromotionResponse(AvailabelPromotionResponse other) : this() {
      promotionGrpcModels_ = other.promotionGrpcModels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailabelPromotionResponse Clone() {
      return new AvailabelPromotionResponse(this);
    }

    /// <summary>Field number for the "promotionGrpcModels" field.</summary>
    public const int PromotionGrpcModelsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.PromotionGrpcModel> _repeated_promotionGrpcModels_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.PromotionGrpcModel.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.PromotionGrpcModel> promotionGrpcModels_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.PromotionGrpcModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.PromotionGrpcModel> PromotionGrpcModels {
      get { return promotionGrpcModels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailabelPromotionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailabelPromotionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!promotionGrpcModels_.Equals(other.promotionGrpcModels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= promotionGrpcModels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      promotionGrpcModels_.WriteTo(output, _repeated_promotionGrpcModels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += promotionGrpcModels_.CalculateSize(_repeated_promotionGrpcModels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailabelPromotionResponse other) {
      if (other == null) {
        return;
      }
      promotionGrpcModels_.Add(other.promotionGrpcModels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            promotionGrpcModels_.AddEntriesFrom(input, _repeated_promotionGrpcModels_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
