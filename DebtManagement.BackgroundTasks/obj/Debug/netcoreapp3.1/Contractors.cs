// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/contractors.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ContractManagement.API.Protos {

  /// <summary>Holder for reflection information generated from Protos/contractors.proto</summary>
  public static partial class ContractorsReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/contractors.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContractorsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQcm90b3MvY29udHJhY3RvcnMucHJvdG8SFUNvbnRyYWN0TWFuYWdlbWVu",
            "dEFwaRoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9nb29nbGUv",
            "cHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1w",
            "dHkucHJvdG8iqgMKJVJlcXVlc3RHZXRDb250cmFjdG9yc0J5UHJvamVjdElk",
            "c0dycGMSLQoHb3JkZXJCeRgBIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJp",
            "bmdWYWx1ZRIpCgNkaXIYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5n",
            "VmFsdWUSKQoEc2tpcBgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlEikKBHRha2UYBCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1",
            "ZRItCgdmaWx0ZXJzGAUgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1Zh",
            "bHVlEg4KBnBhZ2luZxgGIAEoCBIuCghrZXl3b3JkcxgHIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIwCgpwcm9qZWN0SWRzGAggASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjAKCnNlcnZpY2VJZHMYCSAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUikAEKJ1JlcXVlc3RH",
            "ZXRCeU1hcmtldEFyZWFJZHNQcm9qZWN0SWRzR3JwYxIzCg1tYXJrZXRBcmVh",
            "SWRzGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjAKCnBy",
            "b2plY3RJZHMYAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUi",
            "kwMKGUNvbnRyYWN0b3JQYWdlTGlzdEdycGNEVE8SOAoGc3Vic2V0GAEgAygL",
            "MiguQ29udHJhY3RNYW5hZ2VtZW50QXBpLkNvbnRyYWN0b3JHcnBjRFRPEioK",
            "BWNvdW50GAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSLgoJ",
            "cGFnZUNvdW50GAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUS",
            "MwoOdG90YWxJdGVtQ291bnQYBCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50",
            "MzJWYWx1ZRIpCgRza2lwGAUgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMy",
            "VmFsdWUSKQoEdGFrZRgGIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlEhcKD2hhc1ByZXZpb3VzUGFnZRgHIAEoCBITCgtoYXNOZXh0UGFnZRgI",
            "IAEoCBITCgtpc0ZpcnN0UGFnZRgJIAEoCBISCgppc0xhc3RQYWdlGAogASgI",
            "IvUIChFDb250cmFjdG9yR3JwY0RUTxIyCgxpZGVudGl0eUd1aWQYASABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSOAoSY29udHJhY3RvckZ1",
            "bGxOYW1lGAIgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjQK",
            "DmNvbnRyYWN0b3JDb2RlGAMgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEjUKD2NvbnRyYWN0b3JQaG9uZRgEIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRI1Cg9jb250cmFjdG9yRW1haWwYBSABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMwoNY29udHJhY3RvckZheBgG",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI3ChFjb250cmFj",
            "dG9yQWRkcmVzcxgHIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRI0Cg5jb250cmFjdG9ySWRObxgIIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRI3ChFjb250cmFjdG9yVGF4SWRObxgJIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIUCgxpc0VudGVycHJpc2UYCiABKAgS",
            "DwoHaXNCdXllchgLIAEoCBIKCgJpZBgMIAEoBRIzCg1jb250cmFjdENvZGVz",
            "GA0gAygLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjgKEmNvbnRy",
            "YWN0b3JVc2VyTmFtZRgOIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRJBChthcHBsaWNhdGlvblVzZXJJZGVudGl0eUd1aWQYDyABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSPAoWYWNjb3VudGluZ0N1c3Rv",
            "bWVyQ29kZRgQIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIv",
            "Cglpc1BhcnRuZXIYESABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSOQoTY29udHJhY3RvclNob3J0TmFtZRgSIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRI0Cg5jb250cmFjdG9yQ2l0eRgTIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI2ChBjb250cmFjdG9yQ2l0eUlk",
            "GBQgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjgKEmNvbnRy",
            "YWN0b3JEaXN0cmljdBgVIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRI6ChRjb250cmFjdG9yRGlzdHJpY3RJZBgWIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZSJWChVMaXN0Q29udHJhY3RvckdycGNEVE8S",
            "PQoLY29udHJhY3RvcnMYASADKAsyKC5Db250cmFjdE1hbmFnZW1lbnRBcGku",
            "Q29udHJhY3RvckdycGNEVE8yxwUKDkNvbnRyYWN0b3JHcnBjElQKCEZpbmRC",
            "eUlkEhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlGiguQ29udHJhY3RN",
            "YW5hZ2VtZW50QXBpLkNvbnRyYWN0b3JHcnBjRFRPIgASWwoLR2V0QWxsQnlJ",
            "ZHMSHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaLC5Db250cmFjdE1h",
            "bmFnZW1lbnRBcGkuTGlzdENvbnRyYWN0b3JHcnBjRFRPIgASWAoJR2V0RnJv",
            "bUlkEhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUaLC5Db250cmFjdE1h",
            "bmFnZW1lbnRBcGkuTGlzdENvbnRyYWN0b3JHcnBjRFRPIgASggEKDkdldENv",
            "bnRyYWN0b3JzEjwuQ29udHJhY3RNYW5hZ2VtZW50QXBpLlJlcXVlc3RHZXRD",
            "b250cmFjdG9yc0J5UHJvamVjdElkc0dycGMaMC5Db250cmFjdE1hbmFnZW1l",
            "bnRBcGkuQ29udHJhY3RvclBhZ2VMaXN0R3JwY0RUTyIAEo0BChlHZXRMaXN0",
            "QnlQcm9qZWN0SWRzRm9yQXBwEjwuQ29udHJhY3RNYW5hZ2VtZW50QXBpLlJl",
            "cXVlc3RHZXRDb250cmFjdG9yc0J5UHJvamVjdElkc0dycGMaMC5Db250cmFj",
            "dE1hbmFnZW1lbnRBcGkuQ29udHJhY3RvclBhZ2VMaXN0R3JwY0RUTyIAEpIB",
            "ChxHZXRCeU1hcmtldEFyZWFJZHNQcm9qZWN0SWRzEj4uQ29udHJhY3RNYW5h",
            "Z2VtZW50QXBpLlJlcXVlc3RHZXRCeU1hcmtldEFyZWFJZHNQcm9qZWN0SWRz",
            "R3JwYxowLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Db250cmFjdG9yUGFnZUxp",
            "c3RHcnBjRFRPIgBCIKoCHUNvbnRyYWN0TWFuYWdlbWVudC5BUEkuUHJvdG9z",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.RequestGetContractorsByProjectIdsGrpc), global::ContractManagement.API.Protos.RequestGetContractorsByProjectIdsGrpc.Parser, new[]{ "OrderBy", "Dir", "Skip", "Take", "Filters", "Paging", "Keywords", "ProjectIds", "ServiceIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.RequestGetByMarketAreaIdsProjectIdsGrpc), global::ContractManagement.API.Protos.RequestGetByMarketAreaIdsProjectIdsGrpc.Parser, new[]{ "MarketAreaIds", "ProjectIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ContractorPageListGrpcDTO), global::ContractManagement.API.Protos.ContractorPageListGrpcDTO.Parser, new[]{ "Subset", "Count", "PageCount", "TotalItemCount", "Skip", "Take", "HasPreviousPage", "HasNextPage", "IsFirstPage", "IsLastPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ContractorGrpcDTO), global::ContractManagement.API.Protos.ContractorGrpcDTO.Parser, new[]{ "IdentityGuid", "ContractorFullName", "ContractorCode", "ContractorPhone", "ContractorEmail", "ContractorFax", "ContractorAddress", "ContractorIdNo", "ContractorTaxIdNo", "IsEnterprise", "IsBuyer", "Id", "ContractCodes", "ContractorUserName", "ApplicationUserIdentityGuid", "AccountingCustomerCode", "IsPartner", "ContractorShortName", "ContractorCity", "ContractorCityId", "ContractorDistrict", "ContractorDistrictId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ListContractorGrpcDTO), global::ContractManagement.API.Protos.ListContractorGrpcDTO.Parser, new[]{ "Contractors" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RequestGetContractorsByProjectIdsGrpc : pb::IMessage<RequestGetContractorsByProjectIdsGrpc> {
    private static readonly pb::MessageParser<RequestGetContractorsByProjectIdsGrpc> _parser = new pb::MessageParser<RequestGetContractorsByProjectIdsGrpc>(() => new RequestGetContractorsByProjectIdsGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestGetContractorsByProjectIdsGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ContractorsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetContractorsByProjectIdsGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetContractorsByProjectIdsGrpc(RequestGetContractorsByProjectIdsGrpc other) : this() {
      OrderBy = other.OrderBy;
      Dir = other.Dir;
      Skip = other.Skip;
      Take = other.Take;
      Filters = other.Filters;
      paging_ = other.paging_;
      Keywords = other.Keywords;
      ProjectIds = other.ProjectIds;
      ServiceIds = other.ServiceIds;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetContractorsByProjectIdsGrpc Clone() {
      return new RequestGetContractorsByProjectIdsGrpc(this);
    }

    /// <summary>Field number for the "orderBy" field.</summary>
    public const int OrderByFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_orderBy_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string orderBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = value;
      }
    }


    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_dir_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_filters_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string filters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }


    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 6;
    private bool paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "keywords" field.</summary>
    public const int KeywordsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_keywords_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string keywords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Keywords {
      get { return keywords_; }
      set {
        keywords_ = value;
      }
    }


    /// <summary>Field number for the "projectIds" field.</summary>
    public const int ProjectIdsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_projectIds_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string projectIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectIds {
      get { return projectIds_; }
      set {
        projectIds_ = value;
      }
    }


    /// <summary>Field number for the "serviceIds" field.</summary>
    public const int ServiceIdsFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_serviceIds_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string serviceIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceIds {
      get { return serviceIds_; }
      set {
        serviceIds_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestGetContractorsByProjectIdsGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestGetContractorsByProjectIdsGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderBy != other.OrderBy) return false;
      if (Dir != other.Dir) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (Filters != other.Filters) return false;
      if (Paging != other.Paging) return false;
      if (Keywords != other.Keywords) return false;
      if (ProjectIds != other.ProjectIds) return false;
      if (ServiceIds != other.ServiceIds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (orderBy_ != null) hash ^= OrderBy.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (filters_ != null) hash ^= Filters.GetHashCode();
      if (Paging != false) hash ^= Paging.GetHashCode();
      if (keywords_ != null) hash ^= Keywords.GetHashCode();
      if (projectIds_ != null) hash ^= ProjectIds.GetHashCode();
      if (serviceIds_ != null) hash ^= ServiceIds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (orderBy_ != null) {
        _single_orderBy_codec.WriteTagAndValue(output, OrderBy);
      }
      if (dir_ != null) {
        _single_dir_codec.WriteTagAndValue(output, Dir);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (filters_ != null) {
        _single_filters_codec.WriteTagAndValue(output, Filters);
      }
      if (Paging != false) {
        output.WriteRawTag(48);
        output.WriteBool(Paging);
      }
      if (keywords_ != null) {
        _single_keywords_codec.WriteTagAndValue(output, Keywords);
      }
      if (projectIds_ != null) {
        _single_projectIds_codec.WriteTagAndValue(output, ProjectIds);
      }
      if (serviceIds_ != null) {
        _single_serviceIds_codec.WriteTagAndValue(output, ServiceIds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (orderBy_ != null) {
        size += _single_orderBy_codec.CalculateSizeWithTag(OrderBy);
      }
      if (dir_ != null) {
        size += _single_dir_codec.CalculateSizeWithTag(Dir);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (filters_ != null) {
        size += _single_filters_codec.CalculateSizeWithTag(Filters);
      }
      if (Paging != false) {
        size += 1 + 1;
      }
      if (keywords_ != null) {
        size += _single_keywords_codec.CalculateSizeWithTag(Keywords);
      }
      if (projectIds_ != null) {
        size += _single_projectIds_codec.CalculateSizeWithTag(ProjectIds);
      }
      if (serviceIds_ != null) {
        size += _single_serviceIds_codec.CalculateSizeWithTag(ServiceIds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestGetContractorsByProjectIdsGrpc other) {
      if (other == null) {
        return;
      }
      if (other.orderBy_ != null) {
        if (orderBy_ == null || other.OrderBy != "") {
          OrderBy = other.OrderBy;
        }
      }
      if (other.dir_ != null) {
        if (dir_ == null || other.Dir != "") {
          Dir = other.Dir;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.filters_ != null) {
        if (filters_ == null || other.Filters != "") {
          Filters = other.Filters;
        }
      }
      if (other.Paging != false) {
        Paging = other.Paging;
      }
      if (other.keywords_ != null) {
        if (keywords_ == null || other.Keywords != "") {
          Keywords = other.Keywords;
        }
      }
      if (other.projectIds_ != null) {
        if (projectIds_ == null || other.ProjectIds != "") {
          ProjectIds = other.ProjectIds;
        }
      }
      if (other.serviceIds_ != null) {
        if (serviceIds_ == null || other.ServiceIds != "") {
          ServiceIds = other.ServiceIds;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_orderBy_codec.Read(input);
            if (orderBy_ == null || value != "") {
              OrderBy = value;
            }
            break;
          }
          case 18: {
            string value = _single_dir_codec.Read(input);
            if (dir_ == null || value != "") {
              Dir = value;
            }
            break;
          }
          case 26: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 34: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 42: {
            string value = _single_filters_codec.Read(input);
            if (filters_ == null || value != "") {
              Filters = value;
            }
            break;
          }
          case 48: {
            Paging = input.ReadBool();
            break;
          }
          case 58: {
            string value = _single_keywords_codec.Read(input);
            if (keywords_ == null || value != "") {
              Keywords = value;
            }
            break;
          }
          case 66: {
            string value = _single_projectIds_codec.Read(input);
            if (projectIds_ == null || value != "") {
              ProjectIds = value;
            }
            break;
          }
          case 74: {
            string value = _single_serviceIds_codec.Read(input);
            if (serviceIds_ == null || value != "") {
              ServiceIds = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequestGetByMarketAreaIdsProjectIdsGrpc : pb::IMessage<RequestGetByMarketAreaIdsProjectIdsGrpc> {
    private static readonly pb::MessageParser<RequestGetByMarketAreaIdsProjectIdsGrpc> _parser = new pb::MessageParser<RequestGetByMarketAreaIdsProjectIdsGrpc>(() => new RequestGetByMarketAreaIdsProjectIdsGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestGetByMarketAreaIdsProjectIdsGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ContractorsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetByMarketAreaIdsProjectIdsGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetByMarketAreaIdsProjectIdsGrpc(RequestGetByMarketAreaIdsProjectIdsGrpc other) : this() {
      MarketAreaIds = other.MarketAreaIds;
      ProjectIds = other.ProjectIds;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestGetByMarketAreaIdsProjectIdsGrpc Clone() {
      return new RequestGetByMarketAreaIdsProjectIdsGrpc(this);
    }

    /// <summary>Field number for the "marketAreaIds" field.</summary>
    public const int MarketAreaIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_marketAreaIds_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string marketAreaIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketAreaIds {
      get { return marketAreaIds_; }
      set {
        marketAreaIds_ = value;
      }
    }


    /// <summary>Field number for the "projectIds" field.</summary>
    public const int ProjectIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_projectIds_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string projectIds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectIds {
      get { return projectIds_; }
      set {
        projectIds_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestGetByMarketAreaIdsProjectIdsGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestGetByMarketAreaIdsProjectIdsGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketAreaIds != other.MarketAreaIds) return false;
      if (ProjectIds != other.ProjectIds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (marketAreaIds_ != null) hash ^= MarketAreaIds.GetHashCode();
      if (projectIds_ != null) hash ^= ProjectIds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (marketAreaIds_ != null) {
        _single_marketAreaIds_codec.WriteTagAndValue(output, MarketAreaIds);
      }
      if (projectIds_ != null) {
        _single_projectIds_codec.WriteTagAndValue(output, ProjectIds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (marketAreaIds_ != null) {
        size += _single_marketAreaIds_codec.CalculateSizeWithTag(MarketAreaIds);
      }
      if (projectIds_ != null) {
        size += _single_projectIds_codec.CalculateSizeWithTag(ProjectIds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestGetByMarketAreaIdsProjectIdsGrpc other) {
      if (other == null) {
        return;
      }
      if (other.marketAreaIds_ != null) {
        if (marketAreaIds_ == null || other.MarketAreaIds != "") {
          MarketAreaIds = other.MarketAreaIds;
        }
      }
      if (other.projectIds_ != null) {
        if (projectIds_ == null || other.ProjectIds != "") {
          ProjectIds = other.ProjectIds;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_marketAreaIds_codec.Read(input);
            if (marketAreaIds_ == null || value != "") {
              MarketAreaIds = value;
            }
            break;
          }
          case 18: {
            string value = _single_projectIds_codec.Read(input);
            if (projectIds_ == null || value != "") {
              ProjectIds = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractorPageListGrpcDTO : pb::IMessage<ContractorPageListGrpcDTO> {
    private static readonly pb::MessageParser<ContractorPageListGrpcDTO> _parser = new pb::MessageParser<ContractorPageListGrpcDTO>(() => new ContractorPageListGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractorPageListGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ContractorsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractorPageListGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractorPageListGrpcDTO(ContractorPageListGrpcDTO other) : this() {
      subset_ = other.subset_.Clone();
      Count = other.Count;
      PageCount = other.PageCount;
      TotalItemCount = other.TotalItemCount;
      Skip = other.Skip;
      Take = other.Take;
      hasPreviousPage_ = other.hasPreviousPage_;
      hasNextPage_ = other.hasNextPage_;
      isFirstPage_ = other.isFirstPage_;
      isLastPage_ = other.isLastPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractorPageListGrpcDTO Clone() {
      return new ContractorPageListGrpcDTO(this);
    }

    /// <summary>Field number for the "subset" field.</summary>
    public const int SubsetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ContractorGrpcDTO> _repeated_subset_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.ContractorGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ContractorGrpcDTO> subset_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ContractorGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ContractorGrpcDTO> Subset {
      get { return subset_; }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_count_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }


    /// <summary>Field number for the "pageCount" field.</summary>
    public const int PageCountFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_pageCount_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? pageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PageCount {
      get { return pageCount_; }
      set {
        pageCount_ = value;
      }
    }


    /// <summary>Field number for the "totalItemCount" field.</summary>
    public const int TotalItemCountFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_totalItemCount_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? totalItemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TotalItemCount {
      get { return totalItemCount_; }
      set {
        totalItemCount_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "hasPreviousPage" field.</summary>
    public const int HasPreviousPageFieldNumber = 7;
    private bool hasPreviousPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreviousPage {
      get { return hasPreviousPage_; }
      set {
        hasPreviousPage_ = value;
      }
    }

    /// <summary>Field number for the "hasNextPage" field.</summary>
    public const int HasNextPageFieldNumber = 8;
    private bool hasNextPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPage {
      get { return hasNextPage_; }
      set {
        hasNextPage_ = value;
      }
    }

    /// <summary>Field number for the "isFirstPage" field.</summary>
    public const int IsFirstPageFieldNumber = 9;
    private bool isFirstPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirstPage {
      get { return isFirstPage_; }
      set {
        isFirstPage_ = value;
      }
    }

    /// <summary>Field number for the "isLastPage" field.</summary>
    public const int IsLastPageFieldNumber = 10;
    private bool isLastPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastPage {
      get { return isLastPage_; }
      set {
        isLastPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractorPageListGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractorPageListGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subset_.Equals(other.subset_)) return false;
      if (Count != other.Count) return false;
      if (PageCount != other.PageCount) return false;
      if (TotalItemCount != other.TotalItemCount) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (HasPreviousPage != other.HasPreviousPage) return false;
      if (HasNextPage != other.HasNextPage) return false;
      if (IsFirstPage != other.IsFirstPage) return false;
      if (IsLastPage != other.IsLastPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subset_.GetHashCode();
      if (count_ != null) hash ^= Count.GetHashCode();
      if (pageCount_ != null) hash ^= PageCount.GetHashCode();
      if (totalItemCount_ != null) hash ^= TotalItemCount.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (HasPreviousPage != false) hash ^= HasPreviousPage.GetHashCode();
      if (HasNextPage != false) hash ^= HasNextPage.GetHashCode();
      if (IsFirstPage != false) hash ^= IsFirstPage.GetHashCode();
      if (IsLastPage != false) hash ^= IsLastPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subset_.WriteTo(output, _repeated_subset_codec);
      if (count_ != null) {
        _single_count_codec.WriteTagAndValue(output, Count);
      }
      if (pageCount_ != null) {
        _single_pageCount_codec.WriteTagAndValue(output, PageCount);
      }
      if (totalItemCount_ != null) {
        _single_totalItemCount_codec.WriteTagAndValue(output, TotalItemCount);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (HasPreviousPage != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasPreviousPage);
      }
      if (HasNextPage != false) {
        output.WriteRawTag(64);
        output.WriteBool(HasNextPage);
      }
      if (IsFirstPage != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsFirstPage);
      }
      if (IsLastPage != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsLastPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subset_.CalculateSize(_repeated_subset_codec);
      if (count_ != null) {
        size += _single_count_codec.CalculateSizeWithTag(Count);
      }
      if (pageCount_ != null) {
        size += _single_pageCount_codec.CalculateSizeWithTag(PageCount);
      }
      if (totalItemCount_ != null) {
        size += _single_totalItemCount_codec.CalculateSizeWithTag(TotalItemCount);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (HasPreviousPage != false) {
        size += 1 + 1;
      }
      if (HasNextPage != false) {
        size += 1 + 1;
      }
      if (IsFirstPage != false) {
        size += 1 + 1;
      }
      if (IsLastPage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractorPageListGrpcDTO other) {
      if (other == null) {
        return;
      }
      subset_.Add(other.subset_);
      if (other.count_ != null) {
        if (count_ == null || other.Count != 0) {
          Count = other.Count;
        }
      }
      if (other.pageCount_ != null) {
        if (pageCount_ == null || other.PageCount != 0) {
          PageCount = other.PageCount;
        }
      }
      if (other.totalItemCount_ != null) {
        if (totalItemCount_ == null || other.TotalItemCount != 0) {
          TotalItemCount = other.TotalItemCount;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.HasPreviousPage != false) {
        HasPreviousPage = other.HasPreviousPage;
      }
      if (other.HasNextPage != false) {
        HasNextPage = other.HasNextPage;
      }
      if (other.IsFirstPage != false) {
        IsFirstPage = other.IsFirstPage;
      }
      if (other.IsLastPage != false) {
        IsLastPage = other.IsLastPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subset_.AddEntriesFrom(input, _repeated_subset_codec);
            break;
          }
          case 18: {
            int? value = _single_count_codec.Read(input);
            if (count_ == null || value != 0) {
              Count = value;
            }
            break;
          }
          case 26: {
            int? value = _single_pageCount_codec.Read(input);
            if (pageCount_ == null || value != 0) {
              PageCount = value;
            }
            break;
          }
          case 34: {
            int? value = _single_totalItemCount_codec.Read(input);
            if (totalItemCount_ == null || value != 0) {
              TotalItemCount = value;
            }
            break;
          }
          case 42: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 50: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 56: {
            HasPreviousPage = input.ReadBool();
            break;
          }
          case 64: {
            HasNextPage = input.ReadBool();
            break;
          }
          case 72: {
            IsFirstPage = input.ReadBool();
            break;
          }
          case 80: {
            IsLastPage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractorGrpcDTO : pb::IMessage<ContractorGrpcDTO> {
    private static readonly pb::MessageParser<ContractorGrpcDTO> _parser = new pb::MessageParser<ContractorGrpcDTO>(() => new ContractorGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractorGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ContractorsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractorGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractorGrpcDTO(ContractorGrpcDTO other) : this() {
      IdentityGuid = other.IdentityGuid;
      ContractorFullName = other.ContractorFullName;
      ContractorCode = other.ContractorCode;
      ContractorPhone = other.ContractorPhone;
      ContractorEmail = other.ContractorEmail;
      ContractorFax = other.ContractorFax;
      ContractorAddress = other.ContractorAddress;
      ContractorIdNo = other.ContractorIdNo;
      ContractorTaxIdNo = other.ContractorTaxIdNo;
      isEnterprise_ = other.isEnterprise_;
      isBuyer_ = other.isBuyer_;
      id_ = other.id_;
      contractCodes_ = other.contractCodes_.Clone();
      ContractorUserName = other.ContractorUserName;
      ApplicationUserIdentityGuid = other.ApplicationUserIdentityGuid;
      AccountingCustomerCode = other.AccountingCustomerCode;
      IsPartner = other.IsPartner;
      ContractorShortName = other.ContractorShortName;
      ContractorCity = other.ContractorCity;
      ContractorCityId = other.ContractorCityId;
      ContractorDistrict = other.ContractorDistrict;
      ContractorDistrictId = other.ContractorDistrictId;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractorGrpcDTO Clone() {
      return new ContractorGrpcDTO(this);
    }

    /// <summary>Field number for the "identityGuid" field.</summary>
    public const int IdentityGuidFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_identityGuid_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string identityGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdentityGuid {
      get { return identityGuid_; }
      set {
        identityGuid_ = value;
      }
    }


    /// <summary>Field number for the "contractorFullName" field.</summary>
    public const int ContractorFullNameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_contractorFullName_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string contractorFullName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorFullName {
      get { return contractorFullName_; }
      set {
        contractorFullName_ = value;
      }
    }


    /// <summary>Field number for the "contractorCode" field.</summary>
    public const int ContractorCodeFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_contractorCode_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string contractorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorCode {
      get { return contractorCode_; }
      set {
        contractorCode_ = value;
      }
    }


    /// <summary>Field number for the "contractorPhone" field.</summary>
    public const int ContractorPhoneFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_contractorPhone_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string contractorPhone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorPhone {
      get { return contractorPhone_; }
      set {
        contractorPhone_ = value;
      }
    }


    /// <summary>Field number for the "contractorEmail" field.</summary>
    public const int ContractorEmailFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_contractorEmail_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string contractorEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorEmail {
      get { return contractorEmail_; }
      set {
        contractorEmail_ = value;
      }
    }


    /// <summary>Field number for the "contractorFax" field.</summary>
    public const int ContractorFaxFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_contractorFax_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string contractorFax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorFax {
      get { return contractorFax_; }
      set {
        contractorFax_ = value;
      }
    }


    /// <summary>Field number for the "contractorAddress" field.</summary>
    public const int ContractorAddressFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_contractorAddress_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string contractorAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorAddress {
      get { return contractorAddress_; }
      set {
        contractorAddress_ = value;
      }
    }


    /// <summary>Field number for the "contractorIdNo" field.</summary>
    public const int ContractorIdNoFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_contractorIdNo_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string contractorIdNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorIdNo {
      get { return contractorIdNo_; }
      set {
        contractorIdNo_ = value;
      }
    }


    /// <summary>Field number for the "contractorTaxIdNo" field.</summary>
    public const int ContractorTaxIdNoFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_contractorTaxIdNo_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string contractorTaxIdNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorTaxIdNo {
      get { return contractorTaxIdNo_; }
      set {
        contractorTaxIdNo_ = value;
      }
    }


    /// <summary>Field number for the "isEnterprise" field.</summary>
    public const int IsEnterpriseFieldNumber = 10;
    private bool isEnterprise_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEnterprise {
      get { return isEnterprise_; }
      set {
        isEnterprise_ = value;
      }
    }

    /// <summary>Field number for the "isBuyer" field.</summary>
    public const int IsBuyerFieldNumber = 11;
    private bool isBuyer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBuyer {
      get { return isBuyer_; }
      set {
        isBuyer_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 12;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "contractCodes" field.</summary>
    public const int ContractCodesFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_contractCodes_codec
        = pb::FieldCodec.ForClassWrapper<string>(106);
    private readonly pbc::RepeatedField<string> contractCodes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ContractCodes {
      get { return contractCodes_; }
    }

    /// <summary>Field number for the "contractorUserName" field.</summary>
    public const int ContractorUserNameFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_contractorUserName_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string contractorUserName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorUserName {
      get { return contractorUserName_; }
      set {
        contractorUserName_ = value;
      }
    }


    /// <summary>Field number for the "applicationUserIdentityGuid" field.</summary>
    public const int ApplicationUserIdentityGuidFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_applicationUserIdentityGuid_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string applicationUserIdentityGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApplicationUserIdentityGuid {
      get { return applicationUserIdentityGuid_; }
      set {
        applicationUserIdentityGuid_ = value;
      }
    }


    /// <summary>Field number for the "accountingCustomerCode" field.</summary>
    public const int AccountingCustomerCodeFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_accountingCustomerCode_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string accountingCustomerCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountingCustomerCode {
      get { return accountingCustomerCode_; }
      set {
        accountingCustomerCode_ = value;
      }
    }


    /// <summary>Field number for the "isPartner" field.</summary>
    public const int IsPartnerFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _single_isPartner_codec = pb::FieldCodec.ForClassWrapper<string>(138);
    private string isPartner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsPartner {
      get { return isPartner_; }
      set {
        isPartner_ = value;
      }
    }


    /// <summary>Field number for the "contractorShortName" field.</summary>
    public const int ContractorShortNameFieldNumber = 18;
    private static readonly pb::FieldCodec<string> _single_contractorShortName_codec = pb::FieldCodec.ForClassWrapper<string>(146);
    private string contractorShortName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorShortName {
      get { return contractorShortName_; }
      set {
        contractorShortName_ = value;
      }
    }


    /// <summary>Field number for the "contractorCity" field.</summary>
    public const int ContractorCityFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _single_contractorCity_codec = pb::FieldCodec.ForClassWrapper<string>(154);
    private string contractorCity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorCity {
      get { return contractorCity_; }
      set {
        contractorCity_ = value;
      }
    }


    /// <summary>Field number for the "contractorCityId" field.</summary>
    public const int ContractorCityIdFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _single_contractorCityId_codec = pb::FieldCodec.ForClassWrapper<string>(162);
    private string contractorCityId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorCityId {
      get { return contractorCityId_; }
      set {
        contractorCityId_ = value;
      }
    }


    /// <summary>Field number for the "contractorDistrict" field.</summary>
    public const int ContractorDistrictFieldNumber = 21;
    private static readonly pb::FieldCodec<string> _single_contractorDistrict_codec = pb::FieldCodec.ForClassWrapper<string>(170);
    private string contractorDistrict_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorDistrict {
      get { return contractorDistrict_; }
      set {
        contractorDistrict_ = value;
      }
    }


    /// <summary>Field number for the "contractorDistrictId" field.</summary>
    public const int ContractorDistrictIdFieldNumber = 22;
    private static readonly pb::FieldCodec<string> _single_contractorDistrictId_codec = pb::FieldCodec.ForClassWrapper<string>(178);
    private string contractorDistrictId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractorDistrictId {
      get { return contractorDistrictId_; }
      set {
        contractorDistrictId_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractorGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractorGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdentityGuid != other.IdentityGuid) return false;
      if (ContractorFullName != other.ContractorFullName) return false;
      if (ContractorCode != other.ContractorCode) return false;
      if (ContractorPhone != other.ContractorPhone) return false;
      if (ContractorEmail != other.ContractorEmail) return false;
      if (ContractorFax != other.ContractorFax) return false;
      if (ContractorAddress != other.ContractorAddress) return false;
      if (ContractorIdNo != other.ContractorIdNo) return false;
      if (ContractorTaxIdNo != other.ContractorTaxIdNo) return false;
      if (IsEnterprise != other.IsEnterprise) return false;
      if (IsBuyer != other.IsBuyer) return false;
      if (Id != other.Id) return false;
      if(!contractCodes_.Equals(other.contractCodes_)) return false;
      if (ContractorUserName != other.ContractorUserName) return false;
      if (ApplicationUserIdentityGuid != other.ApplicationUserIdentityGuid) return false;
      if (AccountingCustomerCode != other.AccountingCustomerCode) return false;
      if (IsPartner != other.IsPartner) return false;
      if (ContractorShortName != other.ContractorShortName) return false;
      if (ContractorCity != other.ContractorCity) return false;
      if (ContractorCityId != other.ContractorCityId) return false;
      if (ContractorDistrict != other.ContractorDistrict) return false;
      if (ContractorDistrictId != other.ContractorDistrictId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (identityGuid_ != null) hash ^= IdentityGuid.GetHashCode();
      if (contractorFullName_ != null) hash ^= ContractorFullName.GetHashCode();
      if (contractorCode_ != null) hash ^= ContractorCode.GetHashCode();
      if (contractorPhone_ != null) hash ^= ContractorPhone.GetHashCode();
      if (contractorEmail_ != null) hash ^= ContractorEmail.GetHashCode();
      if (contractorFax_ != null) hash ^= ContractorFax.GetHashCode();
      if (contractorAddress_ != null) hash ^= ContractorAddress.GetHashCode();
      if (contractorIdNo_ != null) hash ^= ContractorIdNo.GetHashCode();
      if (contractorTaxIdNo_ != null) hash ^= ContractorTaxIdNo.GetHashCode();
      if (IsEnterprise != false) hash ^= IsEnterprise.GetHashCode();
      if (IsBuyer != false) hash ^= IsBuyer.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= contractCodes_.GetHashCode();
      if (contractorUserName_ != null) hash ^= ContractorUserName.GetHashCode();
      if (applicationUserIdentityGuid_ != null) hash ^= ApplicationUserIdentityGuid.GetHashCode();
      if (accountingCustomerCode_ != null) hash ^= AccountingCustomerCode.GetHashCode();
      if (isPartner_ != null) hash ^= IsPartner.GetHashCode();
      if (contractorShortName_ != null) hash ^= ContractorShortName.GetHashCode();
      if (contractorCity_ != null) hash ^= ContractorCity.GetHashCode();
      if (contractorCityId_ != null) hash ^= ContractorCityId.GetHashCode();
      if (contractorDistrict_ != null) hash ^= ContractorDistrict.GetHashCode();
      if (contractorDistrictId_ != null) hash ^= ContractorDistrictId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (identityGuid_ != null) {
        _single_identityGuid_codec.WriteTagAndValue(output, IdentityGuid);
      }
      if (contractorFullName_ != null) {
        _single_contractorFullName_codec.WriteTagAndValue(output, ContractorFullName);
      }
      if (contractorCode_ != null) {
        _single_contractorCode_codec.WriteTagAndValue(output, ContractorCode);
      }
      if (contractorPhone_ != null) {
        _single_contractorPhone_codec.WriteTagAndValue(output, ContractorPhone);
      }
      if (contractorEmail_ != null) {
        _single_contractorEmail_codec.WriteTagAndValue(output, ContractorEmail);
      }
      if (contractorFax_ != null) {
        _single_contractorFax_codec.WriteTagAndValue(output, ContractorFax);
      }
      if (contractorAddress_ != null) {
        _single_contractorAddress_codec.WriteTagAndValue(output, ContractorAddress);
      }
      if (contractorIdNo_ != null) {
        _single_contractorIdNo_codec.WriteTagAndValue(output, ContractorIdNo);
      }
      if (contractorTaxIdNo_ != null) {
        _single_contractorTaxIdNo_codec.WriteTagAndValue(output, ContractorTaxIdNo);
      }
      if (IsEnterprise != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsEnterprise);
      }
      if (IsBuyer != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsBuyer);
      }
      if (Id != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Id);
      }
      contractCodes_.WriteTo(output, _repeated_contractCodes_codec);
      if (contractorUserName_ != null) {
        _single_contractorUserName_codec.WriteTagAndValue(output, ContractorUserName);
      }
      if (applicationUserIdentityGuid_ != null) {
        _single_applicationUserIdentityGuid_codec.WriteTagAndValue(output, ApplicationUserIdentityGuid);
      }
      if (accountingCustomerCode_ != null) {
        _single_accountingCustomerCode_codec.WriteTagAndValue(output, AccountingCustomerCode);
      }
      if (isPartner_ != null) {
        _single_isPartner_codec.WriteTagAndValue(output, IsPartner);
      }
      if (contractorShortName_ != null) {
        _single_contractorShortName_codec.WriteTagAndValue(output, ContractorShortName);
      }
      if (contractorCity_ != null) {
        _single_contractorCity_codec.WriteTagAndValue(output, ContractorCity);
      }
      if (contractorCityId_ != null) {
        _single_contractorCityId_codec.WriteTagAndValue(output, ContractorCityId);
      }
      if (contractorDistrict_ != null) {
        _single_contractorDistrict_codec.WriteTagAndValue(output, ContractorDistrict);
      }
      if (contractorDistrictId_ != null) {
        _single_contractorDistrictId_codec.WriteTagAndValue(output, ContractorDistrictId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (identityGuid_ != null) {
        size += _single_identityGuid_codec.CalculateSizeWithTag(IdentityGuid);
      }
      if (contractorFullName_ != null) {
        size += _single_contractorFullName_codec.CalculateSizeWithTag(ContractorFullName);
      }
      if (contractorCode_ != null) {
        size += _single_contractorCode_codec.CalculateSizeWithTag(ContractorCode);
      }
      if (contractorPhone_ != null) {
        size += _single_contractorPhone_codec.CalculateSizeWithTag(ContractorPhone);
      }
      if (contractorEmail_ != null) {
        size += _single_contractorEmail_codec.CalculateSizeWithTag(ContractorEmail);
      }
      if (contractorFax_ != null) {
        size += _single_contractorFax_codec.CalculateSizeWithTag(ContractorFax);
      }
      if (contractorAddress_ != null) {
        size += _single_contractorAddress_codec.CalculateSizeWithTag(ContractorAddress);
      }
      if (contractorIdNo_ != null) {
        size += _single_contractorIdNo_codec.CalculateSizeWithTag(ContractorIdNo);
      }
      if (contractorTaxIdNo_ != null) {
        size += _single_contractorTaxIdNo_codec.CalculateSizeWithTag(ContractorTaxIdNo);
      }
      if (IsEnterprise != false) {
        size += 1 + 1;
      }
      if (IsBuyer != false) {
        size += 1 + 1;
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += contractCodes_.CalculateSize(_repeated_contractCodes_codec);
      if (contractorUserName_ != null) {
        size += _single_contractorUserName_codec.CalculateSizeWithTag(ContractorUserName);
      }
      if (applicationUserIdentityGuid_ != null) {
        size += _single_applicationUserIdentityGuid_codec.CalculateSizeWithTag(ApplicationUserIdentityGuid);
      }
      if (accountingCustomerCode_ != null) {
        size += _single_accountingCustomerCode_codec.CalculateSizeWithTag(AccountingCustomerCode);
      }
      if (isPartner_ != null) {
        size += _single_isPartner_codec.CalculateSizeWithTag(IsPartner);
      }
      if (contractorShortName_ != null) {
        size += _single_contractorShortName_codec.CalculateSizeWithTag(ContractorShortName);
      }
      if (contractorCity_ != null) {
        size += _single_contractorCity_codec.CalculateSizeWithTag(ContractorCity);
      }
      if (contractorCityId_ != null) {
        size += _single_contractorCityId_codec.CalculateSizeWithTag(ContractorCityId);
      }
      if (contractorDistrict_ != null) {
        size += _single_contractorDistrict_codec.CalculateSizeWithTag(ContractorDistrict);
      }
      if (contractorDistrictId_ != null) {
        size += _single_contractorDistrictId_codec.CalculateSizeWithTag(ContractorDistrictId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractorGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.identityGuid_ != null) {
        if (identityGuid_ == null || other.IdentityGuid != "") {
          IdentityGuid = other.IdentityGuid;
        }
      }
      if (other.contractorFullName_ != null) {
        if (contractorFullName_ == null || other.ContractorFullName != "") {
          ContractorFullName = other.ContractorFullName;
        }
      }
      if (other.contractorCode_ != null) {
        if (contractorCode_ == null || other.ContractorCode != "") {
          ContractorCode = other.ContractorCode;
        }
      }
      if (other.contractorPhone_ != null) {
        if (contractorPhone_ == null || other.ContractorPhone != "") {
          ContractorPhone = other.ContractorPhone;
        }
      }
      if (other.contractorEmail_ != null) {
        if (contractorEmail_ == null || other.ContractorEmail != "") {
          ContractorEmail = other.ContractorEmail;
        }
      }
      if (other.contractorFax_ != null) {
        if (contractorFax_ == null || other.ContractorFax != "") {
          ContractorFax = other.ContractorFax;
        }
      }
      if (other.contractorAddress_ != null) {
        if (contractorAddress_ == null || other.ContractorAddress != "") {
          ContractorAddress = other.ContractorAddress;
        }
      }
      if (other.contractorIdNo_ != null) {
        if (contractorIdNo_ == null || other.ContractorIdNo != "") {
          ContractorIdNo = other.ContractorIdNo;
        }
      }
      if (other.contractorTaxIdNo_ != null) {
        if (contractorTaxIdNo_ == null || other.ContractorTaxIdNo != "") {
          ContractorTaxIdNo = other.ContractorTaxIdNo;
        }
      }
      if (other.IsEnterprise != false) {
        IsEnterprise = other.IsEnterprise;
      }
      if (other.IsBuyer != false) {
        IsBuyer = other.IsBuyer;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      contractCodes_.Add(other.contractCodes_);
      if (other.contractorUserName_ != null) {
        if (contractorUserName_ == null || other.ContractorUserName != "") {
          ContractorUserName = other.ContractorUserName;
        }
      }
      if (other.applicationUserIdentityGuid_ != null) {
        if (applicationUserIdentityGuid_ == null || other.ApplicationUserIdentityGuid != "") {
          ApplicationUserIdentityGuid = other.ApplicationUserIdentityGuid;
        }
      }
      if (other.accountingCustomerCode_ != null) {
        if (accountingCustomerCode_ == null || other.AccountingCustomerCode != "") {
          AccountingCustomerCode = other.AccountingCustomerCode;
        }
      }
      if (other.isPartner_ != null) {
        if (isPartner_ == null || other.IsPartner != "") {
          IsPartner = other.IsPartner;
        }
      }
      if (other.contractorShortName_ != null) {
        if (contractorShortName_ == null || other.ContractorShortName != "") {
          ContractorShortName = other.ContractorShortName;
        }
      }
      if (other.contractorCity_ != null) {
        if (contractorCity_ == null || other.ContractorCity != "") {
          ContractorCity = other.ContractorCity;
        }
      }
      if (other.contractorCityId_ != null) {
        if (contractorCityId_ == null || other.ContractorCityId != "") {
          ContractorCityId = other.ContractorCityId;
        }
      }
      if (other.contractorDistrict_ != null) {
        if (contractorDistrict_ == null || other.ContractorDistrict != "") {
          ContractorDistrict = other.ContractorDistrict;
        }
      }
      if (other.contractorDistrictId_ != null) {
        if (contractorDistrictId_ == null || other.ContractorDistrictId != "") {
          ContractorDistrictId = other.ContractorDistrictId;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_identityGuid_codec.Read(input);
            if (identityGuid_ == null || value != "") {
              IdentityGuid = value;
            }
            break;
          }
          case 18: {
            string value = _single_contractorFullName_codec.Read(input);
            if (contractorFullName_ == null || value != "") {
              ContractorFullName = value;
            }
            break;
          }
          case 26: {
            string value = _single_contractorCode_codec.Read(input);
            if (contractorCode_ == null || value != "") {
              ContractorCode = value;
            }
            break;
          }
          case 34: {
            string value = _single_contractorPhone_codec.Read(input);
            if (contractorPhone_ == null || value != "") {
              ContractorPhone = value;
            }
            break;
          }
          case 42: {
            string value = _single_contractorEmail_codec.Read(input);
            if (contractorEmail_ == null || value != "") {
              ContractorEmail = value;
            }
            break;
          }
          case 50: {
            string value = _single_contractorFax_codec.Read(input);
            if (contractorFax_ == null || value != "") {
              ContractorFax = value;
            }
            break;
          }
          case 58: {
            string value = _single_contractorAddress_codec.Read(input);
            if (contractorAddress_ == null || value != "") {
              ContractorAddress = value;
            }
            break;
          }
          case 66: {
            string value = _single_contractorIdNo_codec.Read(input);
            if (contractorIdNo_ == null || value != "") {
              ContractorIdNo = value;
            }
            break;
          }
          case 74: {
            string value = _single_contractorTaxIdNo_codec.Read(input);
            if (contractorTaxIdNo_ == null || value != "") {
              ContractorTaxIdNo = value;
            }
            break;
          }
          case 80: {
            IsEnterprise = input.ReadBool();
            break;
          }
          case 88: {
            IsBuyer = input.ReadBool();
            break;
          }
          case 96: {
            Id = input.ReadInt32();
            break;
          }
          case 106: {
            contractCodes_.AddEntriesFrom(input, _repeated_contractCodes_codec);
            break;
          }
          case 114: {
            string value = _single_contractorUserName_codec.Read(input);
            if (contractorUserName_ == null || value != "") {
              ContractorUserName = value;
            }
            break;
          }
          case 122: {
            string value = _single_applicationUserIdentityGuid_codec.Read(input);
            if (applicationUserIdentityGuid_ == null || value != "") {
              ApplicationUserIdentityGuid = value;
            }
            break;
          }
          case 130: {
            string value = _single_accountingCustomerCode_codec.Read(input);
            if (accountingCustomerCode_ == null || value != "") {
              AccountingCustomerCode = value;
            }
            break;
          }
          case 138: {
            string value = _single_isPartner_codec.Read(input);
            if (isPartner_ == null || value != "") {
              IsPartner = value;
            }
            break;
          }
          case 146: {
            string value = _single_contractorShortName_codec.Read(input);
            if (contractorShortName_ == null || value != "") {
              ContractorShortName = value;
            }
            break;
          }
          case 154: {
            string value = _single_contractorCity_codec.Read(input);
            if (contractorCity_ == null || value != "") {
              ContractorCity = value;
            }
            break;
          }
          case 162: {
            string value = _single_contractorCityId_codec.Read(input);
            if (contractorCityId_ == null || value != "") {
              ContractorCityId = value;
            }
            break;
          }
          case 170: {
            string value = _single_contractorDistrict_codec.Read(input);
            if (contractorDistrict_ == null || value != "") {
              ContractorDistrict = value;
            }
            break;
          }
          case 178: {
            string value = _single_contractorDistrictId_codec.Read(input);
            if (contractorDistrictId_ == null || value != "") {
              ContractorDistrictId = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListContractorGrpcDTO : pb::IMessage<ListContractorGrpcDTO> {
    private static readonly pb::MessageParser<ListContractorGrpcDTO> _parser = new pb::MessageParser<ListContractorGrpcDTO>(() => new ListContractorGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListContractorGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ContractorsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListContractorGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListContractorGrpcDTO(ListContractorGrpcDTO other) : this() {
      contractors_ = other.contractors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListContractorGrpcDTO Clone() {
      return new ListContractorGrpcDTO(this);
    }

    /// <summary>Field number for the "contractors" field.</summary>
    public const int ContractorsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ContractorGrpcDTO> _repeated_contractors_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.ContractorGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ContractorGrpcDTO> contractors_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ContractorGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ContractorGrpcDTO> Contractors {
      get { return contractors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListContractorGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListContractorGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!contractors_.Equals(other.contractors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= contractors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      contractors_.WriteTo(output, _repeated_contractors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += contractors_.CalculateSize(_repeated_contractors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListContractorGrpcDTO other) {
      if (other == null) {
        return;
      }
      contractors_.Add(other.contractors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            contractors_.AddEntriesFrom(input, _repeated_contractors_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
