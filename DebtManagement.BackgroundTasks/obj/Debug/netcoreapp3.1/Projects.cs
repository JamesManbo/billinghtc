// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/projects.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ContractManagement.API.Protos {

  /// <summary>Holder for reflection information generated from Protos/projects.proto</summary>
  public static partial class ProjectsReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/projects.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProjectsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcm90b3MvcHJvamVjdHMucHJvdG8SFUNvbnRyYWN0TWFuYWdlbWVudEFw",
            "aRoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHku",
            "cHJvdG8aE1Byb3Rvcy9jb21tb24ucHJvdG8iUAoSUHJvamVjdExpc3RHcnBj",
            "RFRPEjoKC3Byb2plY3REdG9zGAEgAygLMiUuQ29udHJhY3RNYW5hZ2VtZW50",
            "QXBpLlByb2plY3RHcnBjRFRPIk8KIEdldE91dENvbnRyYWN0TnVtYmVyUmVz",
            "cG9uc2VHcnBjEisKBnJlc3VsdBgBIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQzMlZhbHVlIo0DChZQcm9qZWN0UGFnZUxpc3RHcnBjRFRPEjUKBnN1YnNl",
            "dBgBIAMoCzIlLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Qcm9qZWN0R3JwY0RU",
            "TxIqCgVjb3VudBgCIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVl",
            "Ei4KCXBhZ2VDb3VudBgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlEjMKDnRvdGFsSXRlbUNvdW50GAQgASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDMyVmFsdWUSKQoEc2tpcBgFIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQzMlZhbHVlEikKBHRha2UYBiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50",
            "MzJWYWx1ZRIXCg9oYXNQcmV2aW91c1BhZ2UYByABKAgSEwoLaGFzTmV4dFBh",
            "Z2UYCCABKAgSEwoLaXNGaXJzdFBhZ2UYCSABKAgSEgoKaXNMYXN0UGFnZRgK",
            "IAEoCCLGAwoOUHJvamVjdEdycGNEVE8SMQoLcHJvamVjdE5hbWUYASABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMQoLcHJvamVjdENvZGUY",
            "AiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSCgoCaWQYAyAB",
            "KAUSMQoMbWFya2V0QXJlYUlkGAQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDMyVmFsdWUSOAoTYWdlbnRDb250cmFjdENvZGVJZBgFIAEoCzIbLmdvb2ds",
            "ZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjMKDW51bWJlck9mVW5pdHMYBiABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMQoLZGVzY3JpcHRpb24Y",
            "ByABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMgoNbnVtYmVy",
            "T2ZSb29tcxgIIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjkK",
            "FG51bWJlck9mT3V0Q29udHJhY3RzGAkgASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDMyVmFsdWUy3gQKElByb2plY3RTZXJ2aWNlR3JwYxJNCgZHZXRBbGwS",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHkaKS5Db250cmFjdE1hbmFnZW1lbnRB",
            "cGkuUHJvamVjdExpc3RHcnBjRFRPIgASaAoLR2V0UHJvamVjdHMSKC5Db250",
            "cmFjdE1hbmFnZW1lbnRBcGkuUmVxdWVzdEZpbHRlckdycGMaLS5Db250cmFj",
            "dE1hbmFnZW1lbnRBcGkuUHJvamVjdFBhZ2VMaXN0R3JwY0RUTyIAEm4KEUdl",
            "dFByb2plY3RzRm9yQXBwEiguQ29udHJhY3RNYW5hZ2VtZW50QXBpLlJlcXVl",
            "c3RGaWx0ZXJHcnBjGi0uQ29udHJhY3RNYW5hZ2VtZW50QXBpLlByb2plY3RQ",
            "YWdlTGlzdEdycGNEVE8iABJsChJHZXRPdXRDb250YWN0Q291bnQSGy5nb29n",
            "bGUucHJvdG9idWYuSW50MzJWYWx1ZRo3LkNvbnRyYWN0TWFuYWdlbWVudEFw",
            "aS5HZXRPdXRDb250cmFjdE51bWJlclJlc3BvbnNlR3JwYyIAEk0KDkdldFBy",
            "b2plY3RDb2RlEhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUaHC5nb29n",
            "bGUucHJvdG9idWYuU3RyaW5nVmFsdWUiABJiChVHZXRQcm9qZWN0T2ZTdXBw",
            "b3J0ZXISHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUaKS5Db250cmFj",
            "dE1hbmFnZW1lbnRBcGkuUHJvamVjdExpc3RHcnBjRFRPIgBCIKoCHUNvbnRy",
            "YWN0TWFuYWdlbWVudC5BUEkuUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::ContractManagement.API.Protos.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ProjectListGrpcDTO), global::ContractManagement.API.Protos.ProjectListGrpcDTO.Parser, new[]{ "ProjectDtos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.GetOutContractNumberResponseGrpc), global::ContractManagement.API.Protos.GetOutContractNumberResponseGrpc.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ProjectPageListGrpcDTO), global::ContractManagement.API.Protos.ProjectPageListGrpcDTO.Parser, new[]{ "Subset", "Count", "PageCount", "TotalItemCount", "Skip", "Take", "HasPreviousPage", "HasNextPage", "IsFirstPage", "IsLastPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ProjectGrpcDTO), global::ContractManagement.API.Protos.ProjectGrpcDTO.Parser, new[]{ "ProjectName", "ProjectCode", "Id", "MarketAreaId", "AgentContractCodeId", "NumberOfUnits", "Description", "NumberOfRooms", "NumberOfOutContracts" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProjectListGrpcDTO : pb::IMessage<ProjectListGrpcDTO> {
    private static readonly pb::MessageParser<ProjectListGrpcDTO> _parser = new pb::MessageParser<ProjectListGrpcDTO>(() => new ProjectListGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProjectListGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ProjectsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectListGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectListGrpcDTO(ProjectListGrpcDTO other) : this() {
      projectDtos_ = other.projectDtos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectListGrpcDTO Clone() {
      return new ProjectListGrpcDTO(this);
    }

    /// <summary>Field number for the "projectDtos" field.</summary>
    public const int ProjectDtosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ProjectGrpcDTO> _repeated_projectDtos_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.ProjectGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ProjectGrpcDTO> projectDtos_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ProjectGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ProjectGrpcDTO> ProjectDtos {
      get { return projectDtos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProjectListGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProjectListGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!projectDtos_.Equals(other.projectDtos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= projectDtos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      projectDtos_.WriteTo(output, _repeated_projectDtos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += projectDtos_.CalculateSize(_repeated_projectDtos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProjectListGrpcDTO other) {
      if (other == null) {
        return;
      }
      projectDtos_.Add(other.projectDtos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            projectDtos_.AddEntriesFrom(input, _repeated_projectDtos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetOutContractNumberResponseGrpc : pb::IMessage<GetOutContractNumberResponseGrpc> {
    private static readonly pb::MessageParser<GetOutContractNumberResponseGrpc> _parser = new pb::MessageParser<GetOutContractNumberResponseGrpc>(() => new GetOutContractNumberResponseGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOutContractNumberResponseGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ProjectsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOutContractNumberResponseGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOutContractNumberResponseGrpc(GetOutContractNumberResponseGrpc other) : this() {
      Result = other.Result;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOutContractNumberResponseGrpc Clone() {
      return new GetOutContractNumberResponseGrpc(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_result_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOutContractNumberResponseGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOutContractNumberResponseGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        _single_result_codec.WriteTagAndValue(output, Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += _single_result_codec.CalculateSizeWithTag(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOutContractNumberResponseGrpc other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null || other.Result != 0) {
          Result = other.Result;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_result_codec.Read(input);
            if (result_ == null || value != 0) {
              Result = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProjectPageListGrpcDTO : pb::IMessage<ProjectPageListGrpcDTO> {
    private static readonly pb::MessageParser<ProjectPageListGrpcDTO> _parser = new pb::MessageParser<ProjectPageListGrpcDTO>(() => new ProjectPageListGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProjectPageListGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ProjectsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectPageListGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectPageListGrpcDTO(ProjectPageListGrpcDTO other) : this() {
      subset_ = other.subset_.Clone();
      Count = other.Count;
      PageCount = other.PageCount;
      TotalItemCount = other.TotalItemCount;
      Skip = other.Skip;
      Take = other.Take;
      hasPreviousPage_ = other.hasPreviousPage_;
      hasNextPage_ = other.hasNextPage_;
      isFirstPage_ = other.isFirstPage_;
      isLastPage_ = other.isLastPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectPageListGrpcDTO Clone() {
      return new ProjectPageListGrpcDTO(this);
    }

    /// <summary>Field number for the "subset" field.</summary>
    public const int SubsetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.ProjectGrpcDTO> _repeated_subset_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.ProjectGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.ProjectGrpcDTO> subset_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.ProjectGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.ProjectGrpcDTO> Subset {
      get { return subset_; }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_count_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }


    /// <summary>Field number for the "pageCount" field.</summary>
    public const int PageCountFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_pageCount_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? pageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PageCount {
      get { return pageCount_; }
      set {
        pageCount_ = value;
      }
    }


    /// <summary>Field number for the "totalItemCount" field.</summary>
    public const int TotalItemCountFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_totalItemCount_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? totalItemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TotalItemCount {
      get { return totalItemCount_; }
      set {
        totalItemCount_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "hasPreviousPage" field.</summary>
    public const int HasPreviousPageFieldNumber = 7;
    private bool hasPreviousPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreviousPage {
      get { return hasPreviousPage_; }
      set {
        hasPreviousPage_ = value;
      }
    }

    /// <summary>Field number for the "hasNextPage" field.</summary>
    public const int HasNextPageFieldNumber = 8;
    private bool hasNextPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPage {
      get { return hasNextPage_; }
      set {
        hasNextPage_ = value;
      }
    }

    /// <summary>Field number for the "isFirstPage" field.</summary>
    public const int IsFirstPageFieldNumber = 9;
    private bool isFirstPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirstPage {
      get { return isFirstPage_; }
      set {
        isFirstPage_ = value;
      }
    }

    /// <summary>Field number for the "isLastPage" field.</summary>
    public const int IsLastPageFieldNumber = 10;
    private bool isLastPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastPage {
      get { return isLastPage_; }
      set {
        isLastPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProjectPageListGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProjectPageListGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subset_.Equals(other.subset_)) return false;
      if (Count != other.Count) return false;
      if (PageCount != other.PageCount) return false;
      if (TotalItemCount != other.TotalItemCount) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (HasPreviousPage != other.HasPreviousPage) return false;
      if (HasNextPage != other.HasNextPage) return false;
      if (IsFirstPage != other.IsFirstPage) return false;
      if (IsLastPage != other.IsLastPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subset_.GetHashCode();
      if (count_ != null) hash ^= Count.GetHashCode();
      if (pageCount_ != null) hash ^= PageCount.GetHashCode();
      if (totalItemCount_ != null) hash ^= TotalItemCount.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (HasPreviousPage != false) hash ^= HasPreviousPage.GetHashCode();
      if (HasNextPage != false) hash ^= HasNextPage.GetHashCode();
      if (IsFirstPage != false) hash ^= IsFirstPage.GetHashCode();
      if (IsLastPage != false) hash ^= IsLastPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subset_.WriteTo(output, _repeated_subset_codec);
      if (count_ != null) {
        _single_count_codec.WriteTagAndValue(output, Count);
      }
      if (pageCount_ != null) {
        _single_pageCount_codec.WriteTagAndValue(output, PageCount);
      }
      if (totalItemCount_ != null) {
        _single_totalItemCount_codec.WriteTagAndValue(output, TotalItemCount);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (HasPreviousPage != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasPreviousPage);
      }
      if (HasNextPage != false) {
        output.WriteRawTag(64);
        output.WriteBool(HasNextPage);
      }
      if (IsFirstPage != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsFirstPage);
      }
      if (IsLastPage != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsLastPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subset_.CalculateSize(_repeated_subset_codec);
      if (count_ != null) {
        size += _single_count_codec.CalculateSizeWithTag(Count);
      }
      if (pageCount_ != null) {
        size += _single_pageCount_codec.CalculateSizeWithTag(PageCount);
      }
      if (totalItemCount_ != null) {
        size += _single_totalItemCount_codec.CalculateSizeWithTag(TotalItemCount);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (HasPreviousPage != false) {
        size += 1 + 1;
      }
      if (HasNextPage != false) {
        size += 1 + 1;
      }
      if (IsFirstPage != false) {
        size += 1 + 1;
      }
      if (IsLastPage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProjectPageListGrpcDTO other) {
      if (other == null) {
        return;
      }
      subset_.Add(other.subset_);
      if (other.count_ != null) {
        if (count_ == null || other.Count != 0) {
          Count = other.Count;
        }
      }
      if (other.pageCount_ != null) {
        if (pageCount_ == null || other.PageCount != 0) {
          PageCount = other.PageCount;
        }
      }
      if (other.totalItemCount_ != null) {
        if (totalItemCount_ == null || other.TotalItemCount != 0) {
          TotalItemCount = other.TotalItemCount;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.HasPreviousPage != false) {
        HasPreviousPage = other.HasPreviousPage;
      }
      if (other.HasNextPage != false) {
        HasNextPage = other.HasNextPage;
      }
      if (other.IsFirstPage != false) {
        IsFirstPage = other.IsFirstPage;
      }
      if (other.IsLastPage != false) {
        IsLastPage = other.IsLastPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subset_.AddEntriesFrom(input, _repeated_subset_codec);
            break;
          }
          case 18: {
            int? value = _single_count_codec.Read(input);
            if (count_ == null || value != 0) {
              Count = value;
            }
            break;
          }
          case 26: {
            int? value = _single_pageCount_codec.Read(input);
            if (pageCount_ == null || value != 0) {
              PageCount = value;
            }
            break;
          }
          case 34: {
            int? value = _single_totalItemCount_codec.Read(input);
            if (totalItemCount_ == null || value != 0) {
              TotalItemCount = value;
            }
            break;
          }
          case 42: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 50: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 56: {
            HasPreviousPage = input.ReadBool();
            break;
          }
          case 64: {
            HasNextPage = input.ReadBool();
            break;
          }
          case 72: {
            IsFirstPage = input.ReadBool();
            break;
          }
          case 80: {
            IsLastPage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProjectGrpcDTO : pb::IMessage<ProjectGrpcDTO> {
    private static readonly pb::MessageParser<ProjectGrpcDTO> _parser = new pb::MessageParser<ProjectGrpcDTO>(() => new ProjectGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProjectGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.ProjectsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectGrpcDTO(ProjectGrpcDTO other) : this() {
      ProjectName = other.ProjectName;
      ProjectCode = other.ProjectCode;
      id_ = other.id_;
      MarketAreaId = other.MarketAreaId;
      AgentContractCodeId = other.AgentContractCodeId;
      NumberOfUnits = other.NumberOfUnits;
      Description = other.Description;
      NumberOfRooms = other.NumberOfRooms;
      NumberOfOutContracts = other.NumberOfOutContracts;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectGrpcDTO Clone() {
      return new ProjectGrpcDTO(this);
    }

    /// <summary>Field number for the "projectName" field.</summary>
    public const int ProjectNameFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_projectName_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string projectName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectName {
      get { return projectName_; }
      set {
        projectName_ = value;
      }
    }


    /// <summary>Field number for the "projectCode" field.</summary>
    public const int ProjectCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_projectCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string projectCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectCode {
      get { return projectCode_; }
      set {
        projectCode_ = value;
      }
    }


    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "marketAreaId" field.</summary>
    public const int MarketAreaIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_marketAreaId_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? marketAreaId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? MarketAreaId {
      get { return marketAreaId_; }
      set {
        marketAreaId_ = value;
      }
    }


    /// <summary>Field number for the "agentContractCodeId" field.</summary>
    public const int AgentContractCodeIdFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_agentContractCodeId_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? agentContractCodeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? AgentContractCodeId {
      get { return agentContractCodeId_; }
      set {
        agentContractCodeId_ = value;
      }
    }


    /// <summary>Field number for the "numberOfUnits" field.</summary>
    public const int NumberOfUnitsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_numberOfUnits_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string numberOfUnits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NumberOfUnits {
      get { return numberOfUnits_; }
      set {
        numberOfUnits_ = value;
      }
    }


    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_description_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }


    /// <summary>Field number for the "numberOfRooms" field.</summary>
    public const int NumberOfRoomsFieldNumber = 8;
    private static readonly pb::FieldCodec<int?> _single_numberOfRooms_codec = pb::FieldCodec.ForStructWrapper<int>(66);
    private int? numberOfRooms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? NumberOfRooms {
      get { return numberOfRooms_; }
      set {
        numberOfRooms_ = value;
      }
    }


    /// <summary>Field number for the "numberOfOutContracts" field.</summary>
    public const int NumberOfOutContractsFieldNumber = 9;
    private static readonly pb::FieldCodec<int?> _single_numberOfOutContracts_codec = pb::FieldCodec.ForStructWrapper<int>(74);
    private int? numberOfOutContracts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? NumberOfOutContracts {
      get { return numberOfOutContracts_; }
      set {
        numberOfOutContracts_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProjectGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProjectGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectName != other.ProjectName) return false;
      if (ProjectCode != other.ProjectCode) return false;
      if (Id != other.Id) return false;
      if (MarketAreaId != other.MarketAreaId) return false;
      if (AgentContractCodeId != other.AgentContractCodeId) return false;
      if (NumberOfUnits != other.NumberOfUnits) return false;
      if (Description != other.Description) return false;
      if (NumberOfRooms != other.NumberOfRooms) return false;
      if (NumberOfOutContracts != other.NumberOfOutContracts) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (projectName_ != null) hash ^= ProjectName.GetHashCode();
      if (projectCode_ != null) hash ^= ProjectCode.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (marketAreaId_ != null) hash ^= MarketAreaId.GetHashCode();
      if (agentContractCodeId_ != null) hash ^= AgentContractCodeId.GetHashCode();
      if (numberOfUnits_ != null) hash ^= NumberOfUnits.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (numberOfRooms_ != null) hash ^= NumberOfRooms.GetHashCode();
      if (numberOfOutContracts_ != null) hash ^= NumberOfOutContracts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (projectName_ != null) {
        _single_projectName_codec.WriteTagAndValue(output, ProjectName);
      }
      if (projectCode_ != null) {
        _single_projectCode_codec.WriteTagAndValue(output, ProjectCode);
      }
      if (Id != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Id);
      }
      if (marketAreaId_ != null) {
        _single_marketAreaId_codec.WriteTagAndValue(output, MarketAreaId);
      }
      if (agentContractCodeId_ != null) {
        _single_agentContractCodeId_codec.WriteTagAndValue(output, AgentContractCodeId);
      }
      if (numberOfUnits_ != null) {
        _single_numberOfUnits_codec.WriteTagAndValue(output, NumberOfUnits);
      }
      if (description_ != null) {
        _single_description_codec.WriteTagAndValue(output, Description);
      }
      if (numberOfRooms_ != null) {
        _single_numberOfRooms_codec.WriteTagAndValue(output, NumberOfRooms);
      }
      if (numberOfOutContracts_ != null) {
        _single_numberOfOutContracts_codec.WriteTagAndValue(output, NumberOfOutContracts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (projectName_ != null) {
        size += _single_projectName_codec.CalculateSizeWithTag(ProjectName);
      }
      if (projectCode_ != null) {
        size += _single_projectCode_codec.CalculateSizeWithTag(ProjectCode);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (marketAreaId_ != null) {
        size += _single_marketAreaId_codec.CalculateSizeWithTag(MarketAreaId);
      }
      if (agentContractCodeId_ != null) {
        size += _single_agentContractCodeId_codec.CalculateSizeWithTag(AgentContractCodeId);
      }
      if (numberOfUnits_ != null) {
        size += _single_numberOfUnits_codec.CalculateSizeWithTag(NumberOfUnits);
      }
      if (description_ != null) {
        size += _single_description_codec.CalculateSizeWithTag(Description);
      }
      if (numberOfRooms_ != null) {
        size += _single_numberOfRooms_codec.CalculateSizeWithTag(NumberOfRooms);
      }
      if (numberOfOutContracts_ != null) {
        size += _single_numberOfOutContracts_codec.CalculateSizeWithTag(NumberOfOutContracts);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProjectGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.projectName_ != null) {
        if (projectName_ == null || other.ProjectName != "") {
          ProjectName = other.ProjectName;
        }
      }
      if (other.projectCode_ != null) {
        if (projectCode_ == null || other.ProjectCode != "") {
          ProjectCode = other.ProjectCode;
        }
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.marketAreaId_ != null) {
        if (marketAreaId_ == null || other.MarketAreaId != 0) {
          MarketAreaId = other.MarketAreaId;
        }
      }
      if (other.agentContractCodeId_ != null) {
        if (agentContractCodeId_ == null || other.AgentContractCodeId != 0) {
          AgentContractCodeId = other.AgentContractCodeId;
        }
      }
      if (other.numberOfUnits_ != null) {
        if (numberOfUnits_ == null || other.NumberOfUnits != "") {
          NumberOfUnits = other.NumberOfUnits;
        }
      }
      if (other.description_ != null) {
        if (description_ == null || other.Description != "") {
          Description = other.Description;
        }
      }
      if (other.numberOfRooms_ != null) {
        if (numberOfRooms_ == null || other.NumberOfRooms != 0) {
          NumberOfRooms = other.NumberOfRooms;
        }
      }
      if (other.numberOfOutContracts_ != null) {
        if (numberOfOutContracts_ == null || other.NumberOfOutContracts != 0) {
          NumberOfOutContracts = other.NumberOfOutContracts;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_projectName_codec.Read(input);
            if (projectName_ == null || value != "") {
              ProjectName = value;
            }
            break;
          }
          case 18: {
            string value = _single_projectCode_codec.Read(input);
            if (projectCode_ == null || value != "") {
              ProjectCode = value;
            }
            break;
          }
          case 24: {
            Id = input.ReadInt32();
            break;
          }
          case 34: {
            int? value = _single_marketAreaId_codec.Read(input);
            if (marketAreaId_ == null || value != 0) {
              MarketAreaId = value;
            }
            break;
          }
          case 42: {
            int? value = _single_agentContractCodeId_codec.Read(input);
            if (agentContractCodeId_ == null || value != 0) {
              AgentContractCodeId = value;
            }
            break;
          }
          case 50: {
            string value = _single_numberOfUnits_codec.Read(input);
            if (numberOfUnits_ == null || value != "") {
              NumberOfUnits = value;
            }
            break;
          }
          case 58: {
            string value = _single_description_codec.Read(input);
            if (description_ == null || value != "") {
              Description = value;
            }
            break;
          }
          case 66: {
            int? value = _single_numberOfRooms_codec.Read(input);
            if (numberOfRooms_ == null || value != 0) {
              NumberOfRooms = value;
            }
            break;
          }
          case 74: {
            int? value = _single_numberOfOutContracts_codec.Read(input);
            if (numberOfOutContracts_ == null || value != 0) {
              NumberOfOutContracts = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
