// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/marketareas.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ContractManagement.API.Protos {

  /// <summary>Holder for reflection information generated from Protos/marketareas.proto</summary>
  public static partial class MarketareasReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/marketareas.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MarketareasReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQcm90b3MvbWFya2V0YXJlYXMucHJvdG8SFUNvbnRyYWN0TWFuYWdlbWVu",
            "dEFwaRoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9nb29nbGUv",
            "cHJvdG9idWYvdGltZXN0YW1wLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1w",
            "dHkucHJvdG8aE1Byb3Rvcy9jb21tb24ucHJvdG8iWQoVTWFya2V0QXJlYUxp",
            "c3RHcnBjRFRPEkAKDm1hcmtldEFyZWFEdG9zGAEgAygLMiguQ29udHJhY3RN",
            "YW5hZ2VtZW50QXBpLk1hcmtldEFyZWFHcnBjRFRPIq8CChFNYXJrZXRBcmVh",
            "R3JwY0RUTxIwCgptYXJrZXROYW1lGAEgASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEjAKCm1hcmtldENvZGUYAiABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSJwoCaWQYAyABKAsyGy5nb29nbGUucHJvdG9i",
            "dWYuSW50MzJWYWx1ZRItCghwYXJlbnRJZBgEIAEoCzIbLmdvb2dsZS5wcm90",
            "b2J1Zi5JbnQzMlZhbHVlEi4KCXRyZWVMZXZlbBgFIAEoCzIbLmdvb2dsZS5w",
            "cm90b2J1Zi5JbnQzMlZhbHVlEi4KCHRyZWVQYXRoGAYgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlIpMDChlNYXJrZXRBcmVhUGFnZUxpc3RH",
            "cnBjRFRPEjgKBnN1YnNldBgBIAMoCzIoLkNvbnRyYWN0TWFuYWdlbWVudEFw",
            "aS5NYXJrZXRBcmVhR3JwY0RUTxIqCgVjb3VudBgCIAEoCzIbLmdvb2dsZS5w",
            "cm90b2J1Zi5JbnQzMlZhbHVlEi4KCXBhZ2VDb3VudBgDIAEoCzIbLmdvb2ds",
            "ZS5wcm90b2J1Zi5JbnQzMlZhbHVlEjMKDnRvdGFsSXRlbUNvdW50GAQgASgL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSKQoEc2tpcBgFIAEoCzIb",
            "Lmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEikKBHRha2UYBiABKAsyGy5n",
            "b29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIXCg9oYXNQcmV2aW91c1BhZ2UY",
            "ByABKAgSEwoLaGFzTmV4dFBhZ2UYCCABKAgSEwoLaXNGaXJzdFBhZ2UYCSAB",
            "KAgSEgoKaXNMYXN0UGFnZRgKIAEoCDKqAgoVTWFya2V0QXJlYVNlcnZpY2VH",
            "cnBjElAKBkdldEFsbBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRosLkNvbnRy",
            "YWN0TWFuYWdlbWVudEFwaS5NYXJrZXRBcmVhTGlzdEdycGNEVE8iABJtCg1H",
            "ZXRNYXJrZXRBcmVhEiguQ29udHJhY3RNYW5hZ2VtZW50QXBpLlJlcXVlc3RG",
            "aWx0ZXJHcnBjGjAuQ29udHJhY3RNYW5hZ2VtZW50QXBpLk1hcmtldEFyZWFQ",
            "YWdlTGlzdEdycGNEVE8iABJQChFHZXRNYXJrZXRBcmVhQ29kZRIbLmdvb2ds",
            "ZS5wcm90b2J1Zi5JbnQzMlZhbHVlGhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlIgBCIKoCHUNvbnRyYWN0TWFuYWdlbWVudC5BUEkuUHJvdG9zYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::ContractManagement.API.Protos.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.MarketAreaListGrpcDTO), global::ContractManagement.API.Protos.MarketAreaListGrpcDTO.Parser, new[]{ "MarketAreaDtos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.MarketAreaGrpcDTO), global::ContractManagement.API.Protos.MarketAreaGrpcDTO.Parser, new[]{ "MarketName", "MarketCode", "Id", "ParentId", "TreeLevel", "TreePath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.MarketAreaPageListGrpcDTO), global::ContractManagement.API.Protos.MarketAreaPageListGrpcDTO.Parser, new[]{ "Subset", "Count", "PageCount", "TotalItemCount", "Skip", "Take", "HasPreviousPage", "HasNextPage", "IsFirstPage", "IsLastPage" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MarketAreaListGrpcDTO : pb::IMessage<MarketAreaListGrpcDTO> {
    private static readonly pb::MessageParser<MarketAreaListGrpcDTO> _parser = new pb::MessageParser<MarketAreaListGrpcDTO>(() => new MarketAreaListGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketAreaListGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.MarketareasReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketAreaListGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketAreaListGrpcDTO(MarketAreaListGrpcDTO other) : this() {
      marketAreaDtos_ = other.marketAreaDtos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketAreaListGrpcDTO Clone() {
      return new MarketAreaListGrpcDTO(this);
    }

    /// <summary>Field number for the "marketAreaDtos" field.</summary>
    public const int MarketAreaDtosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.MarketAreaGrpcDTO> _repeated_marketAreaDtos_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.MarketAreaGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.MarketAreaGrpcDTO> marketAreaDtos_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.MarketAreaGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.MarketAreaGrpcDTO> MarketAreaDtos {
      get { return marketAreaDtos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketAreaListGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketAreaListGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!marketAreaDtos_.Equals(other.marketAreaDtos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= marketAreaDtos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      marketAreaDtos_.WriteTo(output, _repeated_marketAreaDtos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += marketAreaDtos_.CalculateSize(_repeated_marketAreaDtos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketAreaListGrpcDTO other) {
      if (other == null) {
        return;
      }
      marketAreaDtos_.Add(other.marketAreaDtos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            marketAreaDtos_.AddEntriesFrom(input, _repeated_marketAreaDtos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MarketAreaGrpcDTO : pb::IMessage<MarketAreaGrpcDTO> {
    private static readonly pb::MessageParser<MarketAreaGrpcDTO> _parser = new pb::MessageParser<MarketAreaGrpcDTO>(() => new MarketAreaGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketAreaGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.MarketareasReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketAreaGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketAreaGrpcDTO(MarketAreaGrpcDTO other) : this() {
      MarketName = other.MarketName;
      MarketCode = other.MarketCode;
      Id = other.Id;
      ParentId = other.ParentId;
      TreeLevel = other.TreeLevel;
      TreePath = other.TreePath;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketAreaGrpcDTO Clone() {
      return new MarketAreaGrpcDTO(this);
    }

    /// <summary>Field number for the "marketName" field.</summary>
    public const int MarketNameFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_marketName_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string marketName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketName {
      get { return marketName_; }
      set {
        marketName_ = value;
      }
    }


    /// <summary>Field number for the "marketCode" field.</summary>
    public const int MarketCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_marketCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string marketCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MarketCode {
      get { return marketCode_; }
      set {
        marketCode_ = value;
      }
    }


    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_id_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "parentId" field.</summary>
    public const int ParentIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_parentId_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? parentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ParentId {
      get { return parentId_; }
      set {
        parentId_ = value;
      }
    }


    /// <summary>Field number for the "treeLevel" field.</summary>
    public const int TreeLevelFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_treeLevel_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? treeLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TreeLevel {
      get { return treeLevel_; }
      set {
        treeLevel_ = value;
      }
    }


    /// <summary>Field number for the "treePath" field.</summary>
    public const int TreePathFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_treePath_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string treePath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TreePath {
      get { return treePath_; }
      set {
        treePath_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketAreaGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketAreaGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MarketName != other.MarketName) return false;
      if (MarketCode != other.MarketCode) return false;
      if (Id != other.Id) return false;
      if (ParentId != other.ParentId) return false;
      if (TreeLevel != other.TreeLevel) return false;
      if (TreePath != other.TreePath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (marketName_ != null) hash ^= MarketName.GetHashCode();
      if (marketCode_ != null) hash ^= MarketCode.GetHashCode();
      if (id_ != null) hash ^= Id.GetHashCode();
      if (parentId_ != null) hash ^= ParentId.GetHashCode();
      if (treeLevel_ != null) hash ^= TreeLevel.GetHashCode();
      if (treePath_ != null) hash ^= TreePath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (marketName_ != null) {
        _single_marketName_codec.WriteTagAndValue(output, MarketName);
      }
      if (marketCode_ != null) {
        _single_marketCode_codec.WriteTagAndValue(output, MarketCode);
      }
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (parentId_ != null) {
        _single_parentId_codec.WriteTagAndValue(output, ParentId);
      }
      if (treeLevel_ != null) {
        _single_treeLevel_codec.WriteTagAndValue(output, TreeLevel);
      }
      if (treePath_ != null) {
        _single_treePath_codec.WriteTagAndValue(output, TreePath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (marketName_ != null) {
        size += _single_marketName_codec.CalculateSizeWithTag(MarketName);
      }
      if (marketCode_ != null) {
        size += _single_marketCode_codec.CalculateSizeWithTag(MarketCode);
      }
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (parentId_ != null) {
        size += _single_parentId_codec.CalculateSizeWithTag(ParentId);
      }
      if (treeLevel_ != null) {
        size += _single_treeLevel_codec.CalculateSizeWithTag(TreeLevel);
      }
      if (treePath_ != null) {
        size += _single_treePath_codec.CalculateSizeWithTag(TreePath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketAreaGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.marketName_ != null) {
        if (marketName_ == null || other.MarketName != "") {
          MarketName = other.MarketName;
        }
      }
      if (other.marketCode_ != null) {
        if (marketCode_ == null || other.MarketCode != "") {
          MarketCode = other.MarketCode;
        }
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0) {
          Id = other.Id;
        }
      }
      if (other.parentId_ != null) {
        if (parentId_ == null || other.ParentId != 0) {
          ParentId = other.ParentId;
        }
      }
      if (other.treeLevel_ != null) {
        if (treeLevel_ == null || other.TreeLevel != 0) {
          TreeLevel = other.TreeLevel;
        }
      }
      if (other.treePath_ != null) {
        if (treePath_ == null || other.TreePath != "") {
          TreePath = other.TreePath;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_marketName_codec.Read(input);
            if (marketName_ == null || value != "") {
              MarketName = value;
            }
            break;
          }
          case 18: {
            string value = _single_marketCode_codec.Read(input);
            if (marketCode_ == null || value != "") {
              MarketCode = value;
            }
            break;
          }
          case 26: {
            int? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0) {
              Id = value;
            }
            break;
          }
          case 34: {
            int? value = _single_parentId_codec.Read(input);
            if (parentId_ == null || value != 0) {
              ParentId = value;
            }
            break;
          }
          case 42: {
            int? value = _single_treeLevel_codec.Read(input);
            if (treeLevel_ == null || value != 0) {
              TreeLevel = value;
            }
            break;
          }
          case 50: {
            string value = _single_treePath_codec.Read(input);
            if (treePath_ == null || value != "") {
              TreePath = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class MarketAreaPageListGrpcDTO : pb::IMessage<MarketAreaPageListGrpcDTO> {
    private static readonly pb::MessageParser<MarketAreaPageListGrpcDTO> _parser = new pb::MessageParser<MarketAreaPageListGrpcDTO>(() => new MarketAreaPageListGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketAreaPageListGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.MarketareasReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketAreaPageListGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketAreaPageListGrpcDTO(MarketAreaPageListGrpcDTO other) : this() {
      subset_ = other.subset_.Clone();
      Count = other.Count;
      PageCount = other.PageCount;
      TotalItemCount = other.TotalItemCount;
      Skip = other.Skip;
      Take = other.Take;
      hasPreviousPage_ = other.hasPreviousPage_;
      hasNextPage_ = other.hasNextPage_;
      isFirstPage_ = other.isFirstPage_;
      isLastPage_ = other.isLastPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketAreaPageListGrpcDTO Clone() {
      return new MarketAreaPageListGrpcDTO(this);
    }

    /// <summary>Field number for the "subset" field.</summary>
    public const int SubsetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.MarketAreaGrpcDTO> _repeated_subset_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.MarketAreaGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.MarketAreaGrpcDTO> subset_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.MarketAreaGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.MarketAreaGrpcDTO> Subset {
      get { return subset_; }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_count_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }


    /// <summary>Field number for the "pageCount" field.</summary>
    public const int PageCountFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_pageCount_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? pageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PageCount {
      get { return pageCount_; }
      set {
        pageCount_ = value;
      }
    }


    /// <summary>Field number for the "totalItemCount" field.</summary>
    public const int TotalItemCountFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_totalItemCount_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? totalItemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TotalItemCount {
      get { return totalItemCount_; }
      set {
        totalItemCount_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "hasPreviousPage" field.</summary>
    public const int HasPreviousPageFieldNumber = 7;
    private bool hasPreviousPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreviousPage {
      get { return hasPreviousPage_; }
      set {
        hasPreviousPage_ = value;
      }
    }

    /// <summary>Field number for the "hasNextPage" field.</summary>
    public const int HasNextPageFieldNumber = 8;
    private bool hasNextPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPage {
      get { return hasNextPage_; }
      set {
        hasNextPage_ = value;
      }
    }

    /// <summary>Field number for the "isFirstPage" field.</summary>
    public const int IsFirstPageFieldNumber = 9;
    private bool isFirstPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirstPage {
      get { return isFirstPage_; }
      set {
        isFirstPage_ = value;
      }
    }

    /// <summary>Field number for the "isLastPage" field.</summary>
    public const int IsLastPageFieldNumber = 10;
    private bool isLastPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastPage {
      get { return isLastPage_; }
      set {
        isLastPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketAreaPageListGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketAreaPageListGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subset_.Equals(other.subset_)) return false;
      if (Count != other.Count) return false;
      if (PageCount != other.PageCount) return false;
      if (TotalItemCount != other.TotalItemCount) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (HasPreviousPage != other.HasPreviousPage) return false;
      if (HasNextPage != other.HasNextPage) return false;
      if (IsFirstPage != other.IsFirstPage) return false;
      if (IsLastPage != other.IsLastPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subset_.GetHashCode();
      if (count_ != null) hash ^= Count.GetHashCode();
      if (pageCount_ != null) hash ^= PageCount.GetHashCode();
      if (totalItemCount_ != null) hash ^= TotalItemCount.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (HasPreviousPage != false) hash ^= HasPreviousPage.GetHashCode();
      if (HasNextPage != false) hash ^= HasNextPage.GetHashCode();
      if (IsFirstPage != false) hash ^= IsFirstPage.GetHashCode();
      if (IsLastPage != false) hash ^= IsLastPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subset_.WriteTo(output, _repeated_subset_codec);
      if (count_ != null) {
        _single_count_codec.WriteTagAndValue(output, Count);
      }
      if (pageCount_ != null) {
        _single_pageCount_codec.WriteTagAndValue(output, PageCount);
      }
      if (totalItemCount_ != null) {
        _single_totalItemCount_codec.WriteTagAndValue(output, TotalItemCount);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (HasPreviousPage != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasPreviousPage);
      }
      if (HasNextPage != false) {
        output.WriteRawTag(64);
        output.WriteBool(HasNextPage);
      }
      if (IsFirstPage != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsFirstPage);
      }
      if (IsLastPage != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsLastPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subset_.CalculateSize(_repeated_subset_codec);
      if (count_ != null) {
        size += _single_count_codec.CalculateSizeWithTag(Count);
      }
      if (pageCount_ != null) {
        size += _single_pageCount_codec.CalculateSizeWithTag(PageCount);
      }
      if (totalItemCount_ != null) {
        size += _single_totalItemCount_codec.CalculateSizeWithTag(TotalItemCount);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (HasPreviousPage != false) {
        size += 1 + 1;
      }
      if (HasNextPage != false) {
        size += 1 + 1;
      }
      if (IsFirstPage != false) {
        size += 1 + 1;
      }
      if (IsLastPage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketAreaPageListGrpcDTO other) {
      if (other == null) {
        return;
      }
      subset_.Add(other.subset_);
      if (other.count_ != null) {
        if (count_ == null || other.Count != 0) {
          Count = other.Count;
        }
      }
      if (other.pageCount_ != null) {
        if (pageCount_ == null || other.PageCount != 0) {
          PageCount = other.PageCount;
        }
      }
      if (other.totalItemCount_ != null) {
        if (totalItemCount_ == null || other.TotalItemCount != 0) {
          TotalItemCount = other.TotalItemCount;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.HasPreviousPage != false) {
        HasPreviousPage = other.HasPreviousPage;
      }
      if (other.HasNextPage != false) {
        HasNextPage = other.HasNextPage;
      }
      if (other.IsFirstPage != false) {
        IsFirstPage = other.IsFirstPage;
      }
      if (other.IsLastPage != false) {
        IsLastPage = other.IsLastPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subset_.AddEntriesFrom(input, _repeated_subset_codec);
            break;
          }
          case 18: {
            int? value = _single_count_codec.Read(input);
            if (count_ == null || value != 0) {
              Count = value;
            }
            break;
          }
          case 26: {
            int? value = _single_pageCount_codec.Read(input);
            if (pageCount_ == null || value != 0) {
              PageCount = value;
            }
            break;
          }
          case 34: {
            int? value = _single_totalItemCount_codec.Read(input);
            if (totalItemCount_ == null || value != 0) {
              TotalItemCount = value;
            }
            break;
          }
          case 42: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 50: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 56: {
            HasPreviousPage = input.ReadBool();
            break;
          }
          case 64: {
            HasNextPage = input.ReadBool();
            break;
          }
          case 72: {
            IsFirstPage = input.ReadBool();
            break;
          }
          case 80: {
            IsLastPage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
