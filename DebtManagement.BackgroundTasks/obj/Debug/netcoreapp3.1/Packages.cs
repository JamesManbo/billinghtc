// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/packages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ContractManagement.API.Protos {

  /// <summary>Holder for reflection information generated from Protos/packages.proto</summary>
  public static partial class PackagesReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/packages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PackagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcm90b3MvcGFja2FnZXMucHJvdG8SFUNvbnRyYWN0TWFuYWdlbWVudEFw",
            "aRoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHku",
            "cHJvdG8aE1Byb3Rvcy9jb21tb24ucHJvdG8i9QIKElBhY2thZ2VSZXF1ZXN0",
            "R3JwYxItCgdvcmRlckJ5GAEgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmlu",
            "Z1ZhbHVlEikKA2RpchgCIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRIpCgRza2lwGAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFs",
            "dWUSKQoEdGFrZRgEIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVl",
            "Ei0KB2ZpbHRlcnMYBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSDgoGcGFnaW5nGAYgASgIEi4KCGtleXdvcmRzGAcgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEi4KCXNlcnZpY2VJZBgIIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEhAKCG9ubHlSb290GAkgASgIIlwK",
            "Hkxpc3RTZXJ2aWNlUGFja2FnZUdycGNSZXNwb25zZRI6CgtwYWNrYWdlRHRv",
            "cxgBIAMoCzIlLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5QYWNrYWdlR3JwY0RU",
            "TyKNAwoWUGFja2FnZVBhZ2VMaXN0R3JwY0RUTxI1CgZzdWJzZXQYASADKAsy",
            "JS5Db250cmFjdE1hbmFnZW1lbnRBcGkuUGFja2FnZUdycGNEVE8SKgoFY291",
            "bnQYAiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIuCglwYWdl",
            "Q291bnQYAyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIzCg50",
            "b3RhbEl0ZW1Db3VudBgEIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZh",
            "bHVlEikKBHNraXAYBSABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1",
            "ZRIpCgR0YWtlGAYgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUS",
            "FwoPaGFzUHJldmlvdXNQYWdlGAcgASgIEhMKC2hhc05leHRQYWdlGAggASgI",
            "EhMKC2lzRmlyc3RQYWdlGAkgASgIEhIKCmlzTGFzdFBhZ2UYCiABKAgi4QUK",
            "DlBhY2thZ2VHcnBjRFRPEicKAmlkGAEgASgLMhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDMyVmFsdWUSLwoJc2VydmljZUlkGAIgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEjEKC3NlcnZpY2VOYW1lGAMgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlEjEKC3BhY2thZ2VDb2RlGAQgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjEKC3BhY2thZ2VOYW1lGAUg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjQKDmJhbmR3aWR0",
            "aExhYmVsGAYgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjsK",
            "FmludGVybmF0aW9uYWxCYW5kd2lkdGgYByABKAsyGy5nb29nbGUucHJvdG9i",
            "dWYuRmxvYXRWYWx1ZRI/ChlpbnRlcm5hdGlvbmFsQmFuZHdpZHRoVW9tGAgg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEjYKEWRvbWVzdGlj",
            "QmFuZHdpZHRoGAkgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkZsb2F0VmFsdWUS",
            "OgoUZG9tZXN0aWNCYW5kd2lkdGhVb20YCiABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSKwoFcHJpY2UYCyABKAsyHC5Db250cmFjdE1hbmFn",
            "ZW1lbnRBcGkuTW9uZXkSGQoRaGFzVG9Db2xsZWN0TW9uZXkYDCABKAgSOwoM",
            "cGFja2FnZUltYWdlGA0gASgLMiUuQ29udHJhY3RNYW5hZ2VtZW50QXBpLlBp",
            "Y3R1cmVEVE9HcnBjEhsKE2hhc1N0YXJ0QW5kRW5kUG9pbnQYDiABKAgSEgoK",
            "aXNIYXNQcmljZRgPIAEoCDLmAQoeVGVsY29TZXJ2aWNlUGFja2FnZUdycGNT",
            "ZXJ2aWNlEmkKC0dldFBhY2thZ2VzEikuQ29udHJhY3RNYW5hZ2VtZW50QXBp",
            "LlBhY2thZ2VSZXF1ZXN0R3JwYxotLkNvbnRyYWN0TWFuYWdlbWVudEFwaS5Q",
            "YWNrYWdlUGFnZUxpc3RHcnBjRFRPIgASWQoGR2V0QWxsEhYuZ29vZ2xlLnBy",
            "b3RvYnVmLkVtcHR5GjUuQ29udHJhY3RNYW5hZ2VtZW50QXBpLkxpc3RTZXJ2",
            "aWNlUGFja2FnZUdycGNSZXNwb25zZSIAQiCqAh1Db250cmFjdE1hbmFnZW1l",
            "bnQuQVBJLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::ContractManagement.API.Protos.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.PackageRequestGrpc), global::ContractManagement.API.Protos.PackageRequestGrpc.Parser, new[]{ "OrderBy", "Dir", "Skip", "Take", "Filters", "Paging", "Keywords", "ServiceId", "OnlyRoot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.ListServicePackageGrpcResponse), global::ContractManagement.API.Protos.ListServicePackageGrpcResponse.Parser, new[]{ "PackageDtos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.PackagePageListGrpcDTO), global::ContractManagement.API.Protos.PackagePageListGrpcDTO.Parser, new[]{ "Subset", "Count", "PageCount", "TotalItemCount", "Skip", "Take", "HasPreviousPage", "HasNextPage", "IsFirstPage", "IsLastPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ContractManagement.API.Protos.PackageGrpcDTO), global::ContractManagement.API.Protos.PackageGrpcDTO.Parser, new[]{ "Id", "ServiceId", "ServiceName", "PackageCode", "PackageName", "BandwidthLabel", "InternationalBandwidth", "InternationalBandwidthUom", "DomesticBandwidth", "DomesticBandwidthUom", "Price", "HasToCollectMoney", "PackageImage", "HasStartAndEndPoint", "IsHasPrice" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PackageRequestGrpc : pb::IMessage<PackageRequestGrpc> {
    private static readonly pb::MessageParser<PackageRequestGrpc> _parser = new pb::MessageParser<PackageRequestGrpc>(() => new PackageRequestGrpc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageRequestGrpc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.PackagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageRequestGrpc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageRequestGrpc(PackageRequestGrpc other) : this() {
      OrderBy = other.OrderBy;
      Dir = other.Dir;
      Skip = other.Skip;
      Take = other.Take;
      Filters = other.Filters;
      paging_ = other.paging_;
      Keywords = other.Keywords;
      ServiceId = other.ServiceId;
      onlyRoot_ = other.onlyRoot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageRequestGrpc Clone() {
      return new PackageRequestGrpc(this);
    }

    /// <summary>Field number for the "orderBy" field.</summary>
    public const int OrderByFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_orderBy_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string orderBy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = value;
      }
    }


    /// <summary>Field number for the "dir" field.</summary>
    public const int DirFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_dir_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string dir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Dir {
      get { return dir_; }
      set {
        dir_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "filters" field.</summary>
    public const int FiltersFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_filters_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string filters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filters {
      get { return filters_; }
      set {
        filters_ = value;
      }
    }


    /// <summary>Field number for the "paging" field.</summary>
    public const int PagingFieldNumber = 6;
    private bool paging_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Paging {
      get { return paging_; }
      set {
        paging_ = value;
      }
    }

    /// <summary>Field number for the "keywords" field.</summary>
    public const int KeywordsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_keywords_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string keywords_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Keywords {
      get { return keywords_; }
      set {
        keywords_ = value;
      }
    }


    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 8;
    private static readonly pb::FieldCodec<int?> _single_serviceId_codec = pb::FieldCodec.ForStructWrapper<int>(66);
    private int? serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }


    /// <summary>Field number for the "onlyRoot" field.</summary>
    public const int OnlyRootFieldNumber = 9;
    private bool onlyRoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OnlyRoot {
      get { return onlyRoot_; }
      set {
        onlyRoot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageRequestGrpc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageRequestGrpc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderBy != other.OrderBy) return false;
      if (Dir != other.Dir) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (Filters != other.Filters) return false;
      if (Paging != other.Paging) return false;
      if (Keywords != other.Keywords) return false;
      if (ServiceId != other.ServiceId) return false;
      if (OnlyRoot != other.OnlyRoot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (orderBy_ != null) hash ^= OrderBy.GetHashCode();
      if (dir_ != null) hash ^= Dir.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (filters_ != null) hash ^= Filters.GetHashCode();
      if (Paging != false) hash ^= Paging.GetHashCode();
      if (keywords_ != null) hash ^= Keywords.GetHashCode();
      if (serviceId_ != null) hash ^= ServiceId.GetHashCode();
      if (OnlyRoot != false) hash ^= OnlyRoot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (orderBy_ != null) {
        _single_orderBy_codec.WriteTagAndValue(output, OrderBy);
      }
      if (dir_ != null) {
        _single_dir_codec.WriteTagAndValue(output, Dir);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (filters_ != null) {
        _single_filters_codec.WriteTagAndValue(output, Filters);
      }
      if (Paging != false) {
        output.WriteRawTag(48);
        output.WriteBool(Paging);
      }
      if (keywords_ != null) {
        _single_keywords_codec.WriteTagAndValue(output, Keywords);
      }
      if (serviceId_ != null) {
        _single_serviceId_codec.WriteTagAndValue(output, ServiceId);
      }
      if (OnlyRoot != false) {
        output.WriteRawTag(72);
        output.WriteBool(OnlyRoot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (orderBy_ != null) {
        size += _single_orderBy_codec.CalculateSizeWithTag(OrderBy);
      }
      if (dir_ != null) {
        size += _single_dir_codec.CalculateSizeWithTag(Dir);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (filters_ != null) {
        size += _single_filters_codec.CalculateSizeWithTag(Filters);
      }
      if (Paging != false) {
        size += 1 + 1;
      }
      if (keywords_ != null) {
        size += _single_keywords_codec.CalculateSizeWithTag(Keywords);
      }
      if (serviceId_ != null) {
        size += _single_serviceId_codec.CalculateSizeWithTag(ServiceId);
      }
      if (OnlyRoot != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageRequestGrpc other) {
      if (other == null) {
        return;
      }
      if (other.orderBy_ != null) {
        if (orderBy_ == null || other.OrderBy != "") {
          OrderBy = other.OrderBy;
        }
      }
      if (other.dir_ != null) {
        if (dir_ == null || other.Dir != "") {
          Dir = other.Dir;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.filters_ != null) {
        if (filters_ == null || other.Filters != "") {
          Filters = other.Filters;
        }
      }
      if (other.Paging != false) {
        Paging = other.Paging;
      }
      if (other.keywords_ != null) {
        if (keywords_ == null || other.Keywords != "") {
          Keywords = other.Keywords;
        }
      }
      if (other.serviceId_ != null) {
        if (serviceId_ == null || other.ServiceId != 0) {
          ServiceId = other.ServiceId;
        }
      }
      if (other.OnlyRoot != false) {
        OnlyRoot = other.OnlyRoot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_orderBy_codec.Read(input);
            if (orderBy_ == null || value != "") {
              OrderBy = value;
            }
            break;
          }
          case 18: {
            string value = _single_dir_codec.Read(input);
            if (dir_ == null || value != "") {
              Dir = value;
            }
            break;
          }
          case 26: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 34: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 42: {
            string value = _single_filters_codec.Read(input);
            if (filters_ == null || value != "") {
              Filters = value;
            }
            break;
          }
          case 48: {
            Paging = input.ReadBool();
            break;
          }
          case 58: {
            string value = _single_keywords_codec.Read(input);
            if (keywords_ == null || value != "") {
              Keywords = value;
            }
            break;
          }
          case 66: {
            int? value = _single_serviceId_codec.Read(input);
            if (serviceId_ == null || value != 0) {
              ServiceId = value;
            }
            break;
          }
          case 72: {
            OnlyRoot = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListServicePackageGrpcResponse : pb::IMessage<ListServicePackageGrpcResponse> {
    private static readonly pb::MessageParser<ListServicePackageGrpcResponse> _parser = new pb::MessageParser<ListServicePackageGrpcResponse>(() => new ListServicePackageGrpcResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListServicePackageGrpcResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.PackagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListServicePackageGrpcResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListServicePackageGrpcResponse(ListServicePackageGrpcResponse other) : this() {
      packageDtos_ = other.packageDtos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListServicePackageGrpcResponse Clone() {
      return new ListServicePackageGrpcResponse(this);
    }

    /// <summary>Field number for the "packageDtos" field.</summary>
    public const int PackageDtosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.PackageGrpcDTO> _repeated_packageDtos_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.PackageGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.PackageGrpcDTO> packageDtos_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.PackageGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.PackageGrpcDTO> PackageDtos {
      get { return packageDtos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListServicePackageGrpcResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListServicePackageGrpcResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!packageDtos_.Equals(other.packageDtos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= packageDtos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      packageDtos_.WriteTo(output, _repeated_packageDtos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += packageDtos_.CalculateSize(_repeated_packageDtos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListServicePackageGrpcResponse other) {
      if (other == null) {
        return;
      }
      packageDtos_.Add(other.packageDtos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            packageDtos_.AddEntriesFrom(input, _repeated_packageDtos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PackagePageListGrpcDTO : pb::IMessage<PackagePageListGrpcDTO> {
    private static readonly pb::MessageParser<PackagePageListGrpcDTO> _parser = new pb::MessageParser<PackagePageListGrpcDTO>(() => new PackagePageListGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackagePageListGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.PackagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackagePageListGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackagePageListGrpcDTO(PackagePageListGrpcDTO other) : this() {
      subset_ = other.subset_.Clone();
      Count = other.Count;
      PageCount = other.PageCount;
      TotalItemCount = other.TotalItemCount;
      Skip = other.Skip;
      Take = other.Take;
      hasPreviousPage_ = other.hasPreviousPage_;
      hasNextPage_ = other.hasNextPage_;
      isFirstPage_ = other.isFirstPage_;
      isLastPage_ = other.isLastPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackagePageListGrpcDTO Clone() {
      return new PackagePageListGrpcDTO(this);
    }

    /// <summary>Field number for the "subset" field.</summary>
    public const int SubsetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ContractManagement.API.Protos.PackageGrpcDTO> _repeated_subset_codec
        = pb::FieldCodec.ForMessage(10, global::ContractManagement.API.Protos.PackageGrpcDTO.Parser);
    private readonly pbc::RepeatedField<global::ContractManagement.API.Protos.PackageGrpcDTO> subset_ = new pbc::RepeatedField<global::ContractManagement.API.Protos.PackageGrpcDTO>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ContractManagement.API.Protos.PackageGrpcDTO> Subset {
      get { return subset_; }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_count_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }


    /// <summary>Field number for the "pageCount" field.</summary>
    public const int PageCountFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_pageCount_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? pageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? PageCount {
      get { return pageCount_; }
      set {
        pageCount_ = value;
      }
    }


    /// <summary>Field number for the "totalItemCount" field.</summary>
    public const int TotalItemCountFieldNumber = 4;
    private static readonly pb::FieldCodec<int?> _single_totalItemCount_codec = pb::FieldCodec.ForStructWrapper<int>(34);
    private int? totalItemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? TotalItemCount {
      get { return totalItemCount_; }
      set {
        totalItemCount_ = value;
      }
    }


    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 5;
    private static readonly pb::FieldCodec<int?> _single_skip_codec = pb::FieldCodec.ForStructWrapper<int>(42);
    private int? skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }


    /// <summary>Field number for the "take" field.</summary>
    public const int TakeFieldNumber = 6;
    private static readonly pb::FieldCodec<int?> _single_take_codec = pb::FieldCodec.ForStructWrapper<int>(50);
    private int? take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }


    /// <summary>Field number for the "hasPreviousPage" field.</summary>
    public const int HasPreviousPageFieldNumber = 7;
    private bool hasPreviousPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreviousPage {
      get { return hasPreviousPage_; }
      set {
        hasPreviousPage_ = value;
      }
    }

    /// <summary>Field number for the "hasNextPage" field.</summary>
    public const int HasNextPageFieldNumber = 8;
    private bool hasNextPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNextPage {
      get { return hasNextPage_; }
      set {
        hasNextPage_ = value;
      }
    }

    /// <summary>Field number for the "isFirstPage" field.</summary>
    public const int IsFirstPageFieldNumber = 9;
    private bool isFirstPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFirstPage {
      get { return isFirstPage_; }
      set {
        isFirstPage_ = value;
      }
    }

    /// <summary>Field number for the "isLastPage" field.</summary>
    public const int IsLastPageFieldNumber = 10;
    private bool isLastPage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastPage {
      get { return isLastPage_; }
      set {
        isLastPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackagePageListGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackagePageListGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subset_.Equals(other.subset_)) return false;
      if (Count != other.Count) return false;
      if (PageCount != other.PageCount) return false;
      if (TotalItemCount != other.TotalItemCount) return false;
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (HasPreviousPage != other.HasPreviousPage) return false;
      if (HasNextPage != other.HasNextPage) return false;
      if (IsFirstPage != other.IsFirstPage) return false;
      if (IsLastPage != other.IsLastPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subset_.GetHashCode();
      if (count_ != null) hash ^= Count.GetHashCode();
      if (pageCount_ != null) hash ^= PageCount.GetHashCode();
      if (totalItemCount_ != null) hash ^= TotalItemCount.GetHashCode();
      if (skip_ != null) hash ^= Skip.GetHashCode();
      if (take_ != null) hash ^= Take.GetHashCode();
      if (HasPreviousPage != false) hash ^= HasPreviousPage.GetHashCode();
      if (HasNextPage != false) hash ^= HasNextPage.GetHashCode();
      if (IsFirstPage != false) hash ^= IsFirstPage.GetHashCode();
      if (IsLastPage != false) hash ^= IsLastPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subset_.WriteTo(output, _repeated_subset_codec);
      if (count_ != null) {
        _single_count_codec.WriteTagAndValue(output, Count);
      }
      if (pageCount_ != null) {
        _single_pageCount_codec.WriteTagAndValue(output, PageCount);
      }
      if (totalItemCount_ != null) {
        _single_totalItemCount_codec.WriteTagAndValue(output, TotalItemCount);
      }
      if (skip_ != null) {
        _single_skip_codec.WriteTagAndValue(output, Skip);
      }
      if (take_ != null) {
        _single_take_codec.WriteTagAndValue(output, Take);
      }
      if (HasPreviousPage != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasPreviousPage);
      }
      if (HasNextPage != false) {
        output.WriteRawTag(64);
        output.WriteBool(HasNextPage);
      }
      if (IsFirstPage != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsFirstPage);
      }
      if (IsLastPage != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsLastPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subset_.CalculateSize(_repeated_subset_codec);
      if (count_ != null) {
        size += _single_count_codec.CalculateSizeWithTag(Count);
      }
      if (pageCount_ != null) {
        size += _single_pageCount_codec.CalculateSizeWithTag(PageCount);
      }
      if (totalItemCount_ != null) {
        size += _single_totalItemCount_codec.CalculateSizeWithTag(TotalItemCount);
      }
      if (skip_ != null) {
        size += _single_skip_codec.CalculateSizeWithTag(Skip);
      }
      if (take_ != null) {
        size += _single_take_codec.CalculateSizeWithTag(Take);
      }
      if (HasPreviousPage != false) {
        size += 1 + 1;
      }
      if (HasNextPage != false) {
        size += 1 + 1;
      }
      if (IsFirstPage != false) {
        size += 1 + 1;
      }
      if (IsLastPage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackagePageListGrpcDTO other) {
      if (other == null) {
        return;
      }
      subset_.Add(other.subset_);
      if (other.count_ != null) {
        if (count_ == null || other.Count != 0) {
          Count = other.Count;
        }
      }
      if (other.pageCount_ != null) {
        if (pageCount_ == null || other.PageCount != 0) {
          PageCount = other.PageCount;
        }
      }
      if (other.totalItemCount_ != null) {
        if (totalItemCount_ == null || other.TotalItemCount != 0) {
          TotalItemCount = other.TotalItemCount;
        }
      }
      if (other.skip_ != null) {
        if (skip_ == null || other.Skip != 0) {
          Skip = other.Skip;
        }
      }
      if (other.take_ != null) {
        if (take_ == null || other.Take != 0) {
          Take = other.Take;
        }
      }
      if (other.HasPreviousPage != false) {
        HasPreviousPage = other.HasPreviousPage;
      }
      if (other.HasNextPage != false) {
        HasNextPage = other.HasNextPage;
      }
      if (other.IsFirstPage != false) {
        IsFirstPage = other.IsFirstPage;
      }
      if (other.IsLastPage != false) {
        IsLastPage = other.IsLastPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subset_.AddEntriesFrom(input, _repeated_subset_codec);
            break;
          }
          case 18: {
            int? value = _single_count_codec.Read(input);
            if (count_ == null || value != 0) {
              Count = value;
            }
            break;
          }
          case 26: {
            int? value = _single_pageCount_codec.Read(input);
            if (pageCount_ == null || value != 0) {
              PageCount = value;
            }
            break;
          }
          case 34: {
            int? value = _single_totalItemCount_codec.Read(input);
            if (totalItemCount_ == null || value != 0) {
              TotalItemCount = value;
            }
            break;
          }
          case 42: {
            int? value = _single_skip_codec.Read(input);
            if (skip_ == null || value != 0) {
              Skip = value;
            }
            break;
          }
          case 50: {
            int? value = _single_take_codec.Read(input);
            if (take_ == null || value != 0) {
              Take = value;
            }
            break;
          }
          case 56: {
            HasPreviousPage = input.ReadBool();
            break;
          }
          case 64: {
            HasNextPage = input.ReadBool();
            break;
          }
          case 72: {
            IsFirstPage = input.ReadBool();
            break;
          }
          case 80: {
            IsLastPage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PackageGrpcDTO : pb::IMessage<PackageGrpcDTO> {
    private static readonly pb::MessageParser<PackageGrpcDTO> _parser = new pb::MessageParser<PackageGrpcDTO>(() => new PackageGrpcDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PackageGrpcDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ContractManagement.API.Protos.PackagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageGrpcDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageGrpcDTO(PackageGrpcDTO other) : this() {
      Id = other.Id;
      ServiceId = other.ServiceId;
      ServiceName = other.ServiceName;
      PackageCode = other.PackageCode;
      PackageName = other.PackageName;
      BandwidthLabel = other.BandwidthLabel;
      InternationalBandwidth = other.InternationalBandwidth;
      InternationalBandwidthUom = other.InternationalBandwidthUom;
      DomesticBandwidth = other.DomesticBandwidth;
      DomesticBandwidthUom = other.DomesticBandwidthUom;
      price_ = other.price_ != null ? other.price_.Clone() : null;
      hasToCollectMoney_ = other.hasToCollectMoney_;
      packageImage_ = other.packageImage_ != null ? other.packageImage_.Clone() : null;
      hasStartAndEndPoint_ = other.hasStartAndEndPoint_;
      isHasPrice_ = other.isHasPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageGrpcDTO Clone() {
      return new PackageGrpcDTO(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private static readonly pb::FieldCodec<int?> _single_id_codec = pb::FieldCodec.ForStructWrapper<int>(10);
    private int? id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }


    /// <summary>Field number for the "serviceId" field.</summary>
    public const int ServiceIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_serviceId_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string serviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = value;
      }
    }


    /// <summary>Field number for the "serviceName" field.</summary>
    public const int ServiceNameFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_serviceName_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string serviceName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = value;
      }
    }


    /// <summary>Field number for the "packageCode" field.</summary>
    public const int PackageCodeFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _single_packageCode_codec = pb::FieldCodec.ForClassWrapper<string>(34);
    private string packageCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageCode {
      get { return packageCode_; }
      set {
        packageCode_ = value;
      }
    }


    /// <summary>Field number for the "packageName" field.</summary>
    public const int PackageNameFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_packageName_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string packageName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackageName {
      get { return packageName_; }
      set {
        packageName_ = value;
      }
    }


    /// <summary>Field number for the "bandwidthLabel" field.</summary>
    public const int BandwidthLabelFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_bandwidthLabel_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string bandwidthLabel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BandwidthLabel {
      get { return bandwidthLabel_; }
      set {
        bandwidthLabel_ = value;
      }
    }


    /// <summary>Field number for the "internationalBandwidth" field.</summary>
    public const int InternationalBandwidthFieldNumber = 7;
    private static readonly pb::FieldCodec<float?> _single_internationalBandwidth_codec = pb::FieldCodec.ForStructWrapper<float>(58);
    private float? internationalBandwidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? InternationalBandwidth {
      get { return internationalBandwidth_; }
      set {
        internationalBandwidth_ = value;
      }
    }


    /// <summary>Field number for the "internationalBandwidthUom" field.</summary>
    public const int InternationalBandwidthUomFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _single_internationalBandwidthUom_codec = pb::FieldCodec.ForClassWrapper<string>(66);
    private string internationalBandwidthUom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InternationalBandwidthUom {
      get { return internationalBandwidthUom_; }
      set {
        internationalBandwidthUom_ = value;
      }
    }


    /// <summary>Field number for the "domesticBandwidth" field.</summary>
    public const int DomesticBandwidthFieldNumber = 9;
    private static readonly pb::FieldCodec<float?> _single_domesticBandwidth_codec = pb::FieldCodec.ForStructWrapper<float>(74);
    private float? domesticBandwidth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float? DomesticBandwidth {
      get { return domesticBandwidth_; }
      set {
        domesticBandwidth_ = value;
      }
    }


    /// <summary>Field number for the "domesticBandwidthUom" field.</summary>
    public const int DomesticBandwidthUomFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_domesticBandwidthUom_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string domesticBandwidthUom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DomesticBandwidthUom {
      get { return domesticBandwidthUom_; }
      set {
        domesticBandwidthUom_ = value;
      }
    }


    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 11;
    private global::ContractManagement.API.Protos.Money price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.Money Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "hasToCollectMoney" field.</summary>
    public const int HasToCollectMoneyFieldNumber = 12;
    private bool hasToCollectMoney_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToCollectMoney {
      get { return hasToCollectMoney_; }
      set {
        hasToCollectMoney_ = value;
      }
    }

    /// <summary>Field number for the "packageImage" field.</summary>
    public const int PackageImageFieldNumber = 13;
    private global::ContractManagement.API.Protos.PictureDTOGrpc packageImage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ContractManagement.API.Protos.PictureDTOGrpc PackageImage {
      get { return packageImage_; }
      set {
        packageImage_ = value;
      }
    }

    /// <summary>Field number for the "hasStartAndEndPoint" field.</summary>
    public const int HasStartAndEndPointFieldNumber = 14;
    private bool hasStartAndEndPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStartAndEndPoint {
      get { return hasStartAndEndPoint_; }
      set {
        hasStartAndEndPoint_ = value;
      }
    }

    /// <summary>Field number for the "isHasPrice" field.</summary>
    public const int IsHasPriceFieldNumber = 15;
    private bool isHasPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsHasPrice {
      get { return isHasPrice_; }
      set {
        isHasPrice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PackageGrpcDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PackageGrpcDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ServiceId != other.ServiceId) return false;
      if (ServiceName != other.ServiceName) return false;
      if (PackageCode != other.PackageCode) return false;
      if (PackageName != other.PackageName) return false;
      if (BandwidthLabel != other.BandwidthLabel) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(InternationalBandwidth, other.InternationalBandwidth)) return false;
      if (InternationalBandwidthUom != other.InternationalBandwidthUom) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.Equals(DomesticBandwidth, other.DomesticBandwidth)) return false;
      if (DomesticBandwidthUom != other.DomesticBandwidthUom) return false;
      if (!object.Equals(Price, other.Price)) return false;
      if (HasToCollectMoney != other.HasToCollectMoney) return false;
      if (!object.Equals(PackageImage, other.PackageImage)) return false;
      if (HasStartAndEndPoint != other.HasStartAndEndPoint) return false;
      if (IsHasPrice != other.IsHasPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (serviceId_ != null) hash ^= ServiceId.GetHashCode();
      if (serviceName_ != null) hash ^= ServiceName.GetHashCode();
      if (packageCode_ != null) hash ^= PackageCode.GetHashCode();
      if (packageName_ != null) hash ^= PackageName.GetHashCode();
      if (bandwidthLabel_ != null) hash ^= BandwidthLabel.GetHashCode();
      if (internationalBandwidth_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(InternationalBandwidth);
      if (internationalBandwidthUom_ != null) hash ^= InternationalBandwidthUom.GetHashCode();
      if (domesticBandwidth_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableSingleEqualityComparer.GetHashCode(DomesticBandwidth);
      if (domesticBandwidthUom_ != null) hash ^= DomesticBandwidthUom.GetHashCode();
      if (price_ != null) hash ^= Price.GetHashCode();
      if (HasToCollectMoney != false) hash ^= HasToCollectMoney.GetHashCode();
      if (packageImage_ != null) hash ^= PackageImage.GetHashCode();
      if (HasStartAndEndPoint != false) hash ^= HasStartAndEndPoint.GetHashCode();
      if (IsHasPrice != false) hash ^= IsHasPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        _single_id_codec.WriteTagAndValue(output, Id);
      }
      if (serviceId_ != null) {
        _single_serviceId_codec.WriteTagAndValue(output, ServiceId);
      }
      if (serviceName_ != null) {
        _single_serviceName_codec.WriteTagAndValue(output, ServiceName);
      }
      if (packageCode_ != null) {
        _single_packageCode_codec.WriteTagAndValue(output, PackageCode);
      }
      if (packageName_ != null) {
        _single_packageName_codec.WriteTagAndValue(output, PackageName);
      }
      if (bandwidthLabel_ != null) {
        _single_bandwidthLabel_codec.WriteTagAndValue(output, BandwidthLabel);
      }
      if (internationalBandwidth_ != null) {
        _single_internationalBandwidth_codec.WriteTagAndValue(output, InternationalBandwidth);
      }
      if (internationalBandwidthUom_ != null) {
        _single_internationalBandwidthUom_codec.WriteTagAndValue(output, InternationalBandwidthUom);
      }
      if (domesticBandwidth_ != null) {
        _single_domesticBandwidth_codec.WriteTagAndValue(output, DomesticBandwidth);
      }
      if (domesticBandwidthUom_ != null) {
        _single_domesticBandwidthUom_codec.WriteTagAndValue(output, DomesticBandwidthUom);
      }
      if (price_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Price);
      }
      if (HasToCollectMoney != false) {
        output.WriteRawTag(96);
        output.WriteBool(HasToCollectMoney);
      }
      if (packageImage_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(PackageImage);
      }
      if (HasStartAndEndPoint != false) {
        output.WriteRawTag(112);
        output.WriteBool(HasStartAndEndPoint);
      }
      if (IsHasPrice != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsHasPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += _single_id_codec.CalculateSizeWithTag(Id);
      }
      if (serviceId_ != null) {
        size += _single_serviceId_codec.CalculateSizeWithTag(ServiceId);
      }
      if (serviceName_ != null) {
        size += _single_serviceName_codec.CalculateSizeWithTag(ServiceName);
      }
      if (packageCode_ != null) {
        size += _single_packageCode_codec.CalculateSizeWithTag(PackageCode);
      }
      if (packageName_ != null) {
        size += _single_packageName_codec.CalculateSizeWithTag(PackageName);
      }
      if (bandwidthLabel_ != null) {
        size += _single_bandwidthLabel_codec.CalculateSizeWithTag(BandwidthLabel);
      }
      if (internationalBandwidth_ != null) {
        size += _single_internationalBandwidth_codec.CalculateSizeWithTag(InternationalBandwidth);
      }
      if (internationalBandwidthUom_ != null) {
        size += _single_internationalBandwidthUom_codec.CalculateSizeWithTag(InternationalBandwidthUom);
      }
      if (domesticBandwidth_ != null) {
        size += _single_domesticBandwidth_codec.CalculateSizeWithTag(DomesticBandwidth);
      }
      if (domesticBandwidthUom_ != null) {
        size += _single_domesticBandwidthUom_codec.CalculateSizeWithTag(DomesticBandwidthUom);
      }
      if (price_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
      }
      if (HasToCollectMoney != false) {
        size += 1 + 1;
      }
      if (packageImage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PackageImage);
      }
      if (HasStartAndEndPoint != false) {
        size += 1 + 1;
      }
      if (IsHasPrice != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PackageGrpcDTO other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null || other.Id != 0) {
          Id = other.Id;
        }
      }
      if (other.serviceId_ != null) {
        if (serviceId_ == null || other.ServiceId != "") {
          ServiceId = other.ServiceId;
        }
      }
      if (other.serviceName_ != null) {
        if (serviceName_ == null || other.ServiceName != "") {
          ServiceName = other.ServiceName;
        }
      }
      if (other.packageCode_ != null) {
        if (packageCode_ == null || other.PackageCode != "") {
          PackageCode = other.PackageCode;
        }
      }
      if (other.packageName_ != null) {
        if (packageName_ == null || other.PackageName != "") {
          PackageName = other.PackageName;
        }
      }
      if (other.bandwidthLabel_ != null) {
        if (bandwidthLabel_ == null || other.BandwidthLabel != "") {
          BandwidthLabel = other.BandwidthLabel;
        }
      }
      if (other.internationalBandwidth_ != null) {
        if (internationalBandwidth_ == null || other.InternationalBandwidth != 0F) {
          InternationalBandwidth = other.InternationalBandwidth;
        }
      }
      if (other.internationalBandwidthUom_ != null) {
        if (internationalBandwidthUom_ == null || other.InternationalBandwidthUom != "") {
          InternationalBandwidthUom = other.InternationalBandwidthUom;
        }
      }
      if (other.domesticBandwidth_ != null) {
        if (domesticBandwidth_ == null || other.DomesticBandwidth != 0F) {
          DomesticBandwidth = other.DomesticBandwidth;
        }
      }
      if (other.domesticBandwidthUom_ != null) {
        if (domesticBandwidthUom_ == null || other.DomesticBandwidthUom != "") {
          DomesticBandwidthUom = other.DomesticBandwidthUom;
        }
      }
      if (other.price_ != null) {
        if (price_ == null) {
          Price = new global::ContractManagement.API.Protos.Money();
        }
        Price.MergeFrom(other.Price);
      }
      if (other.HasToCollectMoney != false) {
        HasToCollectMoney = other.HasToCollectMoney;
      }
      if (other.packageImage_ != null) {
        if (packageImage_ == null) {
          PackageImage = new global::ContractManagement.API.Protos.PictureDTOGrpc();
        }
        PackageImage.MergeFrom(other.PackageImage);
      }
      if (other.HasStartAndEndPoint != false) {
        HasStartAndEndPoint = other.HasStartAndEndPoint;
      }
      if (other.IsHasPrice != false) {
        IsHasPrice = other.IsHasPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            int? value = _single_id_codec.Read(input);
            if (id_ == null || value != 0) {
              Id = value;
            }
            break;
          }
          case 18: {
            string value = _single_serviceId_codec.Read(input);
            if (serviceId_ == null || value != "") {
              ServiceId = value;
            }
            break;
          }
          case 26: {
            string value = _single_serviceName_codec.Read(input);
            if (serviceName_ == null || value != "") {
              ServiceName = value;
            }
            break;
          }
          case 34: {
            string value = _single_packageCode_codec.Read(input);
            if (packageCode_ == null || value != "") {
              PackageCode = value;
            }
            break;
          }
          case 42: {
            string value = _single_packageName_codec.Read(input);
            if (packageName_ == null || value != "") {
              PackageName = value;
            }
            break;
          }
          case 50: {
            string value = _single_bandwidthLabel_codec.Read(input);
            if (bandwidthLabel_ == null || value != "") {
              BandwidthLabel = value;
            }
            break;
          }
          case 58: {
            float? value = _single_internationalBandwidth_codec.Read(input);
            if (internationalBandwidth_ == null || value != 0F) {
              InternationalBandwidth = value;
            }
            break;
          }
          case 66: {
            string value = _single_internationalBandwidthUom_codec.Read(input);
            if (internationalBandwidthUom_ == null || value != "") {
              InternationalBandwidthUom = value;
            }
            break;
          }
          case 74: {
            float? value = _single_domesticBandwidth_codec.Read(input);
            if (domesticBandwidth_ == null || value != 0F) {
              DomesticBandwidth = value;
            }
            break;
          }
          case 82: {
            string value = _single_domesticBandwidthUom_codec.Read(input);
            if (domesticBandwidthUom_ == null || value != "") {
              DomesticBandwidthUom = value;
            }
            break;
          }
          case 90: {
            if (price_ == null) {
              Price = new global::ContractManagement.API.Protos.Money();
            }
            input.ReadMessage(Price);
            break;
          }
          case 96: {
            HasToCollectMoney = input.ReadBool();
            break;
          }
          case 106: {
            if (packageImage_ == null) {
              PackageImage = new global::ContractManagement.API.Protos.PictureDTOGrpc();
            }
            input.ReadMessage(PackageImage);
            break;
          }
          case 112: {
            HasStartAndEndPoint = input.ReadBool();
            break;
          }
          case 120: {
            IsHasPrice = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
