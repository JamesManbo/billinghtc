// <auto-generated />
using System;
using DebtManagement.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DebtManagement.Infrastructure.Migrations
{
    [DbContext(typeof(DebtDbContext))]
    [Migration("20210916063202_alter_stored_sp_GetReportServiceDebtData_v5")]
    partial class alter_stored_sp_GetReportServiceDebtData_v5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.BaseVoucher.CurrencyUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyUnitCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyUnitName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyUnitSymbol")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IssuingCountry")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("CurrencyUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrencyUnitCode = "VND",
                            CurrencyUnitName = "Đồng",
                            CurrencyUnitSymbol = "đ",
                            DisplayOrder = 0,
                            IsActive = true,
                            IsDeleted = false,
                            IssuingCountry = "Việt Nam"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrencyUnitCode = "USD",
                            CurrencyUnitName = "Dollar",
                            CurrencyUnitSymbol = "$",
                            DisplayOrder = 0,
                            IsActive = true,
                            IsDeleted = false,
                            IssuingCountry = "United State"
                        });
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.BaseVoucher.TemporaryGeneratingVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DebtHistoryId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ReceiptVoucherDetailId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ReceiptVoucherId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VoucherTargetId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("VoucherTaxId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptVoucherDetailId");

                    b.HasIndex("ReceiptVoucherId");

                    b.HasIndex("VoucherTargetId");

                    b.ToTable("TemporaryGeneratingVouchers");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.BaseVoucher.VoucherPaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsPassive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("VoucherPaymentMethods");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.BaseVoucher.VoucherTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserIdentityGuid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CityId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("CurrentDebt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(65,30)")
                        .HasDefaultValue(0m);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DistrictId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnterprise")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPartner")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPayer")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("TargetAddress")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("TargetBRNo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TargetCode")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("TargetEmail")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("TargetFax")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("TargetFullName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("TargetIdNo")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("TargetPhone")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("TargetTaxIdNo")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserIdentityGuid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("IdentityGuid")
                        .IsUnique();

                    b.HasIndex("OrganizationPath");

                    b.ToTable("VoucherTargets");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.BaseVoucher.VoucherTargetProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserIdentityGuid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("ClassName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("GroupIds")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("GroupNames")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<string>("IndustryIds")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("IndustryNames")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("StructureId")
                        .HasColumnType("int");

                    b.Property<string>("StructureName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TargetId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("TargetId");

                    b.ToTable("VoucherTargetProperties");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ClearingAggregate.Clearing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ApprovalUserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CalculatorUserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CancelReason")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ClearingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("ClearingTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CodeClearing")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedUserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyUnitCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CurrencyUnitId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<double>("ExchangeRate")
                        .HasColumnType("double");

                    b.Property<DateTime>("ExchangeRateApplyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MarketAreaId")
                        .HasColumnType("int");

                    b.Property<string>("MarketAreaName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("OrganizationUnitId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PaymentConfirmerUserId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TargetId")
                        .HasColumnType("int")
                        .HasMaxLength(68);

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("TotalPayment")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalReceipt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationPath");

                    b.HasIndex("TargetId");

                    b.ToTable("Clearings");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ClearingAggregate.ClearingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ClearingStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mới tạo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Đang chờ xử lý"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Đã hoàn thành"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Đã hủy"
                        });
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.Commons.AttachmentFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClearingVoucherId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int?>("ReceiptVoucherDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiptVoucherId")
                        .HasColumnType("int");

                    b.Property<string>("RedirectLink")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ResourceStorage")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClearingVoucherId");

                    b.HasIndex("OrganizationPath");

                    b.HasIndex("ReceiptVoucherDetailId");

                    b.HasIndex("ReceiptVoucherId");

                    b.ToTable("AttachmentFiles");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.Commons.PaymentMethodType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethodTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tiền mặt"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chuyển khoản"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bù trừ"
                        });
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountingCode")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<string>("ApprovedUserId")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<string>("CancellationReason")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<decimal>("CashTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CashierUserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ClearingId")
                        .HasColumnType("int");

                    b.Property<decimal>("ClearingTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Content")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("ContractCode")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedUserId")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<string>("CreatedUserName")
                        .HasColumnType("varchar(512) CHARACTER SET utf8mb4")
                        .HasMaxLength(512);

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyUnitCode")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<int>("CurrencyUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<decimal>("EquipmentTotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<double>("ExchangeRate")
                        .HasColumnType("double");

                    b.Property<DateTime>("ExchangeRateApplyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("FixedGrandTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GrandTotalBeforeTax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GrandTotalIncludeDebt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<int>("InContractId")
                        .HasColumnType("int");

                    b.Property<decimal>("InstallationFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("InvoiceCode")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("InvoiceReceivedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAutomaticGenerate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnterprise")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLock")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("IssuedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MarketAreaId")
                        .HasColumnType("int");

                    b.Property<string>("MarketAreaName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<int>("NumberBillingLimitDays")
                        .HasColumnType("int");

                    b.Property<int>("NumberDaysOverdue")
                        .HasColumnType("int");

                    b.Property<decimal>("OpeningDebtAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("OpeningDebtPaidAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("OrganizationUnitId")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<string>("OrganizationUnitName")
                        .HasColumnType("varchar(512) CHARACTER SET utf8mb4")
                        .HasMaxLength(512);

                    b.Property<decimal>("OtherFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PaidTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("PaymentApprovalUserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PaymentPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<decimal>("PromotionTotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ReductionFreeTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ReductionReason")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<decimal>("RemainingTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Source")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SubTotalBeforeTax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("TargetId")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("ClearingId");

                    b.HasIndex("OrganizationPath");

                    b.HasIndex("TargetId");

                    b.HasIndex("VoucherCode")
                        .IsUnique();

                    b.ToTable("PaymentVouchers");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucherDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyUnitCode")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<int>("CurrencyUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("DomesticBandwidth")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<DateTime?>("EndBillingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("EquipmentTotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GrandTotalBeforeTax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("HasDistinguishBandwidth")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasStartAndEndPoint")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<decimal>("InstallationFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("InternationalBandwidth")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsFirstDetailOfService")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("OffsetUpgradePackageAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<decimal>("OtherFeeTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("OutContractId")
                        .HasColumnType("int");

                    b.Property<string>("OutContractIds")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("OutContractServicePackageId")
                        .HasColumnType("int");

                    b.Property<decimal>("PackagePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("PaymentPeriod")
                        .HasColumnType("int");

                    b.Property<int>("PaymentVoucherId")
                        .HasColumnType("int")
                        .HasMaxLength(68);

                    b.Property<int?>("PaymentVoucherId1")
                        .HasColumnType("int");

                    b.Property<decimal>("ReductionFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<int?>("ServicePackageId")
                        .HasColumnType("int");

                    b.Property<string>("ServicePackageName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("StartBillingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SubTotalBeforeTax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<float>("TaxPercent")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalPerMonth")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationPath");

                    b.HasIndex("PaymentVoucherId");

                    b.HasIndex("PaymentVoucherId1");

                    b.ToTable("PaymentVoucherDetails");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucherPaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethodName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PaymentVoucherId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentVoucherId");

                    b.ToTable("PaymentVoucherPaymentDetails");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucherStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("PaymentVoucherStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Đang chờ xử lý"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Đã chuyển kế toán"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Đến hạn"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Quá hạn"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Đã thanh toán"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Kế toán từ chối"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Đã hủy"
                        });
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucherTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TaxCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TaxName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("TaxValue")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("PaymentVoucherTaxes");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.ReceiptVoucherInPaymentVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PaymentVoucherId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiptVoucherId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("ReceiptVoucherInPaymentVoucher");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.BusTablePricingCalculator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ChannelCid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ChannelId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsDomestic")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMainRcptVoucherLine")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("PricingType")
                        .HasColumnType("int");

                    b.Property<int>("ReceiptVoucherLineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartingBillingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("UsageData")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("UsageDataByBaseUnit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UsageDataUnit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptVoucherLineId");

                    b.ToTable("BusTablePricingCalculators");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ChannelPriceBusTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("BasedPriceValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("ChannelId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyUnitCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsDomestic")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PriceUnitUomId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceValue")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ReceiptVoucherLineId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("UsageBaseUomValueFrom")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("UsageBaseUomValueTo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("UsageValueFrom")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("UsageValueFromUomId")
                        .HasColumnType("int");

                    b.Property<decimal?>("UsageValueTo")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("UsageValueToUomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptVoucherLineId");

                    b.ToTable("ChannelPriceBusTables");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.PaymentVoucherLineTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAutomaticGenerate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PaymentVoucherLineId")
                        .HasColumnType("int");

                    b.Property<string>("TaxCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TaxName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("TaxValue")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("VoucherLineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentVoucherLineId");

                    b.ToTable("PaymentVoucherLineTaxes");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.PromotionForReceiptVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsApplied")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("NumberMonthApplied")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("OutContractServicePackageId")
                        .HasColumnType("int");

                    b.Property<int>("PromotionAmount")
                        .HasColumnType("int");

                    b.Property<int>("PromotionDetailId")
                        .HasColumnType("int");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int");

                    b.Property<string>("PromotionName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("PromotionType")
                        .HasColumnType("int");

                    b.Property<string>("PromotionTypeName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("PromotionValue")
                        .HasColumnType("int");

                    b.Property<int?>("PromotionValueType")
                        .HasColumnType("int");

                    b.Property<int>("ReceiptVoucherDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiptVoucherId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptVoucherId");

                    b.ToTable("PromotionForReceiptVoucher");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountingCode")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<string>("ApprovedUserId")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<string>("BadDebtApprovalContent")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<decimal>("CashTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("CashierCollectingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("CashierDebtRemaningTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("CashierReceivedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ClearingId")
                        .HasColumnType("int");

                    b.Property<decimal>("ClearingTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Content")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("ContractCode")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedUserId")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<string>("CreatedUserName")
                        .HasColumnType("varchar(512) CHARACTER SET utf8mb4")
                        .HasMaxLength(512);

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyUnitCode")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<int>("CurrencyUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<decimal>("DiscountAmountSuspendTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<decimal>("EquipmentTotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<double>("ExchangeRate")
                        .HasColumnType("double");

                    b.Property<DateTime>("ExchangeRateApplyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GrandTotalBeforeTax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GrandTotalIncludeDebt")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<decimal>("InstallationFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("InvalidIssuedDate")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("InvoiceCode")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("InvoiceReceivedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAutomaticGenerate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsBadDebt")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEnterprise")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsFirstVoucherOfContract")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsLock")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("IssuedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("MarketAreaId")
                        .HasColumnType("int");

                    b.Property<string>("MarketAreaName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<int>("NumberBillingLimitDays")
                        .HasColumnType("int");

                    b.Property<int>("NumberDaysOverdue")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDebtHistories")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfOpeningDebtHistories")
                        .HasColumnType("int");

                    b.Property<decimal>("OffsetUpgradePackageAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("OpeningDebtAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("OpeningDebtPaidAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("OrganizationUnitId")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<string>("OrganizationUnitName")
                        .HasColumnType("varchar(512) CHARACTER SET utf8mb4")
                        .HasMaxLength(512);

                    b.Property<decimal>("OtherFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("OutContractId")
                        .HasColumnType("int");

                    b.Property<decimal>("PaidTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PaymentPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<decimal>("PromotionTotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ReductionFreeTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ReductionReason")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<decimal>("RemainingTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Source")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SubTotalBeforeTax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TargetDebtRemaningTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("TargetId")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("ClearingId");

                    b.HasIndex("ContractCode");

                    b.HasIndex("CreatedDate");

                    b.HasIndex("GrandTotal");

                    b.HasIndex("IdentityGuid")
                        .IsUnique();

                    b.HasIndex("IssuedDate");

                    b.HasIndex("MarketAreaId");

                    b.HasIndex("OrganizationPath");

                    b.HasIndex("OrganizationUnitId");

                    b.HasIndex("OutContractId");

                    b.HasIndex("PaidTotal");

                    b.HasIndex("StatusId");

                    b.HasIndex("TargetId");

                    b.HasIndex("VoucherCode")
                        .IsUnique();

                    b.ToTable("ReceiptVouchers");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDebtHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CashierFullName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CashierUserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CashierUserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("CashingAccountedTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CashingPaidTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyUnitCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAutomaticGenerate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsOpeningDebtRecorded")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("IssuedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NumberOfPaymentDetails")
                        .HasColumnType("int");

                    b.Property<decimal>("OpeningCashierDebtTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("OpeningTargetDebtTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReceiptVoucherCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ReceiptVoucherContent")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ReceiptVoucherId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SubstituteVoucherId")
                        .HasColumnType("int");

                    b.Property<decimal>("TransferringAccountedTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TransferringPaidTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationPath");

                    b.HasIndex("ReceiptVoucherId");

                    b.HasIndex("SubstituteVoucherId");

                    b.ToTable("ReceiptVoucherDebtHistories");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("ConsumptionBasedPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyUnitCode")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<int>("CurrencyUnitId")
                        .HasColumnType("int");

                    b.Property<decimal>("DataUsage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("DataUsageUnit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("DiscountAmountSuspend")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("DomesticBandwidth")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<DateTime?>("EndBillingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("EquipmentTotalAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GrandTotalBeforeTax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("HasDistinguishBandwidth")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasStartAndEndPoint")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("IConsumptionBasedPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("IDataUsage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("IDataUsageUnit")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("IOverloadUsageDataPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("IUsageDataAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<decimal>("InstallationFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("InternationalBandwidth")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAutomaticGenerate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsFirstDetailOfService")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsJoinedPayment")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMainPaymentChannel")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsShow")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("OffsetUpgradePackageAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("OrgPackagePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<decimal>("OtherFeeTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("OutContractServicePackageId")
                        .HasColumnType("int");

                    b.Property<decimal>("OverloadUsageDataPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PackagePrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("PricingType")
                        .HasColumnType("int");

                    b.Property<decimal>("PromotionAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("ReceiptVoucherId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReductionFee")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("SPSuspensionTimeIds")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("ServiceName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<int?>("ServicePackageId")
                        .HasColumnType("int");

                    b.Property<string>("ServicePackageName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("StartBillingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SubTotalBeforeTax")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<float>("TaxPercent")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("UsageDataAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UsingMonths")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdentityGuid")
                        .IsUnique();

                    b.HasIndex("OrganizationPath");

                    b.HasIndex("ReceiptVoucherId");

                    b.ToTable("ReceiptVoucherDetails");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDetailReduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ReasonId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ReceiptVoucherDetailId")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiptVoucherId")
                        .HasColumnType("int");

                    b.Property<string>("ReductionReason")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("StopTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptVoucherDetailId");

                    b.ToTable("ReceiptVoucherDetailReductions");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherLineTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAutomaticGenerate")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TaxCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TaxName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("TaxValue")
                        .HasColumnType("float");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("VoucherLineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VoucherLineId");

                    b.ToTable("ReceiptVoucherLineTaxes");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherPaymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CashierUserId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CurrencyUnitCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DebtHistoryId")
                        .HasColumnType("int");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethodName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("ReceiptVoucherId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DebtHistoryId");

                    b.ToTable("ReceiptVoucherPaymentDetails");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ReceiptVoucherStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Đang chờ xử lý"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Thu hộ"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Đã chuyển kế toán"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Đã xuất hóa đơn"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Đã thu"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Đã hủy"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Đã xóa nợ xấu"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Nợ xấu"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Đã quá hạn thanh toán"
                        });
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ReceiptVoucherTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Phiếu thu lần đầu"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Phiếu thu cước định kỳ"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Phiếu thu tính cước không định kỳ"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Phiếu thu khác"
                        });
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.VoucherAutoGenerateHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Culture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("IdentityGuid")
                        .HasColumnType("varchar(68) CHARACTER SET utf8mb4")
                        .HasMaxLength(68);

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Message")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OrganizationPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("Records")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TryTimes")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("VoucherAutoGenerateHistories");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.BaseVoucher.VoucherTargetProperty", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.BaseVoucher.VoucherTarget", null)
                        .WithMany()
                        .HasForeignKey("TargetId");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ClearingAggregate.Clearing", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.BaseVoucher.VoucherTarget", null)
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DebtManagement.Domain.AggregatesModel.Commons.PaymentMethod", "Payment", b1 =>
                        {
                            b1.Property<int>("ClearingId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("BankAccount")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("BankBranch")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("BankName")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<int>("Form")
                                .HasColumnType("int");

                            b1.Property<int>("Method")
                                .HasColumnType("int");

                            b1.HasKey("ClearingId");

                            b1.ToTable("Clearings");

                            b1.WithOwner()
                                .HasForeignKey("ClearingId");
                        });
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.Commons.AttachmentFile", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.ClearingAggregate.Clearing", null)
                        .WithMany()
                        .HasForeignKey("ClearingVoucherId");

                    b.HasOne("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDetail", null)
                        .WithMany()
                        .HasForeignKey("ReceiptVoucherDetailId");

                    b.HasOne("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucher", null)
                        .WithMany("AttachmentFiles")
                        .HasForeignKey("ReceiptVoucherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucher", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.ClearingAggregate.Clearing", null)
                        .WithMany("PaymentVouchers")
                        .HasForeignKey("ClearingId");

                    b.HasOne("DebtManagement.Domain.AggregatesModel.BaseVoucher.VoucherTarget", null)
                        .WithMany()
                        .HasForeignKey("TargetId");

                    b.OwnsOne("DebtManagement.Domain.AggregatesModel.Commons.Discount", "Discount", b1 =>
                        {
                            b1.Property<int>("PaymentVoucherId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<float>("Percent")
                                .HasColumnType("float");

                            b1.Property<bool>("Type")
                                .HasColumnType("tinyint(1)");

                            b1.HasKey("PaymentVoucherId");

                            b1.ToTable("PaymentVouchers");

                            b1.WithOwner()
                                .HasForeignKey("PaymentVoucherId");
                        });

                    b.OwnsOne("DebtManagement.Domain.AggregatesModel.Commons.PaymentMethod", "Payment", b1 =>
                        {
                            b1.Property<int>("PaymentVoucherId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("BankAccount")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("BankBranch")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("BankName")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<int>("Form")
                                .HasColumnType("int");

                            b1.Property<int>("Method")
                                .HasColumnType("int");

                            b1.HasKey("PaymentVoucherId");

                            b1.ToTable("PaymentVouchers");

                            b1.WithOwner()
                                .HasForeignKey("PaymentVoucherId");
                        });
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucherDetail", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucher", null)
                        .WithMany("PaymentVoucherDetails")
                        .HasForeignKey("PaymentVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucher", "PaymentVoucher")
                        .WithMany()
                        .HasForeignKey("PaymentVoucherId1");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucherPaymentDetail", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucher", null)
                        .WithMany("PaymentDetails")
                        .HasForeignKey("PaymentVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucherTax", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucher", "PaymentVoucher")
                        .WithMany("PaymentVoucherTaxes")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.BusTablePricingCalculator", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDetail", null)
                        .WithMany("BusTablePricingCalculators")
                        .HasForeignKey("ReceiptVoucherLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ChannelPriceBusTable", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDetail", null)
                        .WithMany("PriceBusTables")
                        .HasForeignKey("ReceiptVoucherLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.PaymentVoucherLineTax", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.PaymentVoucherAggregate.PaymentVoucherDetail", "PaymentVoucherLine")
                        .WithMany("PaymentVoucherLineTaxes")
                        .HasForeignKey("PaymentVoucherLineId");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.PromotionForReceiptVoucher", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucher", "ReceiptVoucher")
                        .WithMany("PromotionForReceiptVoucher")
                        .HasForeignKey("ReceiptVoucherId");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucher", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.ClearingAggregate.Clearing", null)
                        .WithMany("ReceiptVouchers")
                        .HasForeignKey("ClearingId");

                    b.HasOne("DebtManagement.Domain.AggregatesModel.BaseVoucher.VoucherTarget", null)
                        .WithMany()
                        .HasForeignKey("TargetId");

                    b.OwnsOne("DebtManagement.Domain.AggregatesModel.Commons.Discount", "Discount", b1 =>
                        {
                            b1.Property<int>("ReceiptVoucherId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(65,30)");

                            b1.Property<float>("Percent")
                                .HasColumnType("float");

                            b1.Property<bool>("Type")
                                .HasColumnType("tinyint(1)");

                            b1.HasKey("ReceiptVoucherId");

                            b1.ToTable("ReceiptVouchers");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptVoucherId");
                        });

                    b.OwnsOne("DebtManagement.Domain.AggregatesModel.Commons.PaymentMethod", "Payment", b1 =>
                        {
                            b1.Property<int>("ReceiptVoucherId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("BankAccount")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("BankBranch")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("BankName")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<int>("Form")
                                .HasColumnType("int");

                            b1.Property<int>("Method")
                                .HasColumnType("int");

                            b1.HasKey("ReceiptVoucherId");

                            b1.ToTable("ReceiptVouchers");

                            b1.WithOwner()
                                .HasForeignKey("ReceiptVoucherId");
                        });
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDebtHistory", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucher", null)
                        .WithMany("DebtHistories")
                        .HasForeignKey("ReceiptVoucherId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucher", null)
                        .WithMany("OpeningDebtHistories")
                        .HasForeignKey("SubstituteVoucherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDetail", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucher", "ReceiptVoucher")
                        .WithMany("ReceiptVoucherDetails")
                        .HasForeignKey("ReceiptVoucherId");
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDetailReduction", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDetail", null)
                        .WithMany("ReceiptVoucherDetailReductions")
                        .HasForeignKey("ReceiptVoucherDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherLineTax", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDetail", "ReceiptVoucherLine")
                        .WithMany("ReceiptVoucherLineTaxes")
                        .HasForeignKey("VoucherLineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherPaymentDetail", b =>
                {
                    b.HasOne("DebtManagement.Domain.AggregatesModel.ReceiptVoucherAggregate.ReceiptVoucherDebtHistory", null)
                        .WithMany("PaymentDetails")
                        .HasForeignKey("DebtHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
